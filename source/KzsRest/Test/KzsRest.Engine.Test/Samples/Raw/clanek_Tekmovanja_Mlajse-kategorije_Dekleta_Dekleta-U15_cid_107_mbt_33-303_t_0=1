#Root#PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj48aGVhZD4KCTwhLS1baWYgbHQgSUUgNy5dPgoJPHNjcmlwdCBkZWZlciB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL3BuZ2ZpeC5qcyI+PC9zY3JpcHQ+Cgk8IVtlbmRpZl0tLT4KCiAJPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgoJCgkKCQk8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkRla2xldGEgVTE1Ij4KCQoJCgkKCQoJCgkJPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vd3d3Lmt6cy5zaS9pbWFnZXMvcHJvamVjdC9sb2dvLnBuZyI+CgkKCiAgCQoKCgoKCgoKCjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4KPG1ldGEgbmFtZT0icmF0aW5nIiBjb250ZW50PSJHZW5lcmFsIj4KPG1ldGEgbmFtZT0iYXV0aG9yIiBjb250ZW50PSJQZXJ1biBQcm8iPgo8bWV0YSBuYW1lPSJjb3B5cmlnaHQiIGNvbnRlbnQ9IiI+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4KCjxtZXRhIG5hbWU9Ikxhbmd1YWdlIiBjb250ZW50PSJzbG92ZW5pYW4iPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSJzbC1TSSI+CgoKCjxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiPgoKPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IiI+CgoKCgoKCgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvaW1hZ2VzL2Zhdmljb24ucG5nIj4JCiAgICA8dGl0bGU+S1pTIHwgRGVrbGV0YSBVMTU8L3RpdGxlPgogICAgCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiPgogICAgCiAgICA8c2NyaXB0IGFzeW5jPSIiIHNyYz0iLy93d3cuZ29vZ2xlLWFuYWx5dGljcy5jb20vYW5hbHl0aWNzLmpzIj48L3NjcmlwdD48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvanF1ZXJ5LTMuMi4xLm1pbi5qcyI+PC9zY3JpcHQ+Cgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvanF1ZXJ5LnVpL2pxdWVyeS11aS0xLjEyLjEuY3VzdG9tLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvZmFuY3lib3gvanF1ZXJ5LmZhbmN5Ym94LnBhY2suanMiPjwvc2NyaXB0PgogICAgCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvcHAtY29tbW9uLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9wcC1vYmplY3RzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9saW5rTWFuYWdlci5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvdXRmOC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvanNwL3RvcG5hdmlnYXRpb24uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL2xhbmcvcHB0X3NsLmpzIj48L3NjcmlwdD4KCQoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL3dpZGdldHMvYXBpLmpzIj48L3NjcmlwdD4KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy93aWRnZXRzL25ld19zY3JpcHQuanMiPjwvc2NyaXB0PgoJCgk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jc3MvanF1ZXJ5LnVpL2pxdWVyeS11aS0xLjEyLjEuY3VzdG9tLm1pbi5jc3MiPgoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL2pxdWVyeS51aS9qcXVlcnktdWktMS4xMi4xLnRoZW1lLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL2pxdWVyeS5mYW5jeWJveC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL2pxdWVyeS5mYW5jeWJveC1idXR0b25zLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jc3MvanF1ZXJ5LmZhbmN5Ym94LXRodW1icy5jc3MiPgogICAgCiAgICAKCQoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL2Nvb2tpZS5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL2llMTAtdmlld3BvcnQtYnVnLXdvcmthcm91bmQuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nzcy9renMuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nzcy9renMtY21zLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jc3Mvc3R5bGUuY3NzIj4KICAgIAoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY3NzL3dpZGdldHNfc3R5bGVfY3NzX21haW4uY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCI+CgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU5vdG8rU2FucyZhbXA7c3Vic2V0PWxhdGluLWV4dCIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgIAogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2NsYW5lay9UZWttb3ZhbmphL01sYWpzZS1rYXRlZ29yaWplL0Rla2xldGEvRGVrbGV0YS1VMTUvY2lkLzEwNyI+ICAgCiAgICAKCgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKKGZ1bmN0aW9uKGkscyxvLGcscixhLG0pe2lbJ0dvb2dsZUFuYWx5dGljc09iamVjdCddPXI7aVtyXT1pW3JdfHxmdW5jdGlvbigpewoJICAoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSwKCSAgbT1zLmdldEVsZW1lbnRzQnlUYWdOYW1lKG8pWzBdO2EuYXN5bmM9MTthLnNyYz1nO20ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxtKQoJfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwoKCWdhKCdjcmVhdGUnLCAnVUEtMjM5MDcyNDYtMScsICdhdXRvJyk7CglnYSgnc2VuZCcsICdwYWdldmlldycpOwo8L3NjcmlwdD4KIAo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSJodHRwczovL3dpZGdldHMuYmFza2V0aG90ZWwuY29tL2Nzcy5waHA/YXBpPTM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgmYW1wO2luZGV4PTAmYW1wO3Y9MTQ0Ij48L2hlYWQ+CQoKCgo8Ym9keSBjbGFzcz0ibmV3cy1kZXRhaWwtcGFnZSI+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CjwhLS0KdmFyIENMT1NFX09OX0NMSUNLID0gbnVsbDsKdmFyIENBTEVOREFSX0NMT1NFX09OX0NMSUNLID0gbnVsbDsKdmFyIENBTEVOREFSX0RBVEVfRk9STUFUID0gJyVkLiVtLiVZICVIOiVNJzsKdmFyIFVSTF9MQU5HID0gJ3NsJzsKCmpRdWVyeS5hamF4U2V0dGluZ3MudHJhZGl0aW9uYWwgPSB0cnVlOwoKLy9qUXVlcnkoZnVuY3Rpb24oKSB7alF1ZXJ5KGRvY3VtZW50KS50b29sdGlwKCk7fSk7Cgp2YXIgU0VUVElOR1MgPSBTRVRUSU5HU3x8e307CgovLy0tPgo8L3NjcmlwdD4KCgo8ZGl2IGlkPSJjb250YWluZXIiIGNsYXNzPSJhcnRpY2xlIj4KCgkKCgkKCgoKIAoKCgoKPGhlYWRlcj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIGNvbC14cy0xMiI+CiAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iLyI+PGltZyBzcmM9Ii9pbWFnZXMvcHJvamVjdC9sb2dvLnBuZyI+PC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEwIGNvbC14cy0xMiB0b3AtbWVudSI+CiAgICAgICAgPGEgaHJlZj0iL2NsYW5lay9QcmVub3NpL2NpZC8xNDIiIHN0eWxlPSJtYXJnaW4tbGVmdDowOyI+PGkgY2xhc3M9Imt6cy1jYW1lcmEiPjwvaT4gPHNwYW4+UHJlbm9zaTwvc3Bhbj48L2E+CiAgICAgICAgCiAgICAgICAgPGEgc3R5bGU9ImNvbG9yOiM5MzkzOTQ7IGN1cnNvcjogZGVmYXVsdDsiPjxpIGNsYXNzPSJrenMtbmtibSI+PC9pPiA8c3Bhbj5Lb8WhYXJrYXJza2EgYmFua2E8L3NwYW4+PC9hPgogICAgICAgIDxhIGhyZWY9Ii9jbGFuZWsvVHJnb3ZpbmEvY2lkLzE0MSI+PGkgY2xhc3M9Imt6cy1zaG9wIj48L2k+IDxzcGFuPlRyZ292aW5hPC9zcGFuPjwvYT4KICAgICAgICA8YSBocmVmPSIvY2xhbmVrL1ZzdG9wbmljZS9jaWQvMTUxIj48aSBjbGFzcz0ia3pzLXRpY2tldCI+PC9pPiA8c3Bhbj5Wc3RvcG5pY2U8L3NwYW4+PC9hPgogICAgICAgIDxhIGhyZWY9Ii9pemJlcmljbGFuc3R2byI+PGkgY2xhc3M9Imt6cy1iYWxsIj48L2k+IDxzcGFuPk5hdmlqYcSNaSNtb2p0aW08L3NwYW4+PC9hPgogICAgICAgIAoJCQk8YSBocmVmPSIvcHJpamF2YSI+PGRpdiBjbGFzcz0ia3pzLXByb2ZpbGUga3pzLXByb2ZpbGUtdW5yZWdpc3RlcmVkIj48L2Rpdj48L2E+CgkJCiAgICAgICAgCiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPG5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1pbnZlcnNlIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1ib290c3RyYXAiPgogICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4KICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im5hdmJhci10b2dnbGUgY29sbGFwc2VkIiBvbmNsaWNrPSJUb3BOYXYudG9nZ2xlTWVudSh0aGlzKTsiPgogICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPlRvZ2dsZSBuYXZpZ2F0aW9uPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0ibmF2YmFyIiBjbGFzcz0iY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIj4KICAgICAgCgkJPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBtYWluLW1lbnUiPjxsaSBjbGFzcz0iZHJvcGRvd24iPjxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiPk5vdmljZTwvYT48ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51Ij48ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhIGhyZWY9Ii9jbGFua2kvTm92aWNlL1Rla21vdmFuamEvaWQvNDEiPlRla21vdmFuamE8L2E+PHVsPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9UZWttb3ZhbmphL0xpZ2EtTm92YS1LQk0vaWQvMjkiPkxpZ2EgTm92YSBLQk08L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvVGVrbW92YW5qYS8xLi1TS0wtemEtemVuc2tlL2lkLzQyIj4xLiBTS0wgemEgxb5lbnNrZTwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9UZWttb3ZhbmphL1Bva2FsLVNwYXIvaWQvNDYiPlBva2FsIFNwYXI8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvVGVrbW92YW5qYS9Qb2thbC1jbGFuaWMvaWQvNDciPlBva2FsIMSNbGFuaWM8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvVGVrbW92YW5qYS8yLi1TS0wvaWQvNDMiPjIuIFNLTDwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9UZWttb3ZhbmphL01sYWpzZS1rYXRlZ29yaWplL2lkLzUwIj5EUCBtbGFqxaFpaCBrYXRlZ29yaWo8L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9SZXByZXplbnRhbmNlL2lkLzMwIj5SZXByZXplbnRhbmNlPC9hPjx1bD48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUmVwcmV6ZW50YW5jZS9DbGFuaS9pZC8zMSI+xIxsYW5pPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFua2kvTm92aWNlL1JlcHJlemVudGFuY2UvQ2xhbmljZS9pZC81NiI+xIxsYW5pY2U8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUmVwcmV6ZW50YW5jZS9GYW50amUtVTIwL2lkLzUxIj5GYW50amUgVTIwPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFua2kvTm92aWNlL1JlcHJlemVudGFuY2UvRmFudGplLVUxOC9pZC81MiI+RmFudGplIFUxODwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9SZXByZXplbnRhbmNlL0ZhbnRqZS1VMTYvaWQvNTMiPkZhbnRqZSBVMTY8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUyMC9pZC81NyI+RGVrbGV0YSBVMjA8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxOC9pZC81OCI+RGVrbGV0YSBVMTg8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxNi9pZC81OSI+RGVrbGV0YSBVMTY8L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YT5Qcm9qZWt0aTwvYT48dWw+PGxpPjxhIGhyZWY9Ii9jbGFua2kvTm92aWNlL0tvc2Fya2EtM3gzL2lkLzYzIj5Lb8WhYXJrYSAzeDM8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUHJvamVrdGkvVGFib3ItS1pTL2lkLzI1NCI+VGFib3IgS1pTPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFua2kvTm92aWNlL1Byb2pla3RpL0tvc2Fya2Fyc2tpLVN1cGVyc29sYXIvaWQvMTQ4Ij5Lb8WhYXJrYXJza2kgU3VwZXLFoW9sYXI8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5raS9Ob3ZpY2UvUHJvamVrdGkvVTE0LVNsb3ZlbmlhLUJhbGwvaWQvMjM0Ij5VMTQgU2xvdmVuaWEgQmFsbDwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9Qcm9qZWt0aS9SZWdpanNrby1zZWxla2Npb25pcmFuamUvaWQvMTYyIj5SZWdpanNrbyBzZWxla2Npb25pcmFuamU8L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmtpL05vdmljZS9Pc3RhbG8vaWQvNjQiPk9zdGFsbzwvYT48L2xpPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9ImRyb3Bkb3duIj48YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5UZWttb3ZhbmphPC9hPjxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPjxkaXYgY2xhc3M9ImNvbnRhaW5lci1ib290c3RyYXAiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL0xpZ2EtTm92YS1LQk0vY2lkLzY2Ij5MaWdhIE5vdmEgS0JNPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS8xLi1TS0wtemEtemVuc2tlL2NpZC82NyI+MS4gU0tMIHphIMW+ZW5za2U8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphLzIuLVNLTC9jaWQvNjgiPjIuIFNLTDwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvMy4tU0tML2NpZC82OSI+My4gU0tMPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS80Li1TS0wvY2lkLzcwIj40LiBTS0w8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9Qb2thbC1TcGFyL2NpZC83MiI+UG9rYWwgU3BhcjwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvUG9rYWwtY2xhbmljL2NpZC83MyI+UG9rYWwgxIxsYW5pYzwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvU3VwZXJwb2thbC1TbG92ZW5pamUvY2lkLzc3Ij5TdXBlcnBva2FsIFNsb3ZlbmlqZTwvYT48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9SYXpwb3JlZC1pbi1yZXp1bHRhdGktdnNlaC10ZWtlbS9jaWQvMzQ3Ij5Wc2UgdGVrbWU8L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YT5NbGFqxaFlIGthdGVnb3JpamUgLSBmYW50amU8L2E+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvTWxhanNlLWthdGVnb3JpamUvRmFudGplL0ZhbnRqZS1VMTkvY2lkLzk5Ij5VMTk8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL01sYWpzZS1rYXRlZ29yaWplL0ZhbnRqZS9GYW50amUtVTE3L2NpZC8xMDAiPlUxNzwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvTWxhanNlLWthdGVnb3JpamUvRmFudGplL0ZhbnRqZS1VMTUvY2lkLzEwMSI+VTE1PC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9NbGFqc2Uta2F0ZWdvcmlqZS9GYW50amUvRmFudGplLVUxMy9jaWQvMTAyIj5VMTM8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL01pbmktcG9rYWwtU3Bhci9jaWQvNzQiPk1pbmkgcG9rYWwgU3BhcjwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvTWxhanNlLWthdGVnb3JpamUvRmFudGplL0ZhbnRqZS1VMTEvY2lkLzEwMyI+VTExPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9NbGFqc2Uta2F0ZWdvcmlqZS9GYW50amUtaW4tZGVrbGV0YS1VOS9jaWQvMTA0Ij5VOTwvYT48L2xpPjwvdWw+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhPk1sYWrFoWUga2F0ZWdvcmlqZSAtIGRla2xldGE8L2E+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvTWxhanNlLWthdGVnb3JpamUvRGVrbGV0YS9EZWtsZXRhLVUxOS9jaWQvMTA1Ij5VMTk8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL01sYWpzZS1rYXRlZ29yaWplL0Rla2xldGEvRGVrbGV0YS1VMTcvY2lkLzEwNiI+VTE3PC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9NbGFqc2Uta2F0ZWdvcmlqZS9EZWtsZXRhL0Rla2xldGEtVTE1L2NpZC8xMDciPlUxNTwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1Rla21vdmFuamEvTWxhanNlLWthdGVnb3JpamUvRGVrbGV0YS9EZWtsZXRhLVUxMy9jaWQvMTA4Ij5VMTM8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL01pbmktcG9rYWwtZGVrbGV0L2NpZC83NSI+TWluaSBwb2thbCBkZWtsZXQ8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9UZWttb3ZhbmphL01sYWpzZS1rYXRlZ29yaWplL0Rla2xldGEvRGVrbGV0YS1VMTEvY2lkLzEwOSI+VTExPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvVGVrbW92YW5qYS9NbGFqc2Uta2F0ZWdvcmlqZS9GYW50amUtaW4tZGVrbGV0YS1VOS9jaWQvMTA0Ij5VOTwvYT48L2xpPjwvdWw+PC9saT48L3VsPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJkcm9wZG93biI+PGEgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSI+UmVwcmV6ZW50YW5jZTwvYT48ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51Ij48ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9DbGFuaS9jaWQvMzciPsSMbGFuaTwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1JlcHJlemVudGFuY2UvQ2xhbmktQi9jaWQvMTY1Ij7EjGxhbmkgQjwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1JlcHJlemVudGFuY2UvQ2xhbmljZS9jaWQvODMiPsSMbGFuaWNlPC9hPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrL1JlcHJlemVudGFuY2UvRmFudGplLVUyMC9jaWQvNzgiPkZhbnRqZSBVMjA8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9SZXByZXplbnRhbmNlL0ZhbnRqZS1VMTgvY2lkLzc5Ij5GYW50amUgVTE4PC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9GYW50amUtVTE2L2NpZC84MCI+RmFudGplIFUxNjwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL1JlcHJlemVudGFuY2UvRmFudGplLVUxNC9jaWQvODIiPkZhbnRqZSBVMTQ8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUyMC9jaWQvODQiPkRla2xldGEgVTIwPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxOC9jaWQvODUiPkRla2xldGEgVTE4PC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxNi9jaWQvODYiPkRla2xldGEgVTE2PC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxNC9jaWQvODgiPkRla2xldGEgVTE0PC9hPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9ImRyb3Bkb3duIj48YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5Qcm9qZWt0aTwvYT48ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51Ij48ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02IGNvbC14cy02IGV2ZW50LW1lbnUiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXh4cy0xMiBjb2wteHMtNiBjb2wtc20tNiBjb2wtbWQtNiI+PGEgY2xhc3M9Im1lbnUtaW1nIiBocmVmPSIvY2xhbmVrL1Byb2pla3RpL0lncml2YS1rb3NhcmthL2NpZC85MSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzY0MjAvcncvMjAwL3JoLzIwMC9ycC90cnVlL3JkL3RydWUvd20vMC9oLzcyNzAwOCI+PHNwYW4+SWdyaXZhIGtvxaFhcmthPC9zcGFuPjwvYT48L2Rpdj48ZGl2IGNsYXNzPSJjb2wteHhzLTEyIGNvbC14cy02IGNvbC1zbS02IGNvbC1tZC02Ij48YSBjbGFzcz0ibWVudS1pbWciIGhyZWY9Ii9jbGFuZWsvUHJvamVrdGkvTGlwa28vY2lkLzE1NSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzY0MjEvcncvMjAwL3JoLzIwMC9ycC90cnVlL3JkL3RydWUvd20vMC9oL2VjNmJjNiI+PHNwYW4+TGlwa288L3NwYW4+PC9hPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02IGNvbC14cy02IGV2ZW50LW1lbnUiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXh4cy0xMiBjb2wteHMtNiBjb2wtc20tNiBjb2wtbWQtNiI+PGEgY2xhc3M9Im1lbnUtaW1nIiBocmVmPSIvY2xhbmVrL1Byb2pla3RpL1JlZ2lqc2tvLXNlbGVrY2lvbmlyYW5qZS9jaWQvOTMiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC82NDIyL3J3LzIwMC9yaC8yMDAvcnAvdHJ1ZS9yZC90cnVlL3dtLzAvaC84YjMzOTQiPjxzcGFuPlJlZ2lqc2tvIHNlbGVrY2lvbmlyYW5qZTwvc3Bhbj48L2E+PC9kaXY+PGRpdiBjbGFzcz0iY29sLXh4cy0xMiBjb2wteHMtNiBjb2wtc20tNiBjb2wtbWQtNiI+PGEgY2xhc3M9Im1lbnUtaW1nIiBocmVmPSIvY2xhbmVrL1Byb2pla3RpL0taUy10YWJvci9jaWQvOTIiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC82NDIzL3J3LzIwMC9yaC8yMDAvcnAvdHJ1ZS9yZC90cnVlL3dtLzAvaC83YTBlNjkiPjxzcGFuPlRhYm9yaSBLWlM8L3NwYW4+PC9hPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02IGNvbC14cy02IGV2ZW50LW1lbnUiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXh4cy0xMiBjb2wteHMtNiBjb2wtc20tNiBjb2wtbWQtNiI+PGEgY2xhc3M9Im1lbnUtaW1nIiBocmVmPSIvY2xhbmVrL1Byb2pla3RpL0tvc2Fya2Fyc2tpLXN1cGVyc29sYXIvY2lkLzk0Ij48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNjQyNC9ydy8yMDAvcmgvMjAwL3JwL3RydWUvcmQvdHJ1ZS93bS8wL2gvNjZiODhkIj48c3Bhbj5Lb8WhYXJrYXJza2kgc3VwZXLFoW9sYXI8L3NwYW4+PC9hPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC14eHMtMTIgY29sLXhzLTYgY29sLXNtLTYgY29sLW1kLTYiPjxhIGNsYXNzPSJtZW51LWltZyIgaHJlZj0iL2NsYW5lay9Qcm9qZWt0aS9VMTQtU2xvdmVuaWEtQmFsbC9jaWQvOTUiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC82NDI4L3J3LzIwMC9yaC8yMDAvcnAvdHJ1ZS9yZC90cnVlL3dtLzAvaC9iYTc4M2EiPjxzcGFuPlUxNCBTbG92ZW5pYSBCYWxsPC9zcGFuPjwvYT48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiBjb2wteHMtNiBldmVudC1tZW51Ij48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC14eHMtMTIgY29sLXhzLTYgY29sLXNtLTYgY29sLW1kLTYiPjxhIGNsYXNzPSJtZW51LWltZyIgaHJlZj0iL2NsYW5lay9Qcm9qZWt0aS9EYW4tc2xvdmVuc2tlLWtvc2Fya2UvY2lkLzk2Ij48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNjQyNS9ydy8yMDAvcmgvMjAwL3JwL3RydWUvcmQvdHJ1ZS93bS8wL2gvNzgxYjkwIj48c3Bhbj5EYW4gc2xvdmVuc2tlIGtvxaFhcmtlPC9zcGFuPjwvYT48L2Rpdj48ZGl2IGNsYXNzPSJjb2wteHhzLTEyIGNvbC14cy02IGNvbC1zbS02IGNvbC1tZC02Ij48YSBjbGFzcz0ibWVudS1pbWciIGhyZWY9Ii9jbGFuZWsvUHJvamVrdGkvUG9rYWwtRXVyb2Jhc2tldC0yMDE3L2NpZC8yMDAiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC82NDI2L3J3LzIwMC9yaC8yMDAvcnAvdHJ1ZS9yZC90cnVlL3dtLzAvaC8yNTFlZTAiPjxzcGFuPlBva2FsIEV1cm9iYXNrZXQgMjAxNzwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9ImRyb3Bkb3duIj48YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5Lb8WhYXJrYSAzeDM8L2E+PGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSI+PGRpdiBjbGFzcz0iY29udGFpbmVyLWJvb3RzdHJhcCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrLzN4My9PLTN4My9jaWQvMjA3Ij5PIDN4MzwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrLzN4My9QcmF2aWxhL2NpZC8zNzIiPlByYXZpbGE8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay8zeDMvUmVwcmV6ZW50YW5jZS9jaWQvMzQ1Ij5SZXByZXplbnRhbmNlPC9hPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrLzN4My9Hcm9zYmFza2V0LURQL2NpZC8yMDkiPkdyb3NiYXNrZXQgRFA8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuM3gzbGp1YmxqYW5hY2hhbGxlbmdlci5jb20vIiB0YXJnZXQ9Il9ibGFuayI+TGp1YmxqYW5hIENoYWxsZW5nZXI8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay8zeDMvTWVkbmFyLi1rbHVic2thLXRla20uL2NpZC8zNjAiPk1lZG5hcm9kbmEga2x1YnNrYSB0ZWttb3ZhbmphPC9hPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrLzN4My9Mb2thbGNpL2NpZC8yMDgiPkxva2FsbmkgdHVybmlyamk8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0iZHJvcGRvd24iPjxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiPk9yZ2FuaXphY2lqYTwvYT48ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51Ij48ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL1ZzZS1vLUtaUy9jaWQvMTI1Ij5Wc2UgbyBLWlM8L2E+PC9saT48bGk+PGE+xIxsYW5pIGluIG9yZ2FuaTwvYT48dWw+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0NsYW5pLWluLW9yZ2FuaS9PcmdhbmkvY2lkLzEyNyI+T3JnYW5pPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0NsYW5pLWluLW9yZ2FuaS9DbGFuaS9jaWQvMTI4Ij7EjGxhbmk8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9Pcmdhbml6YWNpamEvQ2xhbmktaW4tb3JnYW5pL1pkcnV6ZW5qYS9jaWQvMTI5Ij5aZHJ1xb5lbmphPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0NsYW5pLWluLW9yZ2FuaS9TdGFsbmUta29taXNpamUvY2lkLzE0MyI+U3RhbG5lIGtvbWlzaWplPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0NsYW5pLWluLW9yZ2FuaS9MaWNlbmNpcmFuamUvY2lkLzE1MiI+TGljZW5jaXJhbmplPC9hPjwvbGk+PC91bD48L2xpPjwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48bGk+PGE+RG9rdW1lbnRpPC9hPjx1bD48bGk+PGEgaHJlZj0iL2NsYW5lay9Pcmdhbml6YWNpamEvRG9rdW1lbnRpL1ByYXZpbG5pa2kvY2lkLzEzNSI+UHJhdmlsbmlraTwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL09yZ2FuaXphY2lqYS9Eb2t1bWVudGkvRG9rdW1lbnRpL2NpZC8xMzYiPkRva3VtZW50aTwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL09yZ2FuaXphY2lqYS9Eb2t1bWVudGkvT2JyYXpjaS9jaWQvMTM3Ij5PYnJhemNpPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0Rva3VtZW50aS9SYXpwaXNpL2NpZC8xNTMiPlJhenBpc2k8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9Pcmdhbml6YWNpamEvRG9rdW1lbnRpL1ZvZGVuamUtc3RhdGlzdGlrZS9jaWQvMTM4Ij5Wb2RlbmplIHN0YXRpc3Rpa2U8L2E+PC9saT48bGk+PGEgaHJlZj0iL2NsYW5lay9Pcmdhbml6YWNpamEvRG9rdW1lbnRpL1NlbWluYXJqaS16YS1wb21vem5lLXNvZG5pa2UvY2lkLzQxMCI+U2VtaW5hcmppIHphIHBvbW/Fvm5lIHNvZG5pa2U8L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrL09yZ2FuaXphY2lqYS9JbnRlZ3JpdGV0YS1pbi16YXNjaXRhLWlncmUvY2lkLzQwMCI+SW50ZWdyaXRldGEgaW4gemHFocSNaXRhIGlncmU8L2E+PHVsPjxsaT48YSBocmVmPSIvY2xhbmVrL09yZ2FuaXphY2lqYS9JbnRlZ3JpdGV0YS1pbi16YXNjaXRhLWlncmUvU3Bvcm9jaWxvLXByZWRzZWRuaWthLUtaUy9jaWQvNDAxIj5TcG9yb8SNaWxvIHByZWRzZWRuaWthIEtaUzwvYT48L2xpPjxsaT48YSBocmVmPSIvY2xhbmVrL09yZ2FuaXphY2lqYS9JbnRlZ3JpdGV0YS1pbi16YXNjaXRhLWlncmUvS29kZWtzLWludGVncml0ZXRlLUtaUy9jaWQvNDAyIj5Lb2Rla3MgaW50ZWdyaXRldGUgS1pTPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHBzOi8vYW5vbmltbmFwcmlqYXZhLmt6cy5zaS8iIHRhcmdldD0iX2JsYW5rIj5Bbm9uaW1uYSBwcmlqYXZhPC9hPjwvbGk+PC91bD48L2xpPjwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48bGk+PGEgaHJlZj0iL2NsYW5lay9Pcmdhbml6YWNpamEvQmlsdGVuaS9jaWQvMTMyIj5CaWx0ZW5pPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL0xvZ290aXBpL2NpZC8xMzAiPkxvZ290aXBpPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii9jbGFuZWsvT3JnYW5pemFjaWphL1BvdmV6YXZlL2NpZC8xMzMiPlBvdmV6YXZlPC9hPjwvbGk+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0iZHJvcGRvd24iPjxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiPkFub24uIHByaWphdmE8L2E+PGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSI+PGRpdiBjbGFzcz0iY29udGFpbmVyLWJvb3RzdHJhcCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjxsaT48YSBocmVmPSJodHRwczovL2Fub25pbW5hcHJpamF2YS5renMuc2kvIiB0YXJnZXQ9Il9ibGFuayI+QW5vbi4gcHJpamF2YTwvYT48L2xpPjwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9ImRyb3Bkb3duIj48YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIj5CaXpCYXNrZXQgM3gzPC9hPjxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUiPjxkaXYgY2xhc3M9ImNvbnRhaW5lci1ib290c3RyYXAiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48bGk+PGEgaHJlZj0iL2NsYW5lay9CaXpCYXNrZXQtM3gzL2NpZC80MTEiPkJpekJhc2tldCAzeDM8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02Ij48dWw+PC91bD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiI+PHVsPjwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTYiPjx1bD48L3VsPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+PC91bD4KCQkKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewoJalF1ZXJ5KCd1bC5uYXYgbGkuZHJvcGRvd24nKS5ob3ZlcihmdW5jdGlvbigpIHsKCQlqUXVlcnkodGhpcykuZmluZCgnLmRyb3Bkb3duLW1lbnUnKS5zdG9wKHRydWUsIHRydWUpLmRlbGF5KDEwMCkuZmFkZUluKDMwMCk7CgkJfSwgZnVuY3Rpb24oKSB7CgkJCWpRdWVyeSh0aGlzKS5maW5kKCcuZHJvcGRvd24tbWVudScpLnN0b3AodHJ1ZSwgdHJ1ZSkuZGVsYXkoMTAwKS5mYWRlT3V0KDMwMCk7CgkJfSk7Cn0pOwo8L3NjcmlwdD4KICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCBoZWFkZXItc2VhcmNoIj4KICAgICAgICAgIDxmb3JtIGNsYXNzPSJuYXZiYXItZm9ybSBuYXZiYXItbGVmdCIgcm9sZT0ic2VhcmNoIiBhY3Rpb249Ii9pc2thbmplIiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJzZWFyY2gtYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBvbmNsaWNrPSJyZXR1cm4gVG9wTmF2Lm9uU2VhcmNoT3BlbkNsaWNrKHRoaXMpOyI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgIDxkaXYgaWQ9InNlYXJjaC1mb3JtIiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9InNlYXJjaFF1ZXJ5IiBvbmtleWRvd249IkNvbW1vbi5zdWJtaXRDbG9zZXN0Rm9ybU9uRW50ZXIodGhpcywgZXZlbnQsICdzZWFyY2gnKTsiIHBsYWNlaG9sZGVyPSJJc2thbmplIGtsdWJvdiI+CiAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic2VhcmNoLWljb24iIGNsYXNzPSJpbnB1dC1ncm91cC1hZGRvbiIgb25jbGljaz0iY29tbW9uU3VibWl0Q2xvc2VzdEZvcm0odGhpcywgJ3NlYXJjaCcpIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PjwhLS0gL2lucHV0LWdyb3VwIC0tPgoKICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IHNvY2lhbC1tZW51Ij4KICAgICAgICAgIDxsaT48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9renNfc2kvIj48aSBjbGFzcz0ia3pzLWluc3RhZ3JhbSI+PC9pPjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL2t6c3Nsb2Jhc2tldCI+PGkgY2xhc3M9Imt6cy12aWRlby1hbHQiPjwvaT48L2E+PC9saT4KICAgICAgICAgIDxsaT48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2tvc3p2ZXphLyI+PGkgY2xhc3M9Imt6cy1mYWNlYm9vayI+PC9pPjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2t6c19zaSI+PGkgY2xhc3M9Imt6cy10d2l0dGVyIj48L2k+PC9hPjwvbGk+CiAgICAgICAgPC91bD4KCiAgICAgIDwvZGl2PjwhLS0vLm5hdi1jb2xsYXBzZSAtLT4KICAgIDwvZGl2PgogIDwvbmF2Pgo8L2hlYWRlcj4KCjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTEyIGltYWdlIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNDA5MC93bS8wL2gvZGNmNjM0Ij48L2Rpdj48L2Rpdj4KCQoJPGRpdiBpZD0ibWFpbiIgY2xhc3M9IiI+PCEtLW1pZGRsZSBwYXJ0cyBzdGFydHMtLT4KCQk8ZGl2IGNsYXNzPSIiPgoJCQk8ZGl2IGNsYXNzPSIiPgoKCQkJCQoKCgoJCQoJCQkJCgoKCgoKCgoKPCEtLSBqYXZhc2NyaXB0IGNoZWNrIC0tPgo8bm9zY3JpcHQ+CiAgICAmbHQ7ZGl2IGNsYXNzPSJlcnJvcm1lc3NhZ2UiJmd0O1phIHByYXZpbG5vIGRlbG92YW5qZSBtb3JhdGUgaW1ldGkgdiBicnNrYWxuaWt1IG9tb2dvxI1lbiBKYXZhU2NyaXB0Jmx0Oy9kaXYmZ3Q7Cjwvbm9zY3JpcHQ+CjwhLS0gY29va2llcyBjaGVjayAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgalF1ZXJ5KGZ1bmN0aW9uKCkgewogICAgICAgIGlmICghYXJlQ29va2llc0VuYWJsZWQoKSkgewogICAgICAgICAgICBhZGRFcnJvck1lc3NhZ2UoJ1phIHByYXZpbG5vIGRlbG92YW5qZSBtb3JhdGUgaW1ldGkgdiBicnNrYWxuaWt1IG9tb2dvxI1lbmUgcGnFoWtvdGtlIChjb29raWVzKScpOwogICAgICAgIH0KICAgIH0pOwo8L3NjcmlwdD4KCgo8ZGl2IGlkPSJpbmZvbWVzc2FnZV90ZW1wbGF0ZSIgY2xhc3M9ImluZm9tZXNzYWdlIGhpZGRlbiIgb25jbGljaz0ialF1ZXJ5KHRoaXMpLmZhZGVPdXQoKSI+PC9kaXY+CjxkaXYgaWQ9ImVycm9ybWVzc2FnZV90ZW1wbGF0ZSIgY2xhc3M9ImVycm9ybWVzc2FnZSBoaWRkZW4iIG9uY2xpY2s9ImpRdWVyeSh0aGlzKS5mYWRlT3V0KCkiPjwvZGl2PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpmdW5jdGlvbiBhZGRJbmZvTWVzc2FnZShtZXNzYWdlKSB7Cgl2YXIgaW5mb20gPSBqUXVlcnkoIiNpbmZvbWVzc2FnZV90ZW1wbGF0ZSIpLmNsb25lKCkucmVtb3ZlQ2xhc3MoImhpZGRlbiIpLnJlbW92ZUF0dHIoImlkIikuaHRtbChtZXNzYWdlKTsKCWpRdWVyeSgiI2luZm9tZXNzYWdlX3RlbXBsYXRlIikuYmVmb3JlKGluZm9tKTsKfQpmdW5jdGlvbiBhZGRFcnJvck1lc3NhZ2UobWVzc2FnZSkgewoJdmFyIGVycm9ybSA9IGpRdWVyeSgiI2Vycm9ybWVzc2FnZV90ZW1wbGF0ZSIpLmNsb25lKCkucmVtb3ZlQ2xhc3MoImhpZGRlbiIpLnJlbW92ZUF0dHIoImlkIikuaHRtbChtZXNzYWdlKTsKCWpRdWVyeSgiI2Vycm9ybWVzc2FnZV90ZW1wbGF0ZSIpLmJlZm9yZShlcnJvcm0pOwp9CiAgICAKICAgIGZ1bmN0aW9uIGNyZWF0ZUNvb2tpZShuYW1lLCB2YWx1ZSwgZGF5cykgewogICAgICAgIHZhciBleHBpcmVzOwogICAgICAgIGlmIChkYXlzKSB7CiAgICAgICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgKGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7CiAgICAgICAgICAgIGV4cGlyZXMgPSAiOyBleHBpcmVzPSIgKyBkYXRlLnRvR01UU3RyaW5nKCk7CiAgICAgICAgfQogICAgICAgIGVsc2UgZXhwaXJlcyA9ICIiOwogICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IG5hbWUgKyAiPSIgKyB2YWx1ZSArIGV4cGlyZXMgKyAiOyBwYXRoPS8iOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlYWRDb29raWUobmFtZSkgewogICAgICAgIHZhciBuYW1lRVEgPSBuYW1lICsgIj0iOwogICAgICAgIHZhciBjYSA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2EubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIGMgPSBjYVtpXTsKICAgICAgICAgICAgd2hpbGUgKGMuY2hhckF0KDApID09ICcgJykgYyA9IGMuc3Vic3RyaW5nKDEsIGMubGVuZ3RoKTsKICAgICAgICAgICAgaWYgKGMuaW5kZXhPZihuYW1lRVEpID09IDApIHJldHVybiBjLnN1YnN0cmluZyhuYW1lRVEubGVuZ3RoLCBjLmxlbmd0aCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBudWxsOwogICAgfQoKICAgIGZ1bmN0aW9uIGVyYXNlQ29va2llKG5hbWUpIHsKICAgICAgICBjcmVhdGVDb29raWUobmFtZSwgIiIsIC0xKTsKICAgIH0KCiAgICBmdW5jdGlvbiBhcmVDb29raWVzRW5hYmxlZCgpIHsKICAgICAgICB2YXIgciA9IGZhbHNlOwogICAgICAgIGNyZWF0ZUNvb2tpZSgidGVzdGluZyIsICJIZWxsbyIsIDEpOwogICAgICAgIGlmIChyZWFkQ29va2llKCJ0ZXN0aW5nIikgIT0gbnVsbCkgewogICAgICAgICAgICByID0gdHJ1ZTsKICAgICAgICAgICAgZXJhc2VDb29raWUoInRlc3RpbmciKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHI7CiAgICB9ICAgICAgICAKPC9zY3JpcHQ+CgoJCgkJCQoJCQkJCQkJCgo8ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj48ZGl2IGNsYXNzPSJyb3cgIj48ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPjxoMT5EZWtsZXRhIFUxNTwvaDE+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iY29udGFpbmVyLWJvb3RzdHJhcCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSIgYXJ0LWNvbnRlbnQiPjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+Cgk8ZGl2IGlkPSJzY2hlZHVsZSIgbWJ0X3dpZGdldD0iMzAzIj48ZGl2IGlkPSJtYnQtdjItc2NoZWR1bGUtbG9uZyIgY2xhc3M9Im1idC12Mi13aWRnZXQiPgoJPGRpdiBjbGFzcz0ibWJ0LXYyLWhlYWRlciI+CgkJCQkJUmF6cG9yZWQgaW4gcmV6dWx0YXRpCgkJCTwvZGl2PgoJPGRpdiBjbGFzcz0ibWJ0LXYyLXdpZGdldC1jb250ZW50Ij4KCQk8ZGl2IGlkPSIzMy0zMDMtbW9iaWxlLW1lbnUiIGNsYXNzPSJtYnQtdjItbW9iaWxlLW1lbnUiPgoJCQlSYXpwb3JlZAoJCTwvZGl2PgoJCTxuYXYgaWQ9IjMzLTMwMy1tYnQtdjItbmF2aWdhdGlvbiIgY2xhc3M9Im1idC12Mi1uYXZpZ2F0aW9uIj4KCQkJCQkJPGRpdiBpZD0iMzMtMzAzLXRhYi0xIiBkYXRhLW5hbWU9InNjaGVkdWxlX2FuZF9yZXN1bHRzIiBkYXRhLXR5cGU9InNjaGVkdWxlX29ubHkiIGNsYXNzPSJtYnQtdjItbmF2aWdhdGlvbi10YWIiPgoJCQkJUmF6cG9yZWQKCQkJPC9kaXY+CgkJCTxkaXYgaWQ9IjMzLTMwMy10YWItMiIgZGF0YS1uYW1lPSJzY2hlZHVsZV9hbmRfcmVzdWx0cyIgZGF0YS10eXBlPSJyZXN1bHRzX29ubHkiIGNsYXNzPSJtYnQtdjItbmF2aWdhdGlvbi10YWItYWN0aXZlIiBwcmV2Y2xhc3NuYW1lPSJtYnQtdjItbmF2aWdhdGlvbi10YWItYWN0aXZlIj4KCQkJCVJlenVsdGF0aQoJCQk8L2Rpdj4KCQk8L25hdj4KCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJPGRpdiBpZD0iMzMtMzAzLW1vYmlsZS1maWx0ZXJzLWJsb2NrIiBjbGFzcz0ibWJ0LXYyLW1vYmlsZS1maWx0ZXJzLWJsb2NrIj4KCQkJRmlsdHJpCgkJPC9kaXY+CgkJPGRpdiBpZD0iMzMtMzAzLWZpbHRlcnMtYmxvY2siIGNsYXNzPSJtYnQtdjItZmlsdGVycy1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSIzMy0zMDMtZmlsdGVyLXNlYXNvbiIgY2xhc3M9Im1idC12Mi1zZWxlY3QiPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjEwMjU3NSIgc2VsZWN0ZWQ9InNlbGVjdGVkIj4KCQkJCQkJCTIwMTgtMjAxOQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI5NzkxMyI+CgkJCQkJCQkyMDE3LTIwMTgKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iOTM5NzciPgoJCQkJCQkJMjAxNi0yMDE3CgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjkxMDYzIj4KCQkJCQkJCTIwMTUtMjAxNgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI4OTU2OSI+CgkJCQkJCQkyMDE0LTIwMTUKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iODAwNjEiPgoJCQkJCQkJMjAxMy0yMDE0CgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQyMDMzIj4KCQkJCQkJCTIwMTItMjAxMwoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxODE4MyI+CgkJCQkJCQkyMDExLTIwMTIKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICAJCQkJPHNlbGVjdCBpZD0iMzMtMzAzLWZpbHRlci1zdGFnZSIgZGF0YS1maWx0ZXI9InN0YWdlIiBkYXRhLWxvYWQ9ImdldC1zdGFnZXMiIGNsYXNzPSJtYnQtdjItc2VsZWN0Ij4KCQkJCQk8b3B0aW9uIHZhbHVlPSIiPgoJCQkJCQlWc2kgZGVsaSB0ZWttb3ZhbmphCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjA2ODUxIj4KCQkJCQkJCTEuIGRlbAoJCQkJCQk8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjA5MzMzIj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMS4gZGVsLVNrdXBpbmEgMQoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwOTMzMSI+CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEuIGRlbC1Ta3VwaW5hIDIKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDkzMjkiPgoJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLiBkZWwtU2t1cGluYSAzCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjA5MzI3Ij4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMS4gZGVsLVNrdXBpbmEgNAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwOTMyNSI+CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEuIGRlbC1Ta3VwaW5hIDUKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDkzMjMiPgoJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLiBkZWwtU2t1cGluYSA2CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjA5MzIxIj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMS4gZGVsLVNrdXBpbmEgNwoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwOTMxOSI+CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEuIGRlbC1Ta3VwaW5hIDgKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCQkJCQk8c2VsZWN0IGlkPSIzMy0zMDMtZmlsdGVyLWdhbWUtZGF5IiBkYXRhLWZpbHRlcj0iZ2FtZV9kYXkiIGRhdGEtbG9hZD0iZ2V0LWdhbWUtZGF5cyIgY2xhc3M9Im1idC12Mi1zZWxlY3QiPgoJCQkJCTxvcHRpb24gdmFsdWU9IiI+CgkJCQkJCUtvbG8KCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxIj4KCQkJCQkJCTEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMiI+CgkJCQkJCQkyCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjMiPgoJCQkJCQkJMwoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0Ij4KCQkJCQkJCTQKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNSI+CgkJCQkJCQk1CgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjYiPgoJCQkJCQkJNgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPC9zZWxlY3Q+CQoJCQkJCQkJCQkJPHNlbGVjdCBpZD0iMzMtMzAzLWZpbHRlci10ZWFtIiBkYXRhLWZpbHRlcj0idGVhbSIgZGF0YS1sb2FkPSJnZXQtdGVhbXMiIGNsYXNzPSJtYnQtdjItc2VsZWN0Ij4KCQkJCQk8b3B0aW9uIHZhbHVlPSIiPgoJCQkJCQlFa2lwYQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2MzkzMyI+CgkJCQkJCQlBa3NvbiBJbGlyaWphIEEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzOTQzIj4KCQkJCQkJCUFrc29uIElsaXJpamEgQgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjMzMzUxIj4KCQkJCQkJCUNlcmtuaWNhCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2Mzg4MyI+CgkJCQkJCQlDaW5rYXJuYSBDZWxqZQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjQ2MjY5Ij4KCQkJCQkJCUNpbmthcm5hIENlbGplIEIKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDYxMjM0OSI+CgkJCQkJCQnEjHJub21lbGoKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzOTAzIj4KCQkJCQkJCURvbcW+YWxlCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDYyMyI+CgkJCQkJCQlGZWxpeCBaYXNhdmplCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDAyMyI+CgkJCQkJCQlHcm9zdXBsamUKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjA1OTUzIj4KCQkJCQkJCUluZXMKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzMTAzIj4KCQkJCQkJCUphbmluYQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjQxMDMiPgoJCQkJCQkJSmVsxaFhIMWgbWFyamUKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzOTczIj4KCQkJCQkJCUplxb5pY2EgQQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjQxNzMiPgoJCQkJCQkJSmXFvmljYSBCCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQ2MzMzNTUiPgoJCQkJCQkJSmXFvmljYSBDCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2MzIwMyI+CgkJCQkJCQlLb25qaWNlCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQ2NTIzMjkiPgoJCQkJCQkJS0/FoCBQcmltb3Jza2EKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDY3NTE3OSI+CgkJCQkJCQlLcmFzCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDA0MyI+CgkJCQkJCQlLcmthIEEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDYxOTEzOSI+CgkJCQkJCQlLcmthIEIKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDYxMjM0NyI+CgkJCQkJCQlMZWRpdGEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDY3NTE3NyI+CgkJCQkJCQlMaXRpamEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0MDAzIj4KCQkJCQkJCU1hcmlib3IKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDYzMzM2MSI+CgkJCQkJCQlNZXNhcmlqYSBQcnVuawoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjQxMjMiPgoJCQkJCQkJUGl2a2EgUGVydXRuaW5hcnN0dm8KCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0MTkzIj4KCQkJCQkJCVN0cmHFvmnFocSNZSBLcmFuagoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyNDYzNTMiPgoJCQkJCQkJVG9sbWluCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDA2MyI+CgkJCQkJCQlUcmlnbGF2CgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjcxOTIyMSI+CgkJCQkJCQlWaXBhdmEKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTwvc2VsZWN0PgoJCQkJCQk8c2VsZWN0IGlkPSIzMy0zMDMtZmlsdGVyLW1vbnRoIiBkYXRhLWZpbHRlcj0ibW9udGgiIGRhdGEtbG9hZD0iZ2V0LW1vbnRocyIgY2xhc3M9Im1idC12Mi1zZWxlY3QiPgoJCQkJPG9wdGlvbiB2YWx1ZT0iYWxsIj4KCQkJCQlNZXNlYwoJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjkiPgoJCQkJCQlzZXB0ZW1iZXIKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTAiPgoJCQkJCQlva3RvYmVyCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjExIj4KCQkJCQkJbm92ZW1iZXIKCQkJCQk8L29wdGlvbj4KCQkJCQkJCTwvc2VsZWN0PgoJCQkJCgkJPC9kaXY+CgkJPGRpdiBjbGFzcz0ibWJ0LXYyLWRpdmlkZXIiPjwvZGl2PgoJCTxkaXYgaWQ9IjMzLTMwMy1jb250YWluZXIiPgk8dGFibGUgaWQ9Im1idC12Mi1zY2hlZHVsZS10YWJsZSIgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS1sb25nLXRhYmxlIG1idC12Mi10YWJsZSBtYnQtdjItdmVydGljYWwtcmVzcG9uc2l2ZSI+CgkJCQoJCTx0Ym9keT4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNgoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODcxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODcxIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ3OTk0MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yOC4xMC4yMDE4IDEzOjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDc5OTQwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ3OTk0MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0Nzk5NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0Nzk5NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ3OTk0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjUyMzI5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDY1MjMyOSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4MTI3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5LT8WgIFByaW1vcnNrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4MTI3MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODEyNzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDgxMjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDgxMjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTg3MSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE4NzEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0ODIxMDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MzI6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjQ4PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4MjEwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODIxMDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDgyMTAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDgyMTAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODIxMDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2NDEyMyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0ODI4MDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+UGl2a2EgUGVydXRuaW5hcnN0dm88L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODI4MDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDgyODAwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4MjgwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4MjgwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9MTM0OTMiIGFyZW5hX2lkPSIxMzQ5MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4MzM5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5PxaAgQW50b24gVWttYXI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODMzOTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDgzMzkwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODMzOTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNgoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODI1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODI1IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4NDQ5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yOC4xMC4yMDE4IDEyOjMwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDg0NDkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4NDQ5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODQ0OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODQ0OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4NDQ5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjMzMzU1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYzMzM1NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4NTE1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEM8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODUxNTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDg1MTUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4NTE1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4NTE1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4MjUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxODI1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDg1NzUwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjIyOjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj44MDwvc3Bhbj48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODU3NTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDg1NzUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4NTc1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4NTc1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg1NzUwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MDQzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIxNjQwNDMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDg2MzEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPktya2EgQTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4NjMxMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODYzMTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg2MzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg2MzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03MzAzIiBhcmVuYV9pZD0iNzMwMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4NjgyMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5HaW1uYXppamEgQmXFvmlncmFkPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDg2ODIwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4NjgyMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg2ODIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IklncmFsbmkgZGFuIj4KCQkJCQkJCTYKCQkJCQkJPC90ZD4KCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJEYXR1bSBpbiDEjWFzIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTcwMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgZ2FtZV9pZD0iNDI0MTcwMyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0ODc4MDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MjguMTAuMjAxOCAxMDo0NTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4NzgwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODc4MDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg3ODAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg3ODAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODc4MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWEiIGRhdGEtdGg9IkRvbWHEjWkiPgoJCQkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTczJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTczIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDg4NDQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4ODQ0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODg0NDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg4NDQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg4NDQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTcwMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE3MDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0ODkwODAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjcwPC9zcGFuPjoxNzwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ4OTA4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODkwODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg5MDgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDg5MDgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0ODkwODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00Njc1MTc3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSI0Njc1MTc3IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ4OTYzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5MaXRpamE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0ODk2MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDg5NjMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4OTYzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ4OTYzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9NzMwMyIgYXJlbmFfaWQ9IjczMDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0OTAxMzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+R2ltbmF6aWphIEJlxb5pZ3JhZDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5MDEzMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTAxMzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MDEzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk2CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4NzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE4NzMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDkxMDkwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjI4LjEwLjIwMTggMTA6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTEwOTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDkxMDkwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MTA5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MTA5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDkxMDkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTcxOTIyMSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjcxOTIyMSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ5MTcyMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5WaXBhdmE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTE3MjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDkxNzIwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MTcyMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MTcyMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4NzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxODczIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDkyMzEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj44ODwvc3Bhbj46MTU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTIzMTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDkyMzEwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MjMxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5MjMxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDkyMzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDY3NTE3OSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iNDY3NTE3OSIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0OTI4NDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+S3JhczwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5Mjg0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTI4NDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDkyODQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDkyODQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD05MTMzIiBhcmVuYV9pZD0iOTEzMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ5MzMzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5PxaAgRHJhZ2EgQmFqY2E8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTMzMzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDkzMzMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTMzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNgoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzc3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNzc3IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ5NDM2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yOC4xMC4yMDE4IDA5OjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk0MzYwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5NDM2MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTQzNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTQzNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5NDM2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjMyMDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjMyMDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0OTQ5OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+S29uamljZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5NDk5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTQ5OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk0OTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk0OTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTc3NyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE3NzciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0OTU1ODAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjc1PC9zcGFuPjo0MDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5NTU4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTU1ODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk1NTgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk1NTgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTU1ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjQ2MjY5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSI0NjQ2MjY5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ5NjExMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5DaW5rYXJuYSBDZWxqZSBCPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk2MTEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5NjExMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTYxMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTYxMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTczNTMiIGFyZW5hX2lkPSI3MzUzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDk2NjAwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPsWgRCBTbG92ZW5za2UgS29uamljZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5NjYwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTY2MDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5NjYwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk2CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3NTEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE3NTEiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDk3NTQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjI4LjEwLjIwMTggMDk6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTc1NDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk3NTQwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5NzU0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5NzU0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk3NTQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2Mzk3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTQ5ODE1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTgxNTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk4MTUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5ODE1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5ODE1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3NTEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxNzUxIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDk4NzMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj44ODwvc3Bhbj46Mzk8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTg3MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk4NzMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5ODczMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTQ5ODczMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NDk4NzMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDYxMjM0OSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0OSIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk0OTkyNzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+xIxybm9tZWxqPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk5MjcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTQ5OTI3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTkyNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTkyNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTczMDMiIGFyZW5hX2lkPSI3MzAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NDk5NzYwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkdpbW5hemlqYSBCZcW+aWdyYWQ8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk0OTk3NjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NDk5NzYwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk0OTk3NjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNgoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODQ5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODQ5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwMDcwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yNi4xMC4yMDE4IDE4OjMwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTAwNzAwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwMDcwMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDA3MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDA3MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwMDcwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5MzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MDEzMzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+QWtzb24gSWxpcmlqYSBBPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTAxMzMwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwMTMzMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDEzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDEzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODQ5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTg0OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwMTkxMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj48c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+ODE8L3NwYW4+OjI1PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTAxOTEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwMTkxMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDE5MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDE5MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwMTkxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MzMzNTEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjQ2MzMzNTEiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTAyNDQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkNlcmtuaWNhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTAyNDQwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwMjQ0MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDI0NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDI0NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTg5OTMiIGFyZW5hX2lkPSI4OTkzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTAyOTIwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkdpbW5hemlqYSDFoGVudHZpZDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwMjkyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDI5MjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwMjkyMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk2CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3MjkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE3MjkiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTAzODcwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjI2LjEwLjIwMTggMTY6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDM4NzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTAzODcwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwMzg3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwMzg3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTAzODcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk0MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2Mzk0MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwNDQ5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5Ba3NvbiBJbGlyaWphIEI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDQ0OTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA0NDkwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNDQ5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNDQ5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3MjkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxNzI5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTA1MDgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjMwOjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj41Mjwvc3Bhbj48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDUwODAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA1MDgwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNTA4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNTA4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTA1MDgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MDAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIxNjQwMDMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTA1NjAwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPk1hcmlib3I8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDU2MDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA1NjAwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNTYwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNTYwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9NzIwMyIgYXJlbmFfaWQ9IjcyMDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MDYxMDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+SmXFvmljYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwNjEwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDYxMDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNjEwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk2CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3MDUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE3MDUiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTA3MDQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjIzLjEwLjIwMTggMTg6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDcwNDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA3MDQwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNzA0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwNzA0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTA3MDQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDYyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwNzY3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5GZWxpeCBaYXNhdmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA3NjcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwNzY3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDc2NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDc2NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzA1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTcwNSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwODI1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj48c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+NjQ8L3NwYW4+OjU5PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA4MjUwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwODI1MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDgyNTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDgyNTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUwODI1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzg4MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTYzODgzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwODc4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5DaW5rYXJuYSBDZWxqZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUwODc4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDg3ODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTA4NzgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTA4NzgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03NTAzIiBhcmVuYV9pZD0iNzUwMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUwOTI3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5PxaAgVHJib3ZsamU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MDkyNzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTA5MjcwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MDkyNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNgoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjUwODk3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjUwODk3IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxMDIwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMi4xMC4yMDE4IDE3OjMwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTEwMjAwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxMDIwMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTAyMDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTAyMDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxMDIwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0yNDYzNTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIyNDYzNTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MTE1NDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+VG9sbWluPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTExNTQwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxMTU0MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTE1NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTE1NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjUwODk3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI1MDg5NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxMjIxMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4zMjo8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+NTE8L3NwYW4+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTEyMjEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxMjIxMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTIyMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTIyMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxMjIxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA2MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTY0MDYzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxMjc4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5UcmlnbGF2PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTEyNzgwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxMjc4MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTI3ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTI3ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTg2MzMiIGFyZW5hX2lkPSI4NjMzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTEzMjgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPsWgQyBUb2xtaW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTMyODAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTEzMjgwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTMyODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNjk5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNjk5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxNDI2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDE5OjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE0MjYwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxNDI2MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTQyNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTQyNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNDI2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM4ODMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM4ODMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MTQ4OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+Q2lua2FybmEgQ2VsamU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTQ4OTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE0ODkwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNDg5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNDg5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE2OTkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxNjk5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTE1NDgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj43NTwvc3Bhbj46Mjk8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTU0ODAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE1NDgwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNTQ4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNTQ4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTE1NDgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTczJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIxNjQxNzMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTE2MDIwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxNjAyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTYwMjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTE2MDIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTE2MDIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03MjIzIiBhcmVuYV9pZD0iNzIyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxNjUwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5HaW1uYXppamEgQ2VsamUgLSBDZW50ZXI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTY1MDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE2NTAwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTY1MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzAxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNzAxIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxNzQzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDE0OjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE3NDMwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxNzQzMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTc0MzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTc0MzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxNzQzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00Njc1MTc3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDY3NTE3NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxODA1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5MaXRpamE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTgwNTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE4MDUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxODA1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxODA1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3MDEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxNzAxIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTE4NjQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjQxOjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4xMDQ8L3NwYW4+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE4NjQwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxODY0MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTg2NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTg2NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUxODY0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTY0NjIzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUxOTE3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5GZWxpeCBaYXNhdmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE5MTcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUxOTE3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTkxNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTkxNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTcyOTMiIGFyZW5hX2lkPSI3MjkzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTE5NjYwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPsWgRCBMaXRpamE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MTk2NjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTE5NjYwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MTk2NjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODQ1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODQ1IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUyMDYxMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDEyOjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTIwNjEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyMDYxMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjA2MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjA2MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyMDYxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0yMDU5NTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIyMDU5NTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjEyNDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+SW5lczwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyMTI0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjEyNDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTIxMjQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTIxMjQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTg0NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE4NDUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjE4MzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+NTI6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjc1PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyMTgzMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjE4MzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTIxODMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTIxODMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjE4MzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2MzkzMyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjIzNzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+QWtzb24gSWxpcmlqYSBBPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTIyMzcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyMjM3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjIzNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjIzNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTc3MTMiIGFyZW5hX2lkPSI3NzEzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTIyODgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPsWgRCBUcmF0YTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyMjg4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjI4ODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyMjg4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk1CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3NDcmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE3NDciIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTIzODEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjIxLjEwLjIwMTggMTI6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjM4MTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTIzODEwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyMzgxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyMzgxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTIzODEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTkxMzkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjE5MTM5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTI0NDIwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPktya2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyNDQyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjQ0MjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI0NDIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI0NDIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTc0NyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE3NDciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjQ5OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+NDY6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjg5PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyNDk5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjQ5OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI0OTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI0OTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjQ5OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5NzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2Mzk3MyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjU1MjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+SmXFvmljYSBBPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI1NTIwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyNTUyMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjU1MjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjU1MjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTEwMzEzIiBhcmVuYV9pZD0iMTAzMTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MjYwMTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+T3Nub3ZuYSDFoW9sYSBHcm08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjYwMTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI2MDEwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjYwMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzQ5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNzQ5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUyNjk0MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDExOjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI2OTQwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyNjk0MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjY5NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjY5NDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyNjk0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUyNzU2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj7EjHJub21lbGo8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Mjc1NjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI3NTYwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyNzU2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyNzU2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE3NDkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxNzQ5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTI4MTQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj40Nzwvc3Bhbj46Mzg8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjgxNDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI4MTQwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyODE0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUyODE0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI4MTQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MDIzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIxNjQwMjMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTI4NjgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkdyb3N1cGxqZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUyODY4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Mjg2ODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI4NjgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTI4NjgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03MTgzIiBhcmVuYV9pZD0iNzE4MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUyOTE2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5PxaAgTWlyYW5hIEphcmNhLCDEjHJub21lbGo8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MjkxNjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTI5MTYwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MjkxNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjUwODkzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjUwODkzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUzMDEwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDEwOjMwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTMwMTAwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzMDEwMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzAxMDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzAxMDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzMDEwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUzMDcxMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5MZWRpdGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzA3MTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTMwNzEwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzMDcxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzMDcxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNTA4OTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjUwODkzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTMxMjcwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjUwOjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj41Mjwvc3Bhbj48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzEyNzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTMxMjcwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzMTI3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzMTI3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMxMjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MjQ2MzUzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIyNDYzNTMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTMxODIwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPlRvbG1pbjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzMTgyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzE4MjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMxODIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMxODIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD0xMjAyMTciIGFyZW5hX2lkPSIxMjAyMTciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MzIzMDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+U8WgIERvbcW+YWxlPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTMyMzAwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzMjMwMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMyMzAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IklncmFsbmkgZGFuIj4KCQkJCQkJCTUKCQkJCQkJPC90ZD4KCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJEYXR1bSBpbiDEjWFzIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTc3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgZ2FtZV9pZD0iNDI0MTc3MyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MzM0NTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MjEuMTAuMjAxOCAxMDowMDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzMzQ1MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzM0NTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMzNDUwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTMzNDUwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzM0NTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWEiIGRhdGEtdGg9IkRvbWHEjWkiPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzMTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzMTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTM0MTEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkphbmluYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNDExMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzQxMTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM0MTEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM0MTEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTc3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE3NzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MzQ3MTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+Mjc6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjY3PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNDcxMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzQ3MTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM0NzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM0NzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzQ3MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjMyMDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2MzIwMyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MzUyNjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+S29uamljZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNTI2MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzUyNjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM1MjYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM1MjYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD04OTczIiBhcmVuYV9pZD0iODk3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUzNTc1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj7FoEQgSmFuaW5hPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTM1NzUwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNTc1MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM1NzUwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IklncmFsbmkgZGFuIj4KCQkJCQkJCTUKCQkJCQkJPC90ZD4KCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJEYXR1bSBpbiDEjWFzIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTgyMSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgZ2FtZV9pZD0iNDI0MTgyMSIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1MzY2OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MjEuMTAuMjAxOCAxMDowMDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNjY5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1MzY2OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM2NjkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM2NjkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzY2OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWEiIGRhdGEtdGg9IkRvbWHEjWkiPgoJCQkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzOTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzOTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTM3MzEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkRvbcW+YWxlPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTM3MzEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNzMxMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzczMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1MzczMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODIxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTgyMSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUzNzg3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj48c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+ODM8L3NwYW4+OjI1PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTM3ODcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzNzg3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1Mzc4NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1Mzc4NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzNzg3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MzMzNTUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjQ2MzMzNTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTM4NDAwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQzwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzODQwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Mzg0MDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM4NDAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM4NDAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03MTYzIiBhcmVuYV9pZD0iNzE2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTUzODg4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5PxaAgVmVuY2xqYSBQZXJrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTUzODg4MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Mzg4ODAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzODg4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk1CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNTA4OTUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNTA4OTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTM5ODEwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjIxLjEwLjIwMTggMTA6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Mzk4MTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTM5ODEwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzOTgxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTUzOTgxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTM5ODEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA2MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0MDUyMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5UcmlnbGF2PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQwNTIwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0MDUyMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDA1MjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDA1MjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjUwODk1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI1MDg5NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0MTEzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj48c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+MTAzPC9zcGFuPjoyMjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0MTEzMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDExMzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQxMTMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQxMTMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDExMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjMzMzYxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSI0NjMzMzYxIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0MTY2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5NZXNhcmlqYSBQcnVuazwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0MTY2MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDE2NjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQxNjYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQxNjYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03NTQzIiBhcmVuYV9pZD0iNzU0MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0MjE1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj7FoEQgUGxhbmluYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0MjE1MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDIxNTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0MjE1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk1CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4MTkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE4MTkiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTQzMDgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjIxLjEwLjIwMTggMTA6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDMwODAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQzMDgwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0MzA4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0MzA4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQzMDgwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA0MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA0MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0MzcwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5LcmthIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDM3MDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQzNzAwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0MzcwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0MzcwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4MTkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxODE5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTQ0MjcwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj43NDwvc3Bhbj46NTI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDQyNzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQ0MjcwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0NDI3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU0NDI3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ0MjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTkzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSIxNjQxOTMiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTQ0ODAwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPlN0cmHFvmnFocSNZSBLcmFuajwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0NDgwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDQ4MDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ0ODAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ0ODAwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD0xMDMxMyIgYXJlbmFfaWQ9IjEwMzEzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTQ1MjkwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPk9zbm92bmEgxaFvbGEgR3JtPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQ1MjkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0NTI5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ1MjkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IklncmFsbmkgZGFuIj4KCQkJCQkJCTUKCQkJCQkJPC90ZD4KCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJEYXR1bSBpbiDEjWFzIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTg2NyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgZ2FtZV9pZD0iNDI0MTg2NyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NDYyMjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MjEuMTAuMjAxOCAxMDowMDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0NjIyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDYyMjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ2MjIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ2MjIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDYyMjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWEiIGRhdGEtdGg9IkRvbWHEjWkiPgoJCQkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDY3NTE3OSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjQ2NzUxNzkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NDcxMjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+S3JhczwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0NzEyMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDcxMjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ3MTIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ3MTIwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTg2NyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE4NjciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NDc3MTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjY4PC9zcGFuPjoyODwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0NzcxMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDc3MTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ3NzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ3NzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDc3MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjUyMzI5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSI0NjUyMzI5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU0ODI0MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5LT8WgIFByaW1vcnNrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0ODI0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDgyNDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ4MjQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ4MjQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD0xMjAyMTUiIGFyZW5hX2lkPSIxMjAyMTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NDg3MzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+T8WgIERvcm5iZXJrPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTQ4NzMwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0ODczMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ4NzMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IklncmFsbmkgZGFuIj4KCQkJCQkJCTUKCQkJCQkJPC90ZD4KCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJEYXR1bSBpbiDEjWFzIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTcyNSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgZ2FtZV9pZD0iNDI0MTcyNSIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NDk2NzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MjEuMTAuMjAxOCAwOTowMDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU0OTY3MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NDk2NzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ5NjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTQ5NjcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NDk2NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWEiIGRhdGEtdGg9IkRvbWHEjWkiPgoJCQkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTUwMjkwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkplbMWhYSDFoG1hcmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUwMjkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1MDI5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTAyOTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTAyOTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzI1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTcyNSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1MTI1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj48c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+NTk8L3NwYW4+OjMxPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUxMjUwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1MTI1MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTEyNTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTEyNTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1MTI1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk0MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTYzOTQzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1MTg1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5Ba3NvbiBJbGlyaWphIEI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTE4NTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUxODUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1MTg1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1MTg1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9ODg5MyIgYXJlbmFfaWQ9Ijg4OTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NTIzNTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+T8WgIMWgbWFyamUgcHJpIEplbMWhYWg8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTIzNTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUyMzUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTIzNTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNQoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODY5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODY5IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1MzMzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMS4xMC4yMDE4IDA5OjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUzMzMwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1MzMzMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTMzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTMzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1MzMzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQxMjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NTM5NTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+UGl2a2EgUGVydXRuaW5hcnN0dm88L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTM5NTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTUzOTUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1Mzk1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1Mzk1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGRhdGEtdGg9IlJlenVsdGF0Ij4KCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgCgkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJCSAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4NjkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBnYW1lX2lkPSI0MjQxODY5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTU0NTMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjMyOjxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj44NDwvc3Bhbj48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTQ1MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTU0NTMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1NDUzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1NDUzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTU0NTMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgCQkJICAgICAgICAgICAgCQoJCSAgICAgICAgICAgIAkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1iIiBkYXRhLXRoPSJHb3N0aSI+CgkJCQkJICAgIAoJCQkJCSAgICAJCQkJCQkJPHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPgoJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NzE5MjIxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiB0ZWFtX2lkPSI3MTkyMjEiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTU1MDcwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPlZpcGF2YTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1NTA3MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTUwNzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTU1MDcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTU1MDcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICAJCQkJCQk8dGQgZGF0YS10aD0iRHZvcmFuYSI+CgkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE5JmFtcDthcmVuYV9pZD03NzMzIiBhcmVuYV9pZD0iNzczMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1NTU1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj7FoEQgU2thbGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTU1NTAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTU1NTUwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTU1NTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNAoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODYzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxODYzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1NjQ5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4xOS4xMC4yMDE4IDE4OjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTU2NDkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1NjQ5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTY0OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTY0OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1NjQ5MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00Njc1MTc5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDY3NTE3OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1NzExMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5LcmFzPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTU3MTEwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1NzExMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTcxMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTcxMTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODYzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTg2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU1NzY5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4zNzo8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+MTAwPC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1NzY5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTc2OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTU3NjkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTU3NjkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NTc2OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2NDEyMyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NTgyNjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+UGl2a2EgUGVydXRuaW5hcnN0dm88L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTgyNjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTU4MjYwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1ODI2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1ODI2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9MTIwMjE1IiBhcmVuYV9pZD0iMTIwMjE1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTU5MDQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPk/FoCBEb3JuYmVyazwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU1OTA0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NTkwNDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU1OTA0MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk0CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4NjUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE4NjUiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTYwMDcwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjE2LjEwLjIwMTggMTg6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjAwNzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYwMDcwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MDA3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MDA3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTYwMDcwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2NTIzMjkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjUyMzI5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTYwNjkwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPktPxaAgUHJpbW9yc2thPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYwNjkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2MDY5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjA2OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjA2OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxODY1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTg2NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU2MTI4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4yMzo8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+Njg8L3NwYW4+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYxMjgwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2MTI4MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjEyODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjEyODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MTI4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTcxOTIyMSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iNzE5MjIxIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU2MTgzMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5WaXBhdmE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjE4MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYxODMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MTgzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MTgzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9ODYwMyIgYXJlbmFfaWQ9Ijg2MDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NjIzMzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+xaBEIFNUxaAgS29wZXI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjIzMzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYyMzMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjIzMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNAoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzQ1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNzQ1IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU2MzI3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4xNS4xMC4yMDE4IDE5OjMwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYzMjcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2MzI3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjMyNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjMyNzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2MzI3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQwMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQwMjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NjM4OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+R3Jvc3VwbGplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTYzODkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2Mzg5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjM4OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjM4OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNzQ1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTc0NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU2NDQ3MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj40Nzo8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+ODA8L3NwYW4+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTY0NDcwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2NDQ3MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjQ0NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NjQ0NzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NDQ3MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTYzOTczIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU2NTAwMDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjUwMDAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTY1MDAwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NTAwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NTAwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9OTYwMyIgYXJlbmFfaWQ9Ijk2MDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NjU1MDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+T8WgIExvdWlzYSBBZGFtacSNYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2NTUwMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjU1MDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NTUwMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk0CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE2OTUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE2OTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTY2NDMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjE1LjEwLjIwMTggMTc6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjY0MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTY2NDMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NjQzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2NjQzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY2NDMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2NzUxNzcmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0Njc1MTc3IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTY3MDMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkxpdGlqYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2NzAzMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjcwMzAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY3MDMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY3MDMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTY5NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE2OTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1Njc1OTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+Mjg6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjkzPC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2NzU5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Njc1OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY3NTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY3NTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1Njc1OTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM4ODMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2Mzg4MyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NjgxMjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+Q2lua2FybmEgQ2VsamU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NjgxMjAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTY4MTIwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2ODEyMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2ODEyMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCSAgICAgICAgICAgIDwvdGQ+CgkJICAgICAgICAgICAgCQkJCQkJPHRkIGRhdGEtdGg9IkR2b3JhbmEiPgoJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExOSZhbXA7YXJlbmFfaWQ9NzI5MyIgYXJlbmFfaWQ9IjcyOTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1Njg2MTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+xaBEIExpdGlqYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU2ODYxMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Njg2MTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUFyZW5hKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2ODYxMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdhcmVuYV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCTx0ZCBkYXRhLXRoPSJJZ3JhbG5pIGRhbiI+CgkJCQkJCQk0CgkJCQkJCTwvdGQ+CgkJCQkJCQkJCQk8dGQgZGF0YS10aD0iRGF0dW0gaW4gxI1hcyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9MTE0JmFtcDtnYW1lX2lkPTQyNDE4MTcmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIGdhbWVfaWQ9IjQyNDE4MTciIHNlYXNvbl9pZD0iMTAyNTc1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTY5NTMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPjE0LjEwLjIwMTggMTI6MDA8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1Njk1MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTY5NTMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVHYW1lKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2OTUzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdnYW1lX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU2OTUzMDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTY5NTMwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2xlYWd1ZV9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgPHRkIGNsYXNzPSJtYnQtdjItc2NoZWR1bGUtdGVhbS1hIiBkYXRhLXRoPSJEb21hxI1pIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MzMzNTUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjMzMzU1IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTcwMTQwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQzwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3MDE0MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzAxNDAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTcwMTQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTcwMTQwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI0MTgxNyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNDE4MTciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NzA3MTAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MzE6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjU0PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3MDcxMDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzA3MTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTcwNzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTcwNzEwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzA3MTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxOTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjE2NDE5MyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NzEyMzAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+U3RyYcW+acWhxI1lIEtyYW5qPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTcxMjMwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3MTIzMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzEyMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzEyMzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTczMDMiIGFyZW5hX2lkPSI3MzAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTcxNzMwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkdpbW5hemlqYSBCZcW+aWdyYWQ8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzE3MzAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTcxNzMwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzE3MzAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNAoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNjk3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjQxNjk3IiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU3MjY2MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4xNC4xMC4yMDE4IDEwOjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTcyNjYwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3MjY2MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzI2NjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzI2NjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU3MjY2MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxNzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQxNzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NzMyNjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+SmXFvmljYSBCPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTczMjYwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3MzI2MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzMyNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzMyNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBkYXRhLXRoPSJSZXp1bHRhdCI+CgkJICAgICAgICAgICAgCQkJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgIAoJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAJCQkJCQkgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjQxNjk3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgZ2FtZV9pZD0iNDI0MTY5NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU3Mzg1MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4zMjo8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+ODc8L3NwYW4+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTczODUwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3Mzg1MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzM4NTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzM4NTAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU3Mzg1MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkgICAgICAgIAkJCSAgICAgICAgICAgIAkKCQkgICAgICAgICAgICAJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYiIgZGF0YS10aD0iR29zdGkiPgoJCQkJCSAgICAKCQkJCQkgICAgCQkJCQkJCTxzcGFuIGNsYXNzPSJtYnQtdjItc3Ryb25nIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgdGVhbV9pZD0iMTY0NjIzIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU3NDM4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5GZWxpeCBaYXNhdmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTc0MzgwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3NDM4MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzQzODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzQzODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTczMDMiIGFyZW5hX2lkPSI3MzAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTc0ODgwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPkdpbW5hemlqYSBCZcW+aWdyYWQ8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzQ4ODAwMTU0MTIzNDM2MyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTc0ODgwMDE1NDEyMzQzNjMiKS5ocmVmID0gbmF2aWdhdGVBcmVuYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzQ4ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnYXJlbmFfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQk8dGQgZGF0YS10aD0iSWdyYWxuaSBkYW4iPgoJCQkJCQkJNAoJCQkJCQk8L3RkPgoJCQkJCQkJCQkJPHRkIGRhdGEtdGg9IkRhdHVtIGluIMSNYXMiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTExNCZhbXA7Z2FtZV9pZD00MjUwODkxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBnYW1lX2lkPSI0MjUwODkxIiBzZWFzb25faWQ9IjEwMjU3NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU3NTk4MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj4xNC4xMC4yMDE4IDEwOjAwPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTc1OTgwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3NTk4MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlR2FtZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzU5ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnZ2FtZV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzU5ODAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuOTU3NTk4MDAxNTQxMjM0MzYzJykuZ2V0QXR0cmlidXRlKCdsZWFndWVfaWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWJ0LXYyLXNjaGVkdWxlLXRlYW0tYSIgZGF0YS10aD0iRG9tYcSNaSI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjMzMzYxJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYzMzM2MSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuOTU3NjU5MDAxNTQxMjM0MzYzIiBvbmx5dXJsPSIxIj5NZXNhcmlqYSBQcnVuazwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3NjU5MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzY1OTAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTc2NTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTc2NTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgZGF0YS10aD0iUmV6dWx0YXQiPgoJCSAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAJCQkJICAgICAgICAgICAKCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgCQkJCQkJICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTQmYW1wO2dhbWVfaWQ9NDI1MDg5MSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIGdhbWVfaWQ9IjQyNTA4OTEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1NzcxNjAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+MzM6PHNwYW4gY2xhc3M9Im1idC12Mi1zdHJvbmciPjY5PC9zcGFuPjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3NzE2MDAxNTQxMjM0MzYzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjk1NzcxNjAwMTU0MTIzNDM2MyIpLmhyZWYgPSBuYXZpZ2F0ZUdhbWUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTc3MTYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2dhbWVfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTc3MTYwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1NzcxNjAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnbGVhZ3VlX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgIAkJCQkJICAgICAgICAJCQkgICAgICAgICAgICAJCgkJICAgICAgICAgICAgCQkJICAgICAgICAgICAgPC90ZD4KCQkgICAgICAgICAgICA8dGQgY2xhc3M9Im1idC12Mi1zY2hlZHVsZS10ZWFtLWIiIGRhdGEtdGg9Ikdvc3RpIj4KCQkJCQkgICAgCgkJCQkJICAgIAkJCQkJCQk8c3BhbiBjbGFzcz0ibWJ0LXYyLXN0cm9uZyI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0yNDYzNTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHRlYW1faWQ9IjI0NjM1MyIgc2Vhc29uX2lkPSIxMDI1NzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjk1Nzc3MDAwMTU0MTIzNDM2MyIgb25seXVybD0iMSI+VG9sbWluPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTc3NzAwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3NzcwMDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1Nzc3MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjk1Nzc3MDAwMTU0MTIzNDM2MycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkgICAgICAgICAgICA8L3RkPgoJCSAgICAgICAgICAgIAkJCQkJCTx0ZCBkYXRhLXRoPSJEdm9yYW5hIj4KCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD0xMTkmYW1wO2FyZW5hX2lkPTcwODMiIGFyZW5hX2lkPSI3MDgzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC45NTc4MTkwMDE1NDEyMzQzNjMiIG9ubHl1cmw9IjEiPlPFoCBTcmXEjWthIEtvc292ZWxhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC45NTc4MTkwMDE1NDEyMzQzNjMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuOTU3ODE5MDAxNTQxMjM0MzYzIikuaHJlZiA9IG5hdmlnYXRlQXJlbmEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC45NTc4MTkwMDE1NDEyMzQzNjMnKS5nZXRBdHRyaWJ1dGUoJ2FyZW5hX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCTwvdHI+CgkJCQkJPC90Ym9keT4JCgk8L3RhYmxlPgoJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJPGRpdiBjbGFzcz0ibWJ0LXYyLWdyaWQiPgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTEyIj4KCQkJCQk8dWwgY2xhc3M9Im1idC12Mi1wYWdpbmF0aW9uIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGxpIGNsYXNzPSJtYnQtdjItcGFnaW5hdGlvbi1hY3RpdmUiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHNwYW4+CgkJCQkJCQkJCTEKCQkJCQkJCQk8L3NwYW4+CgkJCQkJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy0zMDMtcGFnZS0yIj4KCQkJCQkJCQkJMgoJCQkJCQkJCTwvYT4KCQkJCQkJCQkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQk8bGk+CQoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iIyIgb25jbGljaz0icmV0dXJuIGZhbHNlOyIgaWQ9IjMzLTMwMy1wYWdlLTMiPgoJCQkJCQkJCQkzCgkJCQkJCQkJPC9hPgoJCQkJCQkJCQkJCQkJCTwvbGk+CgkJCQkJCQkJCQkJCQkJCQkJCQk8bGkgY2xhc3M9Im1idC12Mi1wYWdpbmF0aW9uLW5leHQiPgoJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy0zMDMtcGFnZS1uZXh0Ij4KCQkJCQkJCQkJ4p2vIAoJCQkJCQkJCTwvYT4KCQkJCQkJCTwvbGk+CgkJCQkJCQkJCQkJPC91bD4KCQkJCTwvZGl2PgoJCQkJCgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtMTIgbWJ0LXYyLWdyaWQtZW5kIj4KCQkJCQk8YSBocmVmPSIjIiBpZD0iMzMtMzAzLWV4cG9ydCIgb25jbGljaz0icmV0dXJuIGZhbHNlOyIgY2xhc3M9Im1idC12Mi1leHBvcnQtbGluayI+CgkJCQkJCUl6dm96aQoJCQkJCTwvYT4KCQkJCTwvZGl2PgoJCQkJCgkJPC9kaXY+CgkKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgovLzwhW0NEQVRBWwoKICAgIAoJdmFyIG5hbWVzcGFjZSA9IE1CVC5BUEkuU2FmZU5hbWVzLkNvbnRhaW5lcignMzMtMzAzJyk7CgoJdmFyIGdhbWVzQ291bnQgPSAzMDsKCglpZiAoZ2FtZXNDb3VudCA9PSAwICYmIG5hbWVzcGFjZS5hY3RpdmVUYWIgPT0gMCkgewoJCW5hbWVzcGFjZS50YWJDb250cm9sbGVyWzBdLnNldEFjdGl2ZVRhYigxKTsKCX0KCgluYW1lc3BhY2Uub25QYWdlQ2xpY2sgPSBmdW5jdGlvbihlLCBwYWdlKSB7CgkJCgkJbmFtZXNwYWNlLmZpbHRlcnMucGFnZSA9IHBhZ2U7CgoJCXZhciBwYXJhbXMgPSB7fTsKCgkgICAgaWYobmFtZXNwYWNlLmZpbHRlcnMuc3RhZ2UpIHsKCQkJcGFyYW1zLnN0YWdlX2lkID0gbmFtZXNwYWNlLmZpbHRlcnMuc3RhZ2U7CgkJfQoKCQlpZihuYW1lc3BhY2UuZmlsdGVycy5zZWFzb24pIHsKCQkJcGFyYW1zLnNlYXNvbl9pZCA9IG5hbWVzcGFjZS5maWx0ZXJzLnNlYXNvbjsKCQl9CgoJCWlmKG5hbWVzcGFjZS5maWx0ZXJzLnBhZ2UpIHsKCQkJcGFyYW1zLnBhZ2UgPSBuYW1lc3BhY2UuZmlsdGVycy5wYWdlOwoJCX0KCgkJcGFyYW1zLmZpbHRlciA9IG5hbWVzcGFjZS5maWx0ZXJzOwoJCQoJCU1CVC5BUEkuSGlzdG9yeS5zZXRQYXJhbSgnMzMtMzAzJywgTUJULkFQSS5IaXN0b3J5LnBhZ2VJbmRleCwgMCwgcGFnZSk7CgoJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJd2lkZ2V0SWQ6IDMwMywKCQkJY29udGFpbmVyOiAnMzMtMzAzLWNvbnRhaW5lcicsCgkJCXN0YXRlOiAnSURVNE1qWTFNemcyTjJFNk1qQTZlM002TVRjNkluUmxZVzFmYkdsdWExOTJhWE5wWW14bElqdHpPakU2SWpFaU8zTTZNakE2SW5Ob2IzZGZjMlZoYzI5dVgzTmxiR1ZqZEc5eUlqdHpPakU2SWpFaU8zTTZNVGM2SW1kaGJXVmZiR2x1YTE5MmFYTnBZbXhsSWp0ek9qRTZJakVpTzNNNk1UazZJbkJzWVhsbGNsOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE5Eb2lkR1ZoYlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TmpvaWNHeGhlV1Z5WDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTNPaUowWldGdFgyeHBibXRmYUdGdVpHeGxjaUk3Y3pveE1qb2libUYyYVdkaGRHVlVaV0Z0SWp0ek9qRTNPaUpuWVcxbFgyeHBibXRmYUdGdVpHeGxjaUk3Y3pveE1qb2libUYyYVdkaGRHVkhZVzFsSWp0ek9qRTVPaUp3YkdGNVpYSmZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRTBPaUp1WVhacFoyRjBaVkJzWVhsbGNpSTdjem94T0RvaVlYSmxibUZmYkdsdWExOTJhWE5wWW14bElqdHpPakU2SWpFaU8zTTZNVFU2SW1GeVpXNWhYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pFNE9pSmhjbVZ1WVY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRNNkltNWhkbWxuWVhSbFFYSmxibUVpTzNNNk9Ub2liR1ZoWjNWbFgybGtJanR6T2pVNklqRXhNVGd6SWp0ek9qazZJbWRoYldWZlpHRjVjeUk3Y3pveE9pSXhJanR6T2pFM09pSnphRzkzWDNKbFptVnlaV1ZmWTJsMGVTSTdjem94T2lJeElqdHpPakV6T2lKcGRHVnRjMTl2Ymw5d1lXZGxJanR6T2pJNklqTXdJanR6T2pJd09pSnpkR0ZuWlY5c1pYWmxiSE5mZG1semFXSnNaU0k3Y3pveE9pSXlJanR6T2pnNkluUmxiWEJzWVhSbElqdHpPakk2SW5ZeUlqdHpPalk2SW1acGJIUmxjaUk3WVRvek9udHpPalk2SW5ObFlYTnZiaUk3Y3pvMk9pSXhNREkxTnpVaU8zTTZORG9pZEhsd1pTSTdjem94TWpvaWNtVnpkV3gwYzE5dmJteDVJanR6T2pNNkluUmhZaUk3Y3pveU1Eb2ljMk5vWldSMWJHVmZZVzVrWDNKbGMzVnNkSE1pTzMxOScsCgkJCXBhcmFtczogcGFyYW1zCgkJfSkucmVuZGVyUGFydGlhbChuYW1lc3BhY2UuZmlsdGVycy50YWIpOwoJfQoKCQoJCQkJCQkJCQkJCQkJCQkJCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtMzAzLXBhZ2UtMicsICJjbGljayIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uUGFnZUNsaWNrLCBudWxsLCBbMiwgZmFsc2VdLCAyKSk7IAoJCQkJCQkJCQkJCQlNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTMwMy1wYWdlLTMnLCAiY2xpY2siLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vblBhZ2VDbGljaywgbnVsbCwgWzMsIGZhbHNlXSwgMikpOyAKCQkJCQkJCQkJCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtMzAzLXBhZ2UtbmV4dCcsICJjbGljayIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uUGFnZUNsaWNrLCBudWxsLCBbMiwgZmFsc2VdLCAyKSk7IAoJCQkKCgoJbmFtZXNwYWNlLmV4cG9ydFNjaGVkdWxlID0gZnVuY3Rpb24oKSB7CgoJCXZhciB1cmwgPSBNQlQuQVBJLlNlcnZpY2VVcmwgKyAid2lkZ2V0LXNlcnZpY2UvZXhwb3J0L3ZpZXcvc2NoZWR1bGVfYW5kX3Jlc3VsdHM/YXBpPSIgKyBNQlQuQVBJLkFwaUlkOwoKCQlpZiAoTUJULkFQSS5MYW5nKSB7CgkJCXVybCArPSAiJmxhbmc9IiArIE1CVC5BUEkuTGFuZzsKCQl9CgoJCWZvcihmaWx0ZXIgaW4gbmFtZXNwYWNlLmZpbHRlcnMpIHsKCQkJaWYoZmlsdGVyID09ICdzZWFzb24nKSB7CgkJCQluYW1lc3BhY2UuZmlsdGVycy5zZWFzb25faWQgPSBuYW1lc3BhY2UuZmlsdGVyc1tmaWx0ZXJdOwoJCQkJZmlsdGVyID0gJ3NlYXNvbl9pZCc7CgkJCX0KCQkJdXJsICs9ICcmJyArZmlsdGVyICsgJz0nICsgbmFtZXNwYWNlLmZpbHRlcnNbZmlsdGVyXTsKCQl9CgoJCXdpbmRvdy5sb2NhdGlvbiA9IHVybDsKCX0KCglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoIjMzLTMwMy1leHBvcnQiLCAiY2xpY2siLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5leHBvcnRTY2hlZHVsZSkpOwoKCQkKCi8vXV0+Cjwvc2NyaXB0Pgk8L2Rpdj4KCTwvZGl2Pgo8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy88IVtDREFUQVsKCgkKCXZhciBuYW1lc3BhY2UgPSBNQlQuQVBJLlNhZmVOYW1lcy5Db250YWluZXIoJzMzLTMwMycpOwoKCW5hbWVzcGFjZS5tb2JpbGVNZW51ID0gbmV3IE1CVC5BUEkuY3JlYXRlUmVzcG9uc2l2ZU5hdmlnYXRpb24oewoJCW1lbnVDb250YWluZXIgOiAiMzMtMzAzLW1idC12Mi1uYXZpZ2F0aW9uIiwKCQltb2JpbGVNZW51Q29udGFpbmVyIDogIjMzLTMwMy1tb2JpbGUtbWVudSIsCgkJbW9iaWxlTWVudUNsb3NlVGV4dDogIkl6YmVyaSIsCgl9KTsKCgluYW1lc3BhY2UubW9iaWxlRmlsdGVycyA9IG5ldyBNQlQuQVBJLmNyZWF0ZVJlc3BvbnNpdmVOYXZpZ2F0aW9uKHsKCQltZW51Q29udGFpbmVyIDogIjMzLTMwMy1maWx0ZXJzLWJsb2NrIiwKCQltb2JpbGVNZW51Q29udGFpbmVyIDogIjMzLTMwMy1tb2JpbGUtZmlsdGVycy1ibG9jayIsCgkJZmlsdGVyc01vZGU6IHRydWUKCX0pOwoKCW5hbWVzcGFjZS5maWx0ZXJzID0ge307CgoJbmFtZXNwYWNlLmZpbHRlcnNbJ3NlYXNvbiddID0gMTAyNTc1OwoKCW5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzID0ge307CgoJdmFyIGZpbHRlcnMgPSBNQlQuQVBJLmdldCgnMzMtMzAzLWZpbHRlcnMtYmxvY2snKS5jaGlsZE5vZGVzOwoKCQoJCQkKCglpZihmaWx0ZXJzKSB7CgkJZm9yKHZhciBpID0gMDsgaSA8ICBmaWx0ZXJzLmxlbmd0aDsgaSsrKSB7CgkgICAgICAgIGlmKGZpbHRlcnNbaV0ubm9kZVR5cGUgPT0gMSAmJiBmaWx0ZXJzW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1maWx0ZXInKSkgewoJICAgICAgICAJbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNbZmlsdGVyc1tpXS5nZXRBdHRyaWJ1dGUoJ2RhdGEtZmlsdGVyJyldID0gZmlsdGVyc1tpXS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbG9hZCcpOwoKCSAgICAgICAgfQoJCX0KCX0KCgluYW1lc3BhY2Uub25GaWx0ZXJDaGFuZ2UgPSBmdW5jdGlvbihlLCBmaWx0ZXIsIG5lZWRSZWxvYWRGaWx0ZXJzKSB7CgoJCW5hbWVzcGFjZS5maWx0ZXJzW2ZpbHRlcl0gPSBlLnRhcmdldC52YWx1ZTsKCgkJdmFyIHBhcmFtcyA9IHt9OwoKCQlkZWxldGUgbmFtZXNwYWNlLmZpbHRlcnMucGFnZTsKCQluYW1lc3BhY2UucmVsb2FkRmlsdGVycyhmaWx0ZXIsIHRydWUpOwoKCQlpZihuZWVkUmVsb2FkRmlsdGVycykgewoJCQlNQlQuQVBJLkhpc3Rvcnkuc2V0UGFyYW0oJzMzLTMwMycsIE1CVC5BUEkuSGlzdG9yeS5wYWdlSW5kZXgsIDAsIG51bGwpOwoJCX0KCSAgICAKCSAgICBpZihuYW1lc3BhY2UuZmlsdGVycy5zdGFnZSkgewoJCQlwYXJhbXMuc3RhZ2VfaWQgPSBuYW1lc3BhY2UuZmlsdGVycy5zdGFnZTsKCQl9CgoJCWlmKG5hbWVzcGFjZS5maWx0ZXJzLnNlYXNvbikgewoJCQlwYXJhbXMuc2Vhc29uX2lkID0gbmFtZXNwYWNlLmZpbHRlcnMuc2Vhc29uOwoJCX0KCgkJaWYobmFtZXNwYWNlLmZpbHRlcnMucGFnZSkgewoJCQlwYXJhbXMucGFnZSA9IG5hbWVzcGFjZS5maWx0ZXJzLnBhZ2U7CgkJfQoKCQlwYXJhbXMuZmlsdGVyID0gbmFtZXNwYWNlLmZpbHRlcnM7CgoJCU1CVC5BUEkuSGlzdG9yeS5zZXRQYXJhbSgnMzMtMzAzJywgTUJULkFQSS5IaXN0b3J5LmZpbHRlckluZGV4LCBmaWx0ZXIsIGUudGFyZ2V0LnZhbHVlKTsKCgkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJCQl3aWRnZXRJZDogMzAzLAoJCQljb250YWluZXI6ICczMy0zMDMtY29udGFpbmVyJywKCQkJc3RhdGU6ICdNelV6T0RreU16RTVOR0U2TVRrNmUzTTZNVGM2SW5SbFlXMWZiR2x1YTE5MmFYTnBZbXhsSWp0ek9qRTZJakVpTzNNNk1qQTZJbk5vYjNkZmMyVmhjMjl1WDNObGJHVmpkRzl5SWp0ek9qRTZJakVpTzNNNk1UYzZJbWRoYldWZmJHbHVhMTkyYVhOcFlteGxJanR6T2pFNklqRWlPM002TVRrNkluQnNZWGxsY2w5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOam9pY0d4aGVXVnlYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pFM09pSjBaV0Z0WDJ4cGJtdGZhR0Z1Wkd4bGNpSTdjem94TWpvaWJtRjJhV2RoZEdWVVpXRnRJanR6T2pFM09pSm5ZVzFsWDJ4cGJtdGZhR0Z1Wkd4bGNpSTdjem94TWpvaWJtRjJhV2RoZEdWSFlXMWxJanR6T2pFNU9pSndiR0Y1WlhKZmJHbHVhMTlvWVc1a2JHVnlJanR6T2pFME9pSnVZWFpwWjJGMFpWQnNZWGxsY2lJN2N6b3hPRG9pWVhKbGJtRmZiR2x1YTE5MmFYTnBZbXhsSWp0ek9qRTZJakVpTzNNNk1UVTZJbUZ5Wlc1aFgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU0T2lKaGNtVnVZVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVE02SW01aGRtbG5ZWFJsUVhKbGJtRWlPM002T1RvaWJHVmhaM1ZsWDJsa0lqdHpPalU2SWpFeE1UZ3pJanR6T2prNkltZGhiV1ZmWkdGNWN5STdjem94T2lJeElqdHpPakUzT2lKemFHOTNYM0psWm1WeVpXVmZZMmwwZVNJN2N6b3hPaUl4SWp0ek9qRXpPaUpwZEdWdGMxOXZibDl3WVdkbElqdHpPakk2SWpNd0lqdHpPakl3T2lKemRHRm5aVjlzWlhabGJITmZkbWx6YVdKc1pTSTdjem94T2lJeUlqdHpPamc2SW5SbGJYQnNZWFJsSWp0ek9qSTZJbll5SWp0OScsCgkJCXBhcmFtczogcGFyYW1zCgkJfSkucmVuZGVyUGFydGlhbChuYW1lc3BhY2UuZmlsdGVycy50YWIpOwoJfQoKCW5hbWVzcGFjZS5yZWxvYWRGaWx0ZXJzID0gZnVuY3Rpb24oZmlsdGVyLCByZW1vdmVIYXNoKSB7CgoJCWZvcihrZXkgaW4gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnMpIHsKCQkJaWYoa2V5ICE9IGZpbHRlciApIHsKCQkJCWlmKGtleSAgIT0gJ3NlYXNvbicpIHsKCQkJCQlpZihyZW1vdmVIYXNoKSB7CgkJCQkJCU1CVC5BUEkuSGlzdG9yeS5zZXRQYXJhbSgnMzMtMzAzJywgTUJULkFQSS5IaXN0b3J5LmZpbHRlckluZGV4LCBrZXksIG51bGwpOwoJCQkJCX0KCQkJCQlkZWxldGUgbmFtZXNwYWNlLmZpbHRlcnNba2V5XTsKCQkJCX0KCQkJCXZhciBwYXJhbXMgPSB7fTsKCgkJCSAgICBpZihuYW1lc3BhY2UuZmlsdGVycy5zdGFnZSkgewoJCQkJCXBhcmFtcy5zdGFnZV9pZCA9IG5hbWVzcGFjZS5maWx0ZXJzLnN0YWdlOwoJCQkJfQoKCQkJCWlmKG5hbWVzcGFjZS5maWx0ZXJzLnNlYXNvbikgewoJCQkJCXBhcmFtcy5zZWFzb25faWQgPSBuYW1lc3BhY2UuZmlsdGVycy5zZWFzb247CgkJCQl9CgkJCQluZXcgTUJULkFQSS5XaWRnZXRzLldpZGdldCh7CgkJCQkJd2lkZ2V0SWQ6IDMwMywKCQkJCQljb250YWluZXI6ICczMy0zMDMtY29udGFpbmVyJywKCQkJCQlzdGF0ZTogJ016VXpPRGt5TXpFNU5HRTZNVGs2ZTNNNk1UYzZJblJsWVcxZmJHbHVhMTkyYVhOcFlteGxJanR6T2pFNklqRWlPM002TWpBNkluTm9iM2RmYzJWaGMyOXVYM05sYkdWamRHOXlJanR6T2pFNklqRWlPM002TVRjNkltZGhiV1ZmYkdsdWExOTJhWE5wWW14bElqdHpPakU2SWpFaU8zTTZNVGs2SW5Cc1lYbGxjbDlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hORG9pZEdWaGJWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TkRvaVoyRnRaVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakUzT2lKMFpXRnRYMnhwYm10ZmFHRnVaR3hsY2lJN2N6b3hNam9pYm1GMmFXZGhkR1ZVWldGdElqdHpPakUzT2lKbllXMWxYMnhwYm10ZmFHRnVaR3hsY2lJN2N6b3hNam9pYm1GMmFXZGhkR1ZIWVcxbElqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pveE9Eb2lZWEpsYm1GZmJHbHVhMTkyYVhOcFlteGxJanR6T2pFNklqRWlPM002TVRVNkltRnlaVzVoWDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTRPaUpoY21WdVlWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1UTTZJbTVoZG1sbllYUmxRWEpsYm1FaU8zTTZPVG9pYkdWaFozVmxYMmxrSWp0ek9qVTZJakV4TVRneklqdHpPams2SW1kaGJXVmZaR0Y1Y3lJN2N6b3hPaUl4SWp0ek9qRTNPaUp6YUc5M1gzSmxabVZ5WldWZlkybDBlU0k3Y3pveE9pSXhJanR6T2pFek9pSnBkR1Z0YzE5dmJsOXdZV2RsSWp0ek9qSTZJak13SWp0ek9qSXdPaUp6ZEdGblpWOXNaWFpsYkhOZmRtbHphV0pzWlNJN2N6b3hPaUl5SWp0ek9qZzZJblJsYlhCc1lYUmxJanR6T2pJNkluWXlJanQ5JywKCQkJCQlwYXJhbXM6IHBhcmFtcwoJCQkJfSkucmVuZGVyUGFydGlhbChuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldKTsKCQkJfQoJCX0KCX0KCgluYW1lc3BhY2Uub25UYWJDbGljayA9IGZ1bmN0aW9uKHRhYlBhbmVsLCBpbmRleCwgcGFydCwgdHlwZSkgewoKCQluYW1lc3BhY2UuYWN0aXZlVGFiID0gaW5kZXg7CgoJCW5hbWVzcGFjZS5maWx0ZXJzLnR5cGUgPSB0eXBlOwoJCW5hbWVzcGFjZS5maWx0ZXJzLnRhYiA9IHBhcnQ7CgoJCXZhciBwYXJhbXMgPSB7fTsKCgkJaWYobmFtZXNwYWNlLmZpbHRlcnMucGFnZSkgewoJCQlwYXJhbXMucGFnZSA9IG5hbWVzcGFjZS5maWx0ZXJzLnBhZ2U7CgkJfQoKCQlwYXJhbXMuZmlsdGVyICA9ICBuYW1lc3BhY2UuZmlsdGVyczsKCgkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJCQl3aWRnZXRJZDogMzAzLAoJCQljb250YWluZXI6ICczMy0zMDMtY29udGFpbmVyJywKCQkJc3RhdGU6ICdNelV6T0RreU16RTVOR0U2TVRrNmUzTTZNVGM2SW5SbFlXMWZiR2x1YTE5MmFYTnBZbXhsSWp0ek9qRTZJakVpTzNNNk1qQTZJbk5vYjNkZmMyVmhjMjl1WDNObGJHVmpkRzl5SWp0ek9qRTZJakVpTzNNNk1UYzZJbWRoYldWZmJHbHVhMTkyYVhOcFlteGxJanR6T2pFNklqRWlPM002TVRrNkluQnNZWGxsY2w5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOam9pY0d4aGVXVnlYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pFM09pSjBaV0Z0WDJ4cGJtdGZhR0Z1Wkd4bGNpSTdjem94TWpvaWJtRjJhV2RoZEdWVVpXRnRJanR6T2pFM09pSm5ZVzFsWDJ4cGJtdGZhR0Z1Wkd4bGNpSTdjem94TWpvaWJtRjJhV2RoZEdWSFlXMWxJanR6T2pFNU9pSndiR0Y1WlhKZmJHbHVhMTlvWVc1a2JHVnlJanR6T2pFME9pSnVZWFpwWjJGMFpWQnNZWGxsY2lJN2N6b3hPRG9pWVhKbGJtRmZiR2x1YTE5MmFYTnBZbXhsSWp0ek9qRTZJakVpTzNNNk1UVTZJbUZ5Wlc1aFgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU0T2lKaGNtVnVZVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVE02SW01aGRtbG5ZWFJsUVhKbGJtRWlPM002T1RvaWJHVmhaM1ZsWDJsa0lqdHpPalU2SWpFeE1UZ3pJanR6T2prNkltZGhiV1ZmWkdGNWN5STdjem94T2lJeElqdHpPakUzT2lKemFHOTNYM0psWm1WeVpXVmZZMmwwZVNJN2N6b3hPaUl4SWp0ek9qRXpPaUpwZEdWdGMxOXZibDl3WVdkbElqdHpPakk2SWpNd0lqdHpPakl3T2lKemRHRm5aVjlzWlhabGJITmZkbWx6YVdKc1pTSTdjem94T2lJeUlqdHpPamc2SW5SbGJYQnNZWFJsSWp0ek9qSTZJbll5SWp0OScsCgkJCXBhcmFtczogcGFyYW1zCgkJfSkucmVuZGVyUGFydGlhbChwYXJ0KTsKCX0KCgl2YXIgdGFicyA9IFtdOwoJCgl2YXIgbWVudUl0ZW1zID0gTUJULkFQSS5nZXQoJzMzLTMwMy1tYnQtdjItbmF2aWdhdGlvbicpLmNoaWxkTm9kZXM7CgkKCWZvcih2YXIgaSA9IDA7IGkgPCAgbWVudUl0ZW1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYobWVudUl0ZW1zW2ldLm5vZGVUeXBlID09IDEpIHsKICAgICAgICAJdGFicy5wdXNoKHsKICAgICAgICAJCXRhYklkOiBtZW51SXRlbXNbaV0uaWQsCiAgICAgICAgCQluZWVkTG9hZDogTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25UYWJDbGljaywgbnVsbCwgW21lbnVJdGVtc1tpXS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScpLCBtZW51SXRlbXNbaV0uZ2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnKV0sIDIpLAogICAgICAgIAl9KTsKICAgICAgICB9Cgl9CgoJCgkJCQkJdmFyIGFjdGl2ZVRhYiA9IDA7CgkJCQoKCWlmICh0eXBlb2YgKG5hbWVzcGFjZS5pbml0Q29uZmlnKSAhPSAndW5kZWZpbmVkJykgewkKCQlpZih0eXBlb2YgKG5hbWVzcGFjZS5pbml0Q29uZmlnLmZpbHRlcnMpICE9ICd1bmRlZmluZWQnKSB7CgkJCWZvcih2YXIga2V5IGluIG5hbWVzcGFjZS5pbml0Q29uZmlnLmZpbHRlcnMpIHsKCQkJCW5hbWVzcGFjZS5maWx0ZXJzW2tleV0gPSBuYW1lc3BhY2UuaW5pdENvbmZpZy5maWx0ZXJzW2tleV0udmFsdWU7CgkJCQlpZihrZXkgPT0gJ3NlYXNvbicgfHwga2V5ID09ICdzdGFnZScpIHsKCQkJCQluYW1lc3BhY2UucmVsb2FkRmlsdGVycyhrZXksIGZhbHNlKTsKCQkJCX0KCQkJfQoJCX0KCgkJaWYodHlwZW9mIChuYW1lc3BhY2UuaW5pdENvbmZpZy5wYWdlcykgIT0gJ3VuZGVmaW5lZCcpIHsKCQkJbmFtZXNwYWNlLmZpbHRlcnMucGFnZSA9IG5hbWVzcGFjZS5pbml0Q29uZmlnLnBhZ2VzWzBdLnBhZ2U7CgkJfQoKCQlpZih0eXBlb2YobmFtZXNwYWNlLmluaXRDb25maWcudGFicykgIT0gJ3VuZGVmaW5lZCcpIHsKCQkJYWN0aXZlVGFiID0gbmFtZXNwYWNlLmluaXRDb25maWcudGFic1swXS5hY3RpdmVUYWI7CgkJfQoJfQoKCW5hbWVzcGFjZS50YWJDb250cm9sbGVyID0gW107CgoJbmFtZXNwYWNlLnRhYkNvbnRyb2xsZXJbMF0gPSBuZXcgTUJULkFQSS5VSS5UYWJQYW5lbCh7CgkJcGFyZW50SW5zdGFuY2VJZDogJzMzLTMwMycsCgkJY29udGFpbmVyOiAnMzMtMzAzLWNvbnRhaW5lcicsCgkJdGFiQ2xhc3M6ICdtYnQtdjItbmF2aWdhdGlvbi10YWInLAogICAgICAgIGFjdGl2ZVRhYkNsYXNzOiAnbWJ0LXYyLW5hdmlnYXRpb24tdGFiLWFjdGl2ZScsCiAgICAgICAgdGFiczogdGFicywKICAgICAgICBhY3RpdmVUYWI6IGFjdGl2ZVRhYiwKICAgICAgICBub0NhY2hlOiB0cnVlCgl9KTsKCglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTMwMy1maWx0ZXItc2Vhc29uJywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ3NlYXNvbicsIHRydWVdLCAyKSk7CglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTMwMy1maWx0ZXItc3RhZ2UnLCAiY2hhbmdlIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25GaWx0ZXJDaGFuZ2UsIG51bGwsIFsnc3RhZ2UnLCB0cnVlXSwgMikpOwoJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy0zMDMtZmlsdGVyLWdhbWUtZGF5JywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ2dhbWVfZGF5J10sIDEpKTsKCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtMzAzLWZpbHRlci10ZWFtJywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ3RlYW0nXSwgMSkpOwoJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy0zMDMtZmlsdGVyLW1vbnRoJywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ21vbnRoJ10sIDEpKTsKCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtMzAzLWZpbHRlci1hcmVuYScsICJjaGFuZ2UiLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vbkZpbHRlckNoYW5nZSwgbnVsbCwgWydhcmVuYSddLCAxKSk7CiAgICAKCgovL11dPgo8L3NjcmlwdD48L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+Cgk8ZGl2IGlkPSJzdGFuZGluZ3MiIG1idF93aWRnZXQ9IjMwMSI+PGRpdiBpZD0ibWJ0LXYyLXN0YW5kaW5ncy1sb25nLXdpZGdldCIgY2xhc3M9Im1idC12Mi13aWRnZXQiPgoJPGRpdiBjbGFzcz0ibWJ0LXYyLWhlYWRlciI+CgkJTGVzdHZpY2EKCTwvZGl2PgoJPGRpdiBjbGFzcz0ibWJ0LXYyLXdpZGdldC1jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9IjMzLTMwMS1zdGFuZGluZ3MtY29udGFpbmVyIiBjbGFzcz0ibWJ0LXYyLTMzLTMwMS1zdGFuZGluZ3MtY29udGFpbmVyIj4JCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItdGFibGUtaGVhZGVyLWJlZm9yZS10YWJsZSI+MS4gZGVsIC0gU2t1cGluYSAxPC9kaXY+CgkJCTxkaXYgaWQ9IjMzLTMwMS10YWJsZXMtY29udGFpbmVyLTEiIGNsYXNzPSJtYnQtdjItcmVzcG9uc2l2ZS10YWJsZS1jb250YWluZXIiPgoJCQkJPHRhYmxlIGlkPSJtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtMSIgY2xhc3M9Im1idC12Mi10YWJsZSBtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUiPgoJCQkJCTx0aGVhZD4KCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQk8dGg+TTwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8dGg+RWtpcGE8L3RoPgoJCQkJCQkJCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPlQ8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgCQkJCQkJCQkgICAgPHRoPlo8L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHRoPlA8L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICAgCgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgCQkJCQkJCQkJPHRoPlTEjDwvdGg+ICAgIAoJCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCQk8dGg+VMSML1BSPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAKCQkJCQkJICAgIAkJCQkJCQkJPHRoPisvLTwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+RFQvUFQ8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPkRvbS4gWi9QPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Hb3N0LiBaL1A8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkRvbS4gKy8tPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Hb3N0LiArLy08L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlphZC4gNTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+WmFkLiAxMDwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGg+U2VyLjwvdGg+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5TZXIuIGRvbWE8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlNlci4gdiBnb3N0LjwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAk8dGggdGl0bGU9IlRlc25lIHQuIj4KCQkJICAgICAgICAgICAgICAgIAkJKy8tNQoJCQkgICAgICAgICAgICAgICAgCTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkJCQk8L3RyPgoJCQkJCTwvdGhlYWQ+CgkJCQkJPHRib2R5PgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkxLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDYyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODUzNTE3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5GZWxpeDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODUzNTE3MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1MzUxNzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTM1MTcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTM1MTcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDAKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEwPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQ2NjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIxNwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjQ5CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA5My4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDMuNAkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAzPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwMS41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDMuNQoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD44Ny43PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDMuMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+KzU8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisyPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTIuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzODgzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzODgzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTM4MTAwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkNlbGplIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1MzgxMDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTM4MTAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODUzODEwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODUzODEwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNgoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD40PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAyCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xMDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA0NTU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yNDgKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDIwNwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgNzUuODxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQxLjMJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NC4zPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzkuMwoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD43Ny4zPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDMuMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTMuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTczJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTczIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTQwMjgwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU0MDI4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NDAyODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTQwMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTQwMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjI8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDMKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjc8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjE4PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+Mjc1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAtNTcKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDQzLjY8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41NS4wCQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDYuNzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjYxLjMKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MzkuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ1LjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQk0LgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2NzUxNzcmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0Njc1MTc3IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTQyMjgwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkxpdGlqYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU0MjI4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NDIyODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTQyMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTQyMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA2CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDYKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjY8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTQ3PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTQ2CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAtMzk5CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAyNC41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+OTEuMAkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MwkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MwkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI4LjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj44Mi4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjIwLjc8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xMDAuMDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTY8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJPC90Ym9keT4KCQkJCTwvdGFibGU+CgkJCTwvZGl2PgoJCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgkJCQkvLzwhW0NEQVRBWwoJCQkJCgkJCQkgICAgCgkJCQkgICAgbmV3IE1CVC5BUEkucmVzcG9uc2l2ZVRhYmxlICh7CgkJCQkJCXRhYmxlOiAnbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTEnLAoJCQkJCQl0YWJsZXNDb250YWluZXI6ICczMy0zMDEtdGFibGVzLWNvbnRhaW5lci0xJywKCQkJCQkJY29sdW1uc1RvUGluOiAyCgkJCQkJfSkud2F0Y2hUYWJsZSgpOwoKCQkJCQoJCQkJLy9dXT4JCgkJCTwvc2NyaXB0PgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWRpdmlkZXIiPjwvZGl2PgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi10YWJsZS1oZWFkZXItYmVmb3JlLXRhYmxlIj4xLiBkZWwgLSBTa3VwaW5hIDI8L2Rpdj4KCQkJPGRpdiBpZD0iMzMtMzAxLXRhYmxlcy1jb250YWluZXItMiIgY2xhc3M9Im1idC12Mi1yZXNwb25zaXZlLXRhYmxlLWNvbnRhaW5lciI+CgkJCQk8dGFibGUgaWQ9Im1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZS0yIiBjbGFzcz0ibWJ0LXYyLXRhYmxlIG1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZSI+CgkJCQkJPHRoZWFkPgoJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCTx0aD5NPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5Fa2lwYTwvdGg+CgkJCQkJCQkJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+VDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCSAgICA8dGg+WjwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8dGg+UDwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgICAKCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCQk8dGg+VMSMPC90aD4gICAgCgkJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJCTx0aD5UxIwvUFI8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAoJCQkJCQkgICAgCQkJCQkJCQk8dGg+Ky8tPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5EVC9QVDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+RG9tLiBaL1A8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuIFovUDwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+RG9tLiArLy08L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+WmFkLiA1PC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDEwPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0aD5TZXIuPC90aD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlNlci4gZG9tYTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiB2IGdvc3QuPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCTx0aCB0aXRsZT0iVGVzbmUgdC4iPgoJCQkgICAgICAgICAgICAgICAgCQkrLy01CgkJCSAgICAgICAgICAgICAgICAJPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCQkJCTwvdHI+CgkJCQkJPC90aGVhZD4KCQkJCQk8dGJvZHk+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTEuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTQ4MzQwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkplbMWhYSDFoG1hcmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTQ4MzQwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU0ODM0MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NDgzNDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NDgzNDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDMKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMAoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxODg8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj45NAoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgOTQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDYyLjc8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zMS4zCQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTcuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM0LjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NzMuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI2LjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4zPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPiszPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkyLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDAwMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDAwMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODU1MDY1MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5NYXJpYm9yPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTUwNjUwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU1MDY1MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NTA2NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NTA2NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDMKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMQoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxNjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xMTgKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQ1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA1NC4zPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzkuMwkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc0LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zMi4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ0LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40My4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4rMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMy4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5NDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5NDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1NTMxODAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+SWxpcmlqYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU1MzE4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NTMxODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTUzMTgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTUzMTgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDQKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTE5PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MjU4CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAtMTM5CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAyOS44PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NjQuNQkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI4LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42Mi41CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjMxLjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42Ni41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tNDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQk8L3Rib2R5PgoJCQkJPC90YWJsZT4KCQkJPC9kaXY+CgkJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCS8vPCFbQ0RBVEFbCgkJCQkKCQkJCSAgICAKCQkJCSAgICBuZXcgTUJULkFQSS5yZXNwb25zaXZlVGFibGUgKHsKCQkJCQkJdGFibGU6ICdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtMicsCgkJCQkJCXRhYmxlc0NvbnRhaW5lcjogJzMzLTMwMS10YWJsZXMtY29udGFpbmVyLTInLAoJCQkJCQljb2x1bW5zVG9QaW46IDIKCQkJCQl9KS53YXRjaFRhYmxlKCk7CgoJCQkJCgkJCQkvL11dPgkKCQkJPC9zY3JpcHQ+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXRhYmxlLWhlYWRlci1iZWZvcmUtdGFibGUiPjEuIGRlbCAtIFNrdXBpbmEgMzwvZGl2PgoJCQk8ZGl2IGlkPSIzMy0zMDEtdGFibGVzLWNvbnRhaW5lci0zIiBjbGFzcz0ibWJ0LXYyLXJlc3BvbnNpdmUtdGFibGUtY29udGFpbmVyIj4KCQkJCTx0YWJsZSBpZD0ibWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTMiIGNsYXNzPSJtYnQtdjItdGFibGUgbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlIj4KCQkJCQk8dGhlYWQ+CgkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJPHRoPk08L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHRoPkVraXBhPC90aD4KCQkJCQkJCQkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5UPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJICAgIDx0aD5aPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5QPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgIAoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJCTx0aD5UxIw8L3RoPiAgICAKCQkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkJPHRoPlTEjC9QUjwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCgkJCQkJCSAgICAJCQkJCQkJCTx0aD4rLy08L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPkRUL1BUPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5Eb20uIFovUDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gWi9QPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Eb20uICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gKy8tPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDU8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlphZC4gMTA8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRoPlNlci48L3RoPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiBkb21hPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5TZXIuIHYgZ29zdC48L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJPHRoIHRpdGxlPSJUZXNuZSB0LiI+CgkJCSAgICAgICAgICAgICAgICAJCSsvLTUKCQkJICAgICAgICAgICAgICAgIAk8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJCQkJPC90cj4KCQkJCQk8L3RoZWFkPgoJCQkJCTx0Ym9keT4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMS4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjMyMDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjMyMDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1NTkyMjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+S29uamljZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU1OTIyMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NTkyMjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTU5MjIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTU5MjIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDAKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjg8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMzE0PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTUxCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxNjMKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDc4LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zNy44CQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzYuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ1LjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+ODAuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjMwLjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD40PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPis0PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkyLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2NDYyNjkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjQ2MjY5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTYxMjYwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkNlbGplIEI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NjEyNjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTYxMjYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU2MTI2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU2MTI2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAyCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD40PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDExMzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIwMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTkwCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAzNy43PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NjcuNwkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM0LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj45NC4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjM5LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41NC41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4xPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4xPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMy4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjMxMDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjMxMDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1NjMxNTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+SmFuaW5hPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTYzMTUwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU2MzE1MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NjMxNTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NjMxNTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDMKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMwoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxMTE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xODQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIC03MwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgMzcuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjYxLjMJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAzMC41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTMuMAoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD41MC4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzguMDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTM8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJPC90Ym9keT4KCQkJCTwvdGFibGU+CgkJCTwvZGl2PgoJCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgkJCQkvLzwhW0NEQVRBWwoJCQkJCgkJCQkgICAgCgkJCQkgICAgbmV3IE1CVC5BUEkucmVzcG9uc2l2ZVRhYmxlICh7CgkJCQkJCXRhYmxlOiAnbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTMnLAoJCQkJCQl0YWJsZXNDb250YWluZXI6ICczMy0zMDEtdGFibGVzLWNvbnRhaW5lci0zJywKCQkJCQkJY29sdW1uc1RvUGluOiAyCgkJCQkJfSkud2F0Y2hUYWJsZSgpOwoKCQkJCQoJCQkJLy9dXT4JCgkJCTwvc2NyaXB0PgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWRpdmlkZXIiPjwvZGl2PgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi10YWJsZS1oZWFkZXItYmVmb3JlLXRhYmxlIj4xLiBkZWwgLSBTa3VwaW5hIDQ8L2Rpdj4KCQkJPGRpdiBpZD0iMzMtMzAxLXRhYmxlcy1jb250YWluZXItNCIgY2xhc3M9Im1idC12Mi1yZXNwb25zaXZlLXRhYmxlLWNvbnRhaW5lciI+CgkJCQk8dGFibGUgaWQ9Im1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZS00IiBjbGFzcz0ibWJ0LXYyLXRhYmxlIG1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZSI+CgkJCQkJPHRoZWFkPgoJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCTx0aD5NPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5Fa2lwYTwvdGg+CgkJCQkJCQkJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+VDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCSAgICA8dGg+WjwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8dGg+UDwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgICAKCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCQk8dGg+VMSMPC90aD4gICAgCgkJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJCTx0aD5UxIwvUFI8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAoJCQkJCQkgICAgCQkJCQkJCQk8dGg+Ky8tPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5EVC9QVDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+RG9tLiBaL1A8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuIFovUDwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+RG9tLiArLy08L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+WmFkLiA1PC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDEwPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0aD5TZXIuPC90aD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlNlci4gZG9tYTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiB2IGdvc3QuPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCTx0aCB0aXRsZT0iVGVzbmUgdC4iPgoJCQkgICAgICAgICAgICAgICAgCQkrLy01CgkJCSAgICAgICAgICAgICAgICAJPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCQkJCTwvdHI+CgkJCQkJPC90aGVhZD4KCQkJCQk8dGJvZHk+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTEuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzOTczJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzOTczIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTY5MDUwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkplxb5pY2EgQTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU2OTA1MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NjkwNTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTY5MDUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTY5MDUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDAKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEwPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQxNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE4MwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjMyCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA4My4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzYuNgkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAzPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDg2LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yNy41CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjgxLjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40Mi43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4rNTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPiszPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMi4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ5JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODU3MTA0MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj7EjHJub21lbGo8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NzEwNDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTcxMDQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU3MTA0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU3MTA0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAzCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDIxMTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjMwNwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTk2CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA0Mi4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NjEuNAkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ1LjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41My4zCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjM3LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj43My41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMy4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQwMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQwMjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1NzI4OTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+R3Jvc3VwbGplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTcyODkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU3Mjg5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NzI4OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1NzI4OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMgoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyMTg8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yMTEKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDcKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDU0LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41Mi44CQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTMuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjU4LjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NTYuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ3LjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQk0LgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTkxMzkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjE5MTM5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTc0NzEwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktya2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU3NDcxMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1NzQ3MTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTc0NzEwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTc0NzEwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDQKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTU4PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzAxCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAtMTQzCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAzOS41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzUuMwkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ3LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj44MS41CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjMyLjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42OS4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tNDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQk8L3Rib2R5PgoJCQkJPC90YWJsZT4KCQkJPC9kaXY+CgkJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCS8vPCFbQ0RBVEFbCgkJCQkKCQkJCSAgICAKCQkJCSAgICBuZXcgTUJULkFQSS5yZXNwb25zaXZlVGFibGUgKHsKCQkJCQkJdGFibGU6ICdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtNCcsCgkJCQkJCXRhYmxlc0NvbnRhaW5lcjogJzMzLTMwMS10YWJsZXMtY29udGFpbmVyLTQnLAoJCQkJCQljb2x1bW5zVG9QaW46IDIKCQkJCQl9KS53YXRjaFRhYmxlKCk7CgoJCQkJCgkJCQkvL11dPgkKCQkJPC9zY3JpcHQ+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXRhYmxlLWhlYWRlci1iZWZvcmUtdGFibGUiPjEuIGRlbCAtIFNrdXBpbmEgNTwvZGl2PgoJCQk8ZGl2IGlkPSIzMy0zMDEtdGFibGVzLWNvbnRhaW5lci01IiBjbGFzcz0ibWJ0LXYyLXJlc3BvbnNpdmUtdGFibGUtY29udGFpbmVyIj4KCQkJCTx0YWJsZSBpZD0ibWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTUiIGNsYXNzPSJtYnQtdjItdGFibGUgbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlIj4KCQkJCQk8dGhlYWQ+CgkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJPHRoPk08L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHRoPkVraXBhPC90aD4KCQkJCQkJCQkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5UPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJICAgIDx0aD5aPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5QPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgIAoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJCTx0aD5UxIw8L3RoPiAgICAKCQkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkJPHRoPlTEjC9QUjwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCgkJCQkJCSAgICAJCQkJCQkJCTx0aD4rLy08L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPkRUL1BUPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5Eb20uIFovUDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gWi9QPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Eb20uICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gKy8tPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDU8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlphZC4gMTA8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRoPlNlci48L3RoPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiBkb21hPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5TZXIuIHYgZ29zdC48L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJPHRoIHRpdGxlPSJUZXNuZSB0LiI+CgkJCSAgICAgICAgICAgICAgICAJCSsvLTUKCQkJICAgICAgICAgICAgICAgIAk8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJCQkJPC90cj4KCQkJCQk8L3RoZWFkPgoJCQkJCTx0Ym9keT4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMS4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQwNjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQwNjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1ODA1NjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+VHJpZ2xhdjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU4MDU2MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1ODA1NjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTgwNTYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTgwNTYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDAKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjg8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMzM2PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+ODMKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI1MwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgODQuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIwLjgJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAxMDMuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIxLjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NjQuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIwLjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD40PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPis0PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkyLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTI0NjM1MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjI0NjM1MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODU4MjYxMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5Ub2xtaW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1ODI2MTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTgyNjEwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4MjYxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4MjYxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAzCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDIyNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI5NQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTcwCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA0NS4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTkuMAkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQyLjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41NC4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ3LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42Mi4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisyPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4xPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMy4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODU4NDQ3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5MZWRpdGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1ODQ0NzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTg0NDcwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4NDQ3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4NDQ3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAxCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE2MjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE0MgoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjAKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDU0LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40Ny4zCQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTIuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ1LjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NTcuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjUyLjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPi0xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQk0LgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MzMzNjEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjMzMzYxIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTg2MzAwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPlNlxb5hbmE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1ODYzMDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTg2MzAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4NjMwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU4NjMwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNAoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICA0CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD40PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDEwMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjMwNQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTIwMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgMjUuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjc2LjMJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMS4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzMuNQoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4zMC4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzkuMDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJPC90Ym9keT4KCQkJCTwvdGFibGU+CgkJCTwvZGl2PgoJCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgkJCQkvLzwhW0NEQVRBWwoJCQkJCgkJCQkgICAgCgkJCQkgICAgbmV3IE1CVC5BUEkucmVzcG9uc2l2ZVRhYmxlICh7CgkJCQkJCXRhYmxlOiAnbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTUnLAoJCQkJCQl0YWJsZXNDb250YWluZXI6ICczMy0zMDEtdGFibGVzLWNvbnRhaW5lci01JywKCQkJCQkJY29sdW1uc1RvUGluOiAyCgkJCQkJfSkud2F0Y2hUYWJsZSgpOwoKCQkJCQoJCQkJLy9dXT4JCgkJCTwvc2NyaXB0PgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWRpdmlkZXIiPjwvZGl2PgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi10YWJsZS1oZWFkZXItYmVmb3JlLXRhYmxlIj4xLiBkZWwgLSBTa3VwaW5hIDY8L2Rpdj4KCQkJPGRpdiBpZD0iMzMtMzAxLXRhYmxlcy1jb250YWluZXItNiIgY2xhc3M9Im1idC12Mi1yZXNwb25zaXZlLXRhYmxlLWNvbnRhaW5lciI+CgkJCQk8dGFibGUgaWQ9Im1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZS02IiBjbGFzcz0ibWJ0LXYyLXRhYmxlIG1idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZSI+CgkJCQkJPHRoZWFkPgoJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCTx0aD5NPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5Fa2lwYTwvdGg+CgkJCQkJCQkJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+VDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCSAgICA8dGg+WjwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8dGg+UDwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgICAKCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICAJCQkJCQkJCQk8dGg+VMSMPC90aD4gICAgCgkJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJCTx0aD5UxIwvUFI8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAoJCQkJCQkgICAgCQkJCQkJCQk8dGg+Ky8tPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5EVC9QVDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+RG9tLiBaL1A8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuIFovUDwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+RG9tLiArLy08L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkdvc3QuICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+WmFkLiA1PC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDEwPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0aD5TZXIuPC90aD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlNlci4gZG9tYTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiB2IGdvc3QuPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCTx0aCB0aXRsZT0iVGVzbmUgdC4iPgoJCQkgICAgICAgICAgICAgICAgCQkrLy01CgkJCSAgICAgICAgICAgICAgICAJPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCQkJCTwvdHI+CgkJCQkJPC90aGVhZD4KCQkJCQk8dGJvZHk+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTEuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MDQzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MDQzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NTkyNDIwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktya2EgQTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU5MjQyMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1OTI0MjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTkyNDIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NTkyNDIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDAKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEwPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDM5MjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIxMQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTgxCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA3OC40PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDIuMgkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAzPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDgzLjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40MC4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjc1LjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40My43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4rNTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPiszPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMi4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5MDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1OTQ0NzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RG9txb5hbGU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg1OTQ0NzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTk0NDcwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU5NDQ3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODU5NDQ3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNAoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAxCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI3NDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE3MwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTAxCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA2OC41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDMuMwkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDY5Ljc8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41MS43CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjY1LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xOC4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4zPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4rMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4xPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMy4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxOTMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQxOTMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1OTYzNDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+U3RyYcW+acWhxI1lPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTk2MzQwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU5NjM0MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1OTYzNDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1OTYzNDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMwoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyMjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yNTIKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIC0zMgoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgNTUuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjYzLjAJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA1MC4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+ODAuMAoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD41Ni43PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTcuMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjE8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTQuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDYzMzM1NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjQ2MzMzNTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg1OTgxNjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+SmXFvmljYSBDPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NTk4MTYwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODU5ODE2MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1OTgxNjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg1OTgxNjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDUKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgNQoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxMjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zNzQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIC0yNTAKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDI0Ljg8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj43NC44CQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4zCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjMuNzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjY2LjMKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MjYuNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjg3LjU8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPi01PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCTwvdGJvZHk+CgkJCQk8L3RhYmxlPgoJCQk8L2Rpdj4KCQkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJCQkJLy88IVtDREFUQVsKCQkJCQoJCQkJICAgIAoJCQkJICAgIG5ldyBNQlQuQVBJLnJlc3BvbnNpdmVUYWJsZSAoewoJCQkJCQl0YWJsZTogJ21idC12Mi1zdGFuZGluZ3MtbG9uZy10YWJsZS02JywKCQkJCQkJdGFibGVzQ29udGFpbmVyOiAnMzMtMzAxLXRhYmxlcy1jb250YWluZXItNicsCgkJCQkJCWNvbHVtbnNUb1BpbjogMgoJCQkJCX0pLndhdGNoVGFibGUoKTsKCgkJCQkKCQkJCS8vXV0+CQoJCQk8L3NjcmlwdD4KCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItdGFibGUtaGVhZGVyLWJlZm9yZS10YWJsZSI+MS4gZGVsIC0gU2t1cGluYSA3PC9kaXY+CgkJCTxkaXYgaWQ9IjMzLTMwMS10YWJsZXMtY29udGFpbmVyLTciIGNsYXNzPSJtYnQtdjItcmVzcG9uc2l2ZS10YWJsZS1jb250YWluZXIiPgoJCQkJPHRhYmxlIGlkPSJtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtNyIgY2xhc3M9Im1idC12Mi10YWJsZSBtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUiPgoJCQkJCTx0aGVhZD4KCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQk8dGg+TTwvdGg+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8dGg+RWtpcGE8L3RoPgoJCQkJCQkJCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPlQ8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgCQkJCQkJCQkgICAgPHRoPlo8L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHRoPlA8L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICAgCgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgCQkJCQkJCQkJPHRoPlTEjDwvdGg+ICAgIAoJCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCQk8dGg+VMSML1BSPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAKCQkJCQkJICAgIAkJCQkJCQkJPHRoPisvLTwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJCSAgICA8dGg+RFQvUFQ8L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPkRvbS4gWi9QPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Hb3N0LiBaL1A8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPkRvbS4gKy8tPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Hb3N0LiArLy08L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlphZC4gNTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+WmFkLiAxMDwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGg+U2VyLjwvdGg+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5TZXIuIGRvbWE8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlNlci4gdiBnb3N0LjwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAk8dGggdGl0bGU9IlRlc25lIHQuIj4KCQkJICAgICAgICAgICAgICAgIAkJKy8tNQoJCQkgICAgICAgICAgICAgICAgCTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkJCQk8L3RyPgoJCQkJCTwvdGhlYWQ+CgkJCQkJPHRib2R5PgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkxLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2MzkzMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2MzkzMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODYwMzk3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5JbGlyaWphPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjAzOTcwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODYwMzk3MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg2MDM5NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg2MDM5NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMAoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ODwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAzMjM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xMzIKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE5MQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgODAuODxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjMzLjAJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA3OS4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MjYuNQoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD44Mi41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzkuNTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+KzQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisyPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTIuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDYzMzM1MSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjQ2MzMzNTEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg2MDU5NDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+Q2Vya25pY2E8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg2MDU5NDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjA1OTQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYwNTk0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYwNTk0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAyCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD40PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDEwNTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIxNwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTExMgoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgMzUuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjcyLjMJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjEJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAyNy4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+OTAuMAoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4zOS4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NjMuNTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTMuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MjA1OTUzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMjA1OTUzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NjA3ODAwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkluZXM8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg2MDc4MDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjA3ODAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYwNzgwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYwNzgwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICAzCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4zPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDEyNjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIwNQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTc5CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICA0Mi4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NjguMwkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ5LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42NC4wCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjI4LjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj43Ny4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQk8L3Rib2R5PgoJCQkJPC90YWJsZT4KCQkJPC9kaXY+CgkJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCS8vPCFbQ0RBVEFbCgkJCQkKCQkJCSAgICAKCQkJCSAgICBuZXcgTUJULkFQSS5yZXNwb25zaXZlVGFibGUgKHsKCQkJCQkJdGFibGU6ICdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtNycsCgkJCQkJCXRhYmxlc0NvbnRhaW5lcjogJzMzLTMwMS10YWJsZXMtY29udGFpbmVyLTcnLAoJCQkJCQljb2x1bW5zVG9QaW46IDIKCQkJCQl9KS53YXRjaFRhYmxlKCk7CgoJCQkJCgkJCQkvL11dPgkKCQkJPC9zY3JpcHQ+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXRhYmxlLWhlYWRlci1iZWZvcmUtdGFibGUiPjEuIGRlbCAtIFNrdXBpbmEgODwvZGl2PgoJCQk8ZGl2IGlkPSIzMy0zMDEtdGFibGVzLWNvbnRhaW5lci04IiBjbGFzcz0ibWJ0LXYyLXJlc3BvbnNpdmUtdGFibGUtY29udGFpbmVyIj4KCQkJCTx0YWJsZSBpZD0ibWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlLTgiIGNsYXNzPSJtYnQtdjItdGFibGUgbWJ0LXYyLXN0YW5kaW5ncy1sb25nLXRhYmxlIj4KCQkJCQk8dGhlYWQ+CgkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJPHRoPk08L3RoPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPHRoPkVraXBhPC90aD4KCQkJCQkJCQkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5UPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJICAgIDx0aD5aPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTx0aD5QPC90aD4KCQkJCQkJCQkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgIAoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIAkJCQkJCQkJCTx0aD5UxIw8L3RoPiAgICAKCQkJCQkJCSAgICAJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkJPHRoPlTEjC9QUjwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCgkJCQkJCSAgICAJCQkJCQkJCTx0aD4rLy08L3RoPgoJCQkJCQkgICAgCQkJCQkJICAgIAkJCQkJCQkgICAgPHRoPkRUL1BUPC90aD4KCQkJCQkJICAgIAkJCQkJCSAgICAJCQkJCQkJICAgIDx0aD5Eb20uIFovUDwvdGg+CgkJCQkJCSAgICAJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gWi9QPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5Eb20uICsvLTwvdGg+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+R29zdC4gKy8tPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5aYWQuIDU8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgPHRoPlphZC4gMTA8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRoPlNlci48L3RoPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICA8dGg+U2VyLiBkb21hPC90aD4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIDx0aD5TZXIuIHYgZ29zdC48L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJPHRoIHRpdGxlPSJUZXNuZSB0LiI+CgkJCSAgICAgICAgICAgICAgICAJCSsvLTUKCQkJICAgICAgICAgICAgICAgIAk8L3RoPgoJCQkgICAgICAgICAgICAgICAgCQkJCQkJPC90cj4KCQkJCQk8L3RoZWFkPgoJCQkJCTx0Ym9keT4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJMS4KCQkJCQkJCQkJCQkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD03MTkyMjEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI3MTkyMjEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg2MTM2OTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+VmlwYXZhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjEzNjkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODYxMzY5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg2MTM2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjg2MTM2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCQkJCQkJCQoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDUKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgMAoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MTA8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMzg3PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MTI1CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAyNjIKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDc3LjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4yNS4wCQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDM8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzMuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI1LjAKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+ODAuMzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI1LjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD41PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPis1PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4rMjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkyLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDEyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDEyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuODYxNTY2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5QaXZrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuODYxNTY2MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg2MTU2NjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NjE1NjYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC44NjE1NjYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQkJCQkJCQkKCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICA2CgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDIKCQkJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEwPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDMzOTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI5MAoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNDkKCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgIDU2LjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40OC4zCQkJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDI8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTIuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjU0LjMKCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+NjEuMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQyLjM8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjQ8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD40PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MjwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMTwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+KzI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj4wPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCgkJCQkJCQk8L3RyPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTx0cj4KCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkzLgoJCQkJCQkJCQkJCQkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCQkJPHRkPgoJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2NzUxNzkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0Njc1MTc5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC44NjE3NTIwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktyYXM8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg2MTc1MjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjE3NTIwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYxNzUyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYxNzUyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNgoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICA1CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD43PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDIxMjxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQzMwoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTIyMQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkJCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJCSAgICAgICAgICAgICAgICAgICAgMzUuMzxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjcyLjIJCQkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjIJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgMDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjMJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkJCQkgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA0MS43PHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzIuMwoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4yOS4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NzIuMDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjE8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+LTE8L3RkPgoJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPisxPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4tMzwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+MDxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAKCQkJCQkJCTwvdHI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQkJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJCTQuCgkJCQkJCQkJCQkJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9NDY1MjMyOSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjQ2NTIzMjkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjg2MTkzNDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+S29wZXI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjg2MTkzNDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC44NjE5MzQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYxOTM0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuODYxOTM0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkJCQkJCQkJCgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgNQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJICAgICAgICAgICAgICAgICAgICA0CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD42PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCQkJCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIDE4MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjI3MQoJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgPHRkPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgLTkwCgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCQkJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkJICAgICAgICAgICAgICAgICAgICAzNi4yPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NTQuMgkJCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAxPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAwPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MgkJCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCQkJCSAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQwLjA8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj40Ny4zCgkJCQkgICAgICAgICAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPjMwLjU8c3Bhbj48L3NwYW4+LzxzcGFuPjwvc3Bhbj42NC41PC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkJICAgICAgICAgICAgICAgIDx0ZD4xPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+NDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+MTxzcGFuPjwvc3Bhbj4vPHNwYW4+PC9zcGFuPjQ8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4tNDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCSAgICAgICAgICAgICAgICAJCQkJCSAgICAgICAgICAgICAgICA8dGQ+LTI8L3RkPgoJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgCQkJCQkgICAgICAgICAgICAgICAgPHRkPi0yPC90ZD4KCQkJCSAgICAgICAgICAgICAgICAJCQkJICAgICAgICAgICAgICAgIAkJCQkgICAgICAgICAgICAgICAgICAgIDx0ZD4wPHNwYW4+PC9zcGFuPi88c3Bhbj48L3NwYW4+MDwvdGQ+CgkJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAoJCQkJCQkJPC90cj4KCQkJCQkJCQkJCQk8L3Rib2R5PgoJCQkJPC90YWJsZT4KCQkJPC9kaXY+CgkJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJCS8vPCFbQ0RBVEFbCgkJCQkKCQkJCSAgICAKCQkJCSAgICBuZXcgTUJULkFQSS5yZXNwb25zaXZlVGFibGUgKHsKCQkJCQkJdGFibGU6ICdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGFibGUtOCcsCgkJCQkJCXRhYmxlc0NvbnRhaW5lcjogJzMzLTMwMS10YWJsZXMtY29udGFpbmVyLTgnLAoJCQkJCQljb2x1bW5zVG9QaW46IDIKCQkJCQl9KS53YXRjaFRhYmxlKCk7CgoJCQkJCgkJCQkvL11dPgkKCQkJPC9zY3JpcHQ+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJCQk8ZGl2IGlkPSJtYnQtdjItc3RhbmRpbmdzLWxvbmctdGllYnJlYWtlcnMiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KCQkJCSAgIDxkaXYgY2xhc3M9Im1idC12Mi1zdWJoZWFkZXIiPgoJCQkgICBPZGxvxI1pdHZlIG5hIGxlc3R2aWNpIG9iIGtvbmN1CgkJCSAgIAkJCTwvZGl2PgoJCQk8dGFibGUgY2xhc3M9Im1idC12Mi10YWJsZSBtYnQtdjItdGllYnJlYWtlcnMtdGFibGUgbWJ0LXYyLXRhYmxlLWJvcmRlcmVkIj4KCQkJICAgIDx0aGVhZD4KCQkJICAgICAgICA8dHI+CgkJCSAgICAgICAgICAgIDx0aD4KCQkJICAgICAgICAgICAgICAgIE0KCQkJICAgICAgICAgICAgPC90aD4KCQkJICAgICAgICAgICAgPHRoPgoJCQkgICAgICAgICAgICAgICAgSW1lCgkJCSAgICAgICAgICAgIDwvdGg+CgkJCSAgICAgICAgICAgIDx0aD4KCQkJICAgICAgICAgICAgICAgIE9waXMKCQkJICAgICAgICAgICAgPC90aD4KCQkJICAgICAgICA8L3RyPgoJCQkgICAgPC90aGVhZD4KCQkJICAgIDx0Ym9keT4KCQkgICAgICAgICAgICAJCSAgICAgICAgICAgICAgICA8dHI+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICAxLgoJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICBUb8SNa2UKCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICA8dGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgVG/EjWtlCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICA8L3RyPgoJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgICAgIDx0cj4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIDIuCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIElubmVyIHBvaW50cwoJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICBQb2ludHMgY291bnRpbmcgdGhlIGdhbWVzIGJldHdlZW4gdGllZCB0ZWFtcyBvbmx5CgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICA8L3RyPgoJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgICAgIDx0cj4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIDMuCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIElubmVyIGdvYWwgZGlmZmVyZW5jZQoJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICBHb2FsIGRpZmZlcmVuY2UgYmV0d2VlbiB0aWVkIHRlYW1zCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICA8L3RyPgoJCSAgICAgICAgICAgIAkJICAgICAgICAgICAgICAgIDx0cj4KCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIDQuCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIElubmVyIGdvYWxzCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIEdvYWxzIGNvdW50aW5nIHRoZSBnYW1lcyBiZXR3ZWVuIHRpZWQgdGVhbXMgb25seQoJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgPC90cj4KCQkgICAgICAgICAgICAJCSAgICAgICAgICAgICAgICA8dHI+CgkJCSAgICAgICAgICAgICAgICAJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICA1LgoJCQkgICAgICAgICAgICAgICAgPC90ZD4KCQkJICAgICAgICAgICAgICAgIDx0ZD4KCQkJICAgICAgICAgICAgICAgICAgICBSYXpsaWthIHYga2/FoWloICh2c2UgdGVrbWUpCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICAgICAgPHRkPgoJCQkgICAgICAgICAgICAgICAgICAgIFJhemxpa2EgdiBrb8WhaWggKHZzZSB0ZWttZSkKCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgIDwvdHI+CgkJICAgICAgICAgICAgCQkgICAgICAgICAgICAgICAgPHRyPgoJCQkgICAgICAgICAgICAgICAgCQkJICAgICAgICAgICAgICAgIAkJCSAgICAgICAgICAgICAgICA8dGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgNi4KCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICA8dGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgVG90YWwgZ29hbHMKCQkJICAgICAgICAgICAgICAgIDwvdGQ+CgkJCSAgICAgICAgICAgICAgICA8dGQ+CgkJCSAgICAgICAgICAgICAgICAgICAgVG90YWwgZ29hbHMgc2NvcmVkCgkJCSAgICAgICAgICAgICAgICA8L3RkPgoJCQkgICAgICAgICAgICA8L3RyPgoJCSAgICAgICAgICAgIAkJCSAgICA8L3Rib2R5PgoJCQk8L3RhYmxlPgoJCQk8L2Rpdj4KCTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGlkPSJtYnQtdjItc3RhbmRpbmdzLWxvbmctdGllYnJlYWtlcnMtbGluayIgaHJlZj0iIyIgb25jbGljaz0icmV0dXJuIGZhbHNlOyI+CiAgICAgICAgICAgICAgICBPZGxvxI1pdHZlIG5hIGxlc3R2aWNpIG9iIGtvbmN1IMK7CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIAogICAgPC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSIzMy0zMDEtdG1wLWNvbnRhaW5lciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij48L2Rpdj4KCgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgovLzwhW0NEQVRBWwoKCnZhciBuYW1lc3BhY2UgPSBNQlQuQVBJLlNhZmVOYW1lcy5Db250YWluZXIoJzMzLTMwMScpOwoKbmFtZXNwYWNlLmdldFNlYXNvbiA9IGZ1bmN0aW9uICgpIHsKCiAgICB2YXIgc2Vhc29uSWQgPSAxMDI1NzU7CgogICAgICAgIAoKICAgIHJldHVybiBzZWFzb25JZDsKfQoKbmFtZXNwYWNlLmxvYWRHcm91cHMgPSBmdW5jdGlvbiAoKSB7CgogICAgdmFyIHdpZGdldCA9IG5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHt3aWRnZXRJZDogMzAxLAogICAgICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6ICczMy0zMDEtdG1wLWNvbnRhaW5lcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vhc29uX2lkOiBuYW1lc3BhY2UuZ2V0U2Vhc29uKCkKICAgICAgICAgICAgICAgICAgICAgICAgfX0pOwogICAgd2lkZ2V0LnNldENhbGxiYWNrKCduYW1lc3BhY2UubG9hZFN0YW5kaW5ncycpOwogICAgd2lkZ2V0LnJlbmRlclBhcnRpYWwoJ2dldC1ncm91cHMnKTsgCgp9CgpuYW1lc3BhY2UuY2hhbmdlU2Vhc29uID0gZnVuY3Rpb24oKSB7CgogICAgCiAgICAgICAgbmFtZXNwYWNlLmxvYWRTdGFuZGluZ3MoKTsKICAgICAgICAKfQoKCm5hbWVzcGFjZS5zaG93TGVnZW5kID0gZnVuY3Rpb24oKSB7CglpZiAoTUJULkFQSS5nZXQoJzMzLTMwMS10aWVicmVha2VycycpKSB7CgkJTUJULkFQSS5nZXQoJzMzLTMwMS10aWVicmVha2VycycpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7Cgl9CglpZiAoTUJULkFQSS5nZXQoJzMzLTMwMS1sZWdlbmQnKSkgewoJCU1CVC5BUEkuZ2V0KCczMy0zMDEtbGVnZW5kJykuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7Cgl9Cn0KCm5hbWVzcGFjZS5zaG93VGllYnJlYWtlcnMgPSBmdW5jdGlvbigpIHsKICAgIHZhciBlbCA9IE1CVC5BUEkuZ2V0KCdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGllYnJlYWtlcnMnKTsKCWlmIChlbC5zdHlsZS5kaXNwbGF5ID09ICJibG9jayIpIHsKICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwoJfSBlbHNlIHsKICAgICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgIH0KfQoKCgpNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTMwMS1sZWdlbmQtbGluaycsICJjbGljayIsIG5hbWVzcGFjZS5zaG93TGVnZW5kKTsKTUJULkFQSS5FdmVudC5vYnNlcnZlKCdtYnQtdjItc3RhbmRpbmdzLWxvbmctdGllYnJlYWtlcnMtbGluaycsICJjbGljayIsIG5hbWVzcGFjZS5zaG93VGllYnJlYWtlcnMpOwoKCgpuYW1lc3BhY2UubG9hZFN0YW5kaW5ncyA9IGZ1bmN0aW9uKCkgewogICAgbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewogICAgICAgIHdpZGdldElkOiAzMDEsIAogICAgICAgIGNvbnRhaW5lcjogJzMzLTMwMS1zdGFuZGluZ3MtY29udGFpbmVyJywKICAgICAgICBzdGF0ZTogJ016a3hOekE1TURJd05HRTZNVEk2ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNaUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTWlJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qSTNPaUptZFd4c1gzTjBZVzVrYVc1bmMxOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNaUk3Y3pveU1Eb2ljM1JoWjJWZmJHVjJaV3h6WDNacGMybGliR1VpTzNNNk1Ub2lNaUk3Y3pvNU9pSnNaV0ZuZFdWZmFXUWlPM002TlRvaU1URXhPRE1pTzNNNk1UUTZJblJsWVcxZmJHbHVhMTkwZVhCbElqdHpPakU2SWpNaU8zTTZNVGM2SW5SbFlXMWZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRXlPaUp1WVhacFoyRjBaVlJsWVcwaU8zTTZNalE2SW1aMWJHeGZjM1JoYm1ScGJtZHpYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pJM09pSm1kV3hzWDNOMFlXNWthVzVuYzE5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRjNkltNWhkbWxuWVhSbFUzUmhibVJwYm1keklqdHpPamc2SW5SbGJYQnNZWFJsSWp0ek9qSTZJbll5SWp0OScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIHNlYXNvbl9pZDogbmFtZXNwYWNlLmdldFNlYXNvbigpLAogICAgICAgICAgICBzaG93VGVhbUxvZ286JycsCiAgICAgICAgICAgIHRlYW1Mb2dvU2l6ZTogJzIweDIwJwogICAgICAgIH0KICAgIH0pLnJlbmRlclBhcnRpYWwoInRhYmxlIik7CiAgICAKfQoKCm5hbWVzcGFjZS5hcHBseUZpbHRlciA9IGZ1bmN0aW9uKHBsLCBuZXdTZWFyY2gpIHsKCW5hbWVzcGFjZSA9IE1CVC5BUEkuU2FmZU5hbWVzLkNvbnRhaW5lcignMzMtMzAxJyk7CgluYW1lc3BhY2UubG9hZFN0YW5kaW5ncygpOwp9OwoKdHJ5IHsKCWlmIChNQlQuQVBJLkhpc3Rvcnkubm90Rm91bmRbTUJULkFQSS5IaXN0b3J5LmZpbHRlckluZGV4XSAmJiBNQlQuQVBJLkhpc3Rvcnkubm90Rm91bmRbTUJULkFQSS5IaXN0b3J5LmZpbHRlckluZGV4XVsnZ3JvdXAnXSA+IDApIHsKCQlNQlQuQVBJLmdldCgnMzMtMzAxLWZpbHRlci1ncm91cCcpLnZhbHVlID0gTUJULkFQSS5IaXN0b3J5Lm5vdEZvdW5kW01CVC5BUEkuSGlzdG9yeS5maWx0ZXJJbmRleF1bJ2dyb3VwJ107CgkJCgl9Cn0gY2F0Y2ggKGUpIHt9CgpuYW1lc3BhY2UubG9hZFN0YW5kaW5ncygpOwoKICAgIE1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtMzAxLWZpbHRlci1zZWFzb24nLCAiY2hhbmdlIiwgbmFtZXNwYWNlLmNoYW5nZVNlYXNvbiApOwoKLy9dXT4JCjwvc2NyaXB0PjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCTxkaXYgaWQ9InN0YW5kaW5ncyI+CgkJJm5ic3A7PC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJjb250YWluZXIiPgoJPGRpdiBpZD0ic3RhdHMtcGxheWVyIiBtYnRfd2lkZ2V0PSI2MDAiPjxkaXYgaWQ9Im1idC12Mi1wbGF5ZXJzLXN0YXRzIiBjbGFzcz0ibWJ0LXYyLXdpZGdldCI+Cgk8ZGl2IGNsYXNzPSJtYnQtdjItaGVhZGVyIj4KCQkJCQlTdGF0aXN0aWthCgkJCQoJPC9kaXY+Cgk8ZGl2IGNsYXNzPSJtYnQtdjItd2lkZ2V0LWNvbnRlbnQiPgoJCTxkaXYgaWQ9IjMzLTYwMC1tb2JpbGUtbWVudSIgY2xhc3M9Im1idC12Mi1tb2JpbGUtbWVudSI+CgkJCVBvdnByZcSNamUKCQk8L2Rpdj4KCQk8bmF2IGlkPSIzMy02MDAtbWJ0LXYyLW5hdmlnYXRpb24iIGNsYXNzPSJtYnQtdjItbmF2aWdhdGlvbiI+CgkJCTxkaXYgaWQ9IjMzLTYwMC10YWItMCIgZGF0YS1uYW1lPSJhdmVyYWdlcyIgY2xhc3M9Im1idC12Mi1uYXZpZ2F0aW9uLXRhYi1hY3RpdmUiIHByZXZjbGFzc25hbWU9Im1idC12Mi1uYXZpZ2F0aW9uLXRhYi1hY3RpdmUiPgoJCQkJUG92cHJlxI1qZQoJCQk8L2Rpdj4KCQkJPGRpdiBpZD0iMzMtNjAwLXRhYi0xIiBkYXRhLW5hbWU9ImhpZ2hzIiBjbGFzcz0ibWJ0LXYyLW5hdmlnYXRpb24tdGFiIj4KCQkJCVJla29yZGkKCQkJPC9kaXY+CgkJICAgIDxkaXYgaWQ9IjMzLTYwMC10YWItMiIgZGF0YS1uYW1lPSJ0b3RhbHMiIGNsYXNzPSJtYnQtdjItbmF2aWdhdGlvbi10YWIiPgoJCQkJU2t1cG5vCgkJCTwvZGl2PgoJCQkJCTwvbmF2PgoJCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCQk8ZGl2IGlkPSIzMy02MDAtbW9iaWxlLWZpbHRlcnMtYmxvY2siIGNsYXNzPSJtYnQtdjItbW9iaWxlLWZpbHRlcnMtYmxvY2siPgoJCQlGaWx0cmkKCQk8L2Rpdj4KCQk8ZGl2IGlkPSIzMy02MDAtZmlsdGVycy1ibG9jayIgY2xhc3M9Im1idC12Mi1maWx0ZXJzLWJsb2NrIj4KCQkJPHNlbGVjdCBpZD0iMzMtNjAwLWZpbHRlci1zdGF0cyIgZGF0YS1uYW1lPSJzdGF0X2NhdCIgY2xhc3M9Im1idC12Mi1zZWxlY3QiPjxvcHRpb24gdmFsdWU9InB0cyI+VG/EjWtlPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icnQiPlNrb2tpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iZXEiPlZhbG9yaXphY2lqYTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImFzIj5Bc2lzdGVuY2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJzZWMiPk1pbnV0ZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjJhIj7FoHQuIG1ldG92IHphIDIgdG/EjWtpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMm0iPsWgdC4gemFkZXRpaCBtZXRvdiB6YSAyIHRvxI1raTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjJwIj4lIHphIDIgdG/EjWtpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iM2EiPsWgdC4gbWV0b3YgemEgMyB0b8SNa2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIzbSI+WmFkZXRpIG1ldGkgemEgMyB0b8SNa2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIzcCI+JSB6YSAzIHRvxI1rZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjFhIj5JenZlZGVuaSBwcm9zdGkgbWV0aTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjFtIj5aYWRldGkgcHJvc3RpIG1ldGk8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxcCI+JSBwcm9zdGkgbWV0aTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InJvIj5OYXBhZGFsbmkgc2tva2k8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJyZCI+U2tva2kgdiBvYnJhbWJpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idG8iPkl6Zy4gxb5vZ2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJzdCI+UHJpZC4gxb5vZ2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJhc190byI+QXNpc3RlbmNlL2l6Zy4gxb5vZ2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJzdF90byI+UHJpZC4vaXpnLiDFvm9nZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImRkIj5Edm9qbmkgZHZvasSNa2k8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJwbHVzbWludXMiPisvLTwvb3B0aW9uPjwvc2VsZWN0PgoJCSAgICAJCQkgICAgPHNlbGVjdCBpZD0iMzMtNjAwLWZpbHRlci1zZWFzb24iIGRhdGEtbmFtZT0ic2Vhc29uX2lkIiBjbGFzcz0ibWJ0LXYyLXNlbGVjdCI+CgkJCQkJPG9wdGlvbiB2YWx1ZT0iIj4KCQkJCQkJVnNlIHNlem9uZQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTAyNTc1IiBzZWxlY3RlZD0ic2VsZWN0ZWQiPgoJCQkJCQkJCTIwMTgtMjAxOQoJCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI5NzkxMyI+CgkJCQkJCQkJMjAxNy0yMDE4CgkJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjkzOTc3Ij4KCQkJCQkJCQkyMDE2LTIwMTcKCQkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iOTEwNjMiPgoJCQkJCQkJCTIwMTUtMjAxNgoJCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI4OTU2OSI+CgkJCQkJCQkJMjAxNC0yMDE1CgkJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjgwMDYxIj4KCQkJCQkJCQkyMDEzLTIwMTQKCQkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDIwMzMiPgoJCQkJCQkJCTIwMTItMjAxMwoJCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxODE4MyI+CgkJCQkJCQkJMjAxMS0yMDEyCgkJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCTwvc2VsZWN0PgoJCQkJCQkJCQk8c2VsZWN0IGlkPSIzMy02MDAtZmlsdGVyLXN0YWdlIiBkYXRhLW5hbWU9InN0YWdlX2lkIiBjbGFzcz0ibWJ0LXYyLXNlbGVjdCI+CgkJCQk8b3B0aW9uIHZhbHVlPSIiPgoJCQkJCVZzaSBkZWxpIHRla21vdmFuamkKCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDY4NTEiPgoJCQkJCQkJMS4gZGVsCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCQk8L3NlbGVjdD4KCQkJCQkJCTxzZWxlY3QgaWQ9IjMzLTYwMC1maWx0ZXItdGVhbSIgZGF0YS1uYW1lPSJ0ZWFtX2lkIiBjbGFzcz0ibWJ0LXYyLXNlbGVjdCI+CgkJCQkJPG9wdGlvbiB2YWx1ZT0iIj4KCQkJCQkJVnNlIGVraXBlCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzOTMzIj4KCQkJCQkJCUFrc29uIElsaXJpamEgQQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjM5NDMiPgoJCQkJCQkJQWtzb24gSWxpcmlqYSBCCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQ2MzMzNTEiPgoJCQkJCQkJQ2Vya25pY2EKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzODgzIj4KCQkJCQkJCUNpbmthcm5hIENlbGplCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQ2NDYyNjkiPgoJCQkJCQkJQ2lua2FybmEgQ2VsamUgQgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjEyMzQ5Ij4KCQkJCQkJCcSMcm5vbWVsagoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjM5MDMiPgoJCQkJCQkJRG9txb5hbGUKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0NjIzIj4KCQkJCQkJCUZlbGl4IFphc2F2amUKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0MDIzIj4KCQkJCQkJCUdyb3N1cGxqZQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDU5NTMiPgoJCQkJCQkJSW5lcwoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjMxMDMiPgoJCQkJCQkJSmFuaW5hCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDEwMyI+CgkJCQkJCQlKZWzFoWEgxaBtYXJqZQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjM5NzMiPgoJCQkJCQkJSmXFvmljYSBBCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDE3MyI+CgkJCQkJCQlKZcW+aWNhIEIKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDYzMzM1NSI+CgkJCQkJCQlKZcW+aWNhIEMKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTYzMjAzIj4KCQkJCQkJCUtvbmppY2UKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNDY1MjMyOSI+CgkJCQkJCQlLT8WgIFByaW1vcnNrYQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0Njc1MTc5Ij4KCQkJCQkJCUtyYXMKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0MDQzIj4KCQkJCQkJCUtya2EgQQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjE5MTM5Ij4KCQkJCQkJCUtya2EgQgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjEyMzQ3Ij4KCQkJCQkJCUxlZGl0YQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0Njc1MTc3Ij4KCQkJCQkJCUxpdGlqYQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjQwMDMiPgoJCQkJCQkJTWFyaWJvcgoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI0NjMzMzYxIj4KCQkJCQkJCU1lc2FyaWphIFBydW5rCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjE2NDEyMyI+CgkJCQkJCQlQaXZrYSBQZXJ1dG5pbmFyc3R2bwoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxNjQxOTMiPgoJCQkJCQkJU3RyYcW+acWhxI1lIEtyYW5qCgkJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjI0NjM1MyI+CgkJCQkJCQlUb2xtaW4KCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTY0MDYzIj4KCQkJCQkJCVRyaWdsYXYKCQkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNzE5MjIxIj4KCQkJCQkJCVZpcGF2YQoJCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCTxzZWxlY3QgaWQ9IjMzLTYwMC1maWx0ZXItcG9zaXRpb24iIGRhdGEtbmFtZT0icG9zaXRpb24iIGNsYXNzPSJtYnQtdjItc2VsZWN0Ij4KCQkJCTxvcHRpb24gdmFsdWU9IiI+CgkJCQkJVnNhIGlncmFsbmEgbWVzdGEKCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxIj4KCQkJCQkJS3JpbG8KCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMiI+CgkJCQkJCUJyYW5pbGVjCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjMiPgoJCQkJCQlDZW50ZXIKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNCI+CgkJCQkJCU9yZ2FuaXphdG9yIGlncmUKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNSI+CgkJCQkJCUJyYW5pbGVjCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjYiPgoJCQkJCQlLcmlsbwoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI3Ij4KCQkJCQkJS3JpbG5pIGNlbnRlcgoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI4Ij4KCQkJCQkJQnJhbmlsZWMvS3JpbG8KCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iOSI+CgkJCQkJCUtyaWxvL0NlbnRlcgoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxMCI+CgkJCQkJCVBHL1NHCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjExIj4KCQkJCQkJU0cvU0YKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMTIiPgoJCQkJCQlTRi9QRgoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxMyI+CgkJCQkJCVBGL0MKCQkJCQk8L29wdGlvbj4KCQkJCQkJCTwvc2VsZWN0PgoJCTwvZGl2PgoJCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCSAgICA8ZGl2IGlkPSIzMy02MDAtdGFiLWNvbnRhaW5lciI+CTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCTxkaXYgY2xhc3M9Im1idC12Mi1zdWJoZWFkZXIiPgoJCVRvxI1rZQoJPC9kaXY+Cgk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycyI+CgkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtbGluZSI+CgkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZ3JpZCBtYnQtdjItYWxpZ24taXRlbXMtdmVydGljYWxseSI+CgkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLWxhcmdlLTYgIG1idC12Mi1jb2wtbWVkaXVtLTYgbWJ0LXYyLWNvbC1zbWFsbC02ICBtYnQtdjItY29sLXhzbWFsbC02Ij4KCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWdyaWQgbWJ0LXYyLWFsaWduLWl0ZW1zLXZlcnRpY2FsbHkiPgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTIiPgoJCQkJCQkJCQkJCQkJCQkJCTxpbWcgc3JjPSJodHRwOi8vd2lkZ2V0cy5iYXNrZXRob3RlbC5jb20vaW1hZ2UucGhwP2NsaWVudD0yNyZhbXA7aWQ9MTAwNDk2OSZhbXA7dmVyc2lvbj01MHg3MCIgY2xhc3M9Im1idC12Mi1pbWFnZSIgYWx0PSJBamRhIEdlcm0iPgoJCQkJCQkJCQkKCQkJCQkJCTwvZGl2PgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTciPgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXItY2F0ZWdvcnkiPgoJCQkJCQkJCQkjMQoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXItbmFtZSI+CgkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk4OTgwNSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk4OTgwNSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjI5NDAyMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5BamRhIEdlcm08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYyOTQwMjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42Mjk0MDIwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42Mjk0MDIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYyOTQwMjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLWJpbyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTEzIExldAkJCQkJCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTMiPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLXRlYW0iPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQk8aW1nIHNyYz0iaHR0cDovL3dpZGdldHMuYmFza2V0aG90ZWwuY29tL2ltYWdlLnBocD9jbGllbnQ9MjcmYW1wO2lkPTU4MDg4NyZhbXA7dmVyc2lvbj01MHg3MCIgY2xhc3M9Im1idC12Mi1pbWFnZSIgYWx0PSJUcmlnbGF2Ij4KCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkJCTwvZGl2PgkKCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkKCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLWxhcmdlLTYgIG1idC12Mi1jb2wtbWVkaXVtLTYgbWJ0LXYyLWNvbC1zbWFsbC02ICBtYnQtdjItY29sLXhzbWFsbC02IG1idC12Mi1ncmlkLWVuZCI+CgkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1ncmlkIG1idC12Mi1hbGlnbi1pdGVtcy12ZXJ0aWNhbGx5Ij4KCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTQiPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy1zdGF0cyI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZSI+CgkJCQkJCQkJCQkJNAoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZS1kZXNjIj4KCQkJCQkJCQkJCQlTa3Vwbm88YnI+VGVrbWUKCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtNCI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy1zdGF0cyI+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJMTAxCgkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZS1kZXNjIj4KCQkJCQkJCQkJCQkJU2t1cG5vPGJyPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgkJCQkJCQkJCQkJCQlUb8SNa2UKCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkKCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtNCBtYnQtdjItZ3JpZC1lbmQiPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy1zdGF0cyI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZSI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJMjUuMjUKCQkJCQkJCQkJCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZS1kZXNjIj4KCQkJCQkJCQkJCQlQb3ZwcmXEjWplPGJyPlRvxI1rZQoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQoJCQkJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy1saW5lIj4KCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1ncmlkIG1idC12Mi1hbGlnbi1pdGVtcy12ZXJ0aWNhbGx5Ij4KCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtbGFyZ2UtNiAgbWJ0LXYyLWNvbC1tZWRpdW0tNiBtYnQtdjItY29sLXNtYWxsLTYgIG1idC12Mi1jb2wteHNtYWxsLTYiPgoJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZ3JpZCBtYnQtdjItYWxpZ24taXRlbXMtdmVydGljYWxseSI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtMiI+CgkJCQkJCQkJCQkJCQkJCQkJPGltZyBzcmM9Imh0dHA6Ly93aWRnZXRzLmJhc2tldGhvdGVsLmNvbS9pbWFnZS5waHA/Y2xpZW50PTI3JmFtcDtpZD05NjkzNjkmYW1wO3ZlcnNpb249NTB4NzAiIGNsYXNzPSJtYnQtdjItaW1hZ2UiIGFsdD0iTGVhIEJhcnRlbG1lIj4KCQkJCQkJCQkJCgkJCQkJCQk8L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1jb2wgbWJ0LXYyLWNvbC03Ij4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLWNhdGVnb3J5Ij4KCQkJCQkJCQkJIzIKCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLW5hbWUiPgoJCQkJCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5NTYxNDkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5NTYxNDkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYyOTcxOTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TGVhIEJhcnRlbG1lPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42Mjk3MTkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjI5NzE5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjI5NzE5MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42Mjk3MTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllci1iaW8iPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkxMiBMZXQJCQkJCQkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1jb2wgbWJ0LXYyLWNvbC0zIj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllci10ZWFtIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGltZyBzcmM9Imh0dHA6Ly93aWRnZXRzLmJhc2tldGhvdGVsLmNvbS9pbWFnZS5waHA/Y2xpZW50PTI3JmFtcDtpZD02MDczMjcmYW1wO3ZlcnNpb249NTB4NzAiIGNsYXNzPSJtYnQtdjItaW1hZ2UiIGFsdD0iRmVsaXggWmFzYXZqZSI+CgkJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJCQk8L2Rpdj4JCgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCgkJCQkJCTwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1jb2wgbWJ0LXYyLWNvbC1sYXJnZS02ICBtYnQtdjItY29sLW1lZGl1bS02IG1idC12Mi1jb2wtc21hbGwtNiAgbWJ0LXYyLWNvbC14c21hbGwtNiBtYnQtdjItZ3JpZC1lbmQiPgoJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZ3JpZCBtYnQtdjItYWxpZ24taXRlbXMtdmVydGljYWxseSI+CgkJCQkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1jb2wgbWJ0LXYyLWNvbC00Ij4KCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtc3RhdHMiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUiPgoJCQkJCQkJCQkJCTUKCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUtZGVzYyI+CgkJCQkJCQkJCQkJU2t1cG5vPGJyPlRla21lCgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTQiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtc3RhdHMiPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXJzLXZhbHVlIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTExNwoJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUtZGVzYyI+CgkJCQkJCQkJCQkJCVNrdXBubzxicj4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoJCQkJCQkJCQkJCQkJVG/EjWtlCgkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTQgbWJ0LXYyLWdyaWQtZW5kIj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtc3RhdHMiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTIzLjQwCgkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUtZGVzYyI+CgkJCQkJCQkJCQkJUG92cHJlxI1qZTxicj5Ub8SNa2UKCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkKCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtbGluZSI+CgkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZ3JpZCBtYnQtdjItYWxpZ24taXRlbXMtdmVydGljYWxseSI+CgkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLWxhcmdlLTYgIG1idC12Mi1jb2wtbWVkaXVtLTYgbWJ0LXYyLWNvbC1zbWFsbC02ICBtYnQtdjItY29sLXhzbWFsbC02Ij4KCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWdyaWQgbWJ0LXYyLWFsaWduLWl0ZW1zLXZlcnRpY2FsbHkiPgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTIiPgoJCQkJCQkJCQkJCQkJCQkJCTxpbWcgc3JjPSJodHRwOi8vd2lkZ2V0cy5iYXNrZXRob3RlbC5jb20vaW1hZ2UucGhwP2NsaWVudD0yNyZhbXA7aWQ9MTIwMTc5MSZhbXA7dmVyc2lvbj01MHg3MCIgY2xhc3M9Im1idC12Mi1pbWFnZSIgYWx0PSJUaWEgQ2VudGEiPgoJCQkJCQkJCQkKCQkJCQkJCTwvZGl2PgoJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTciPgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXItY2F0ZWdvcnkiPgoJCQkJCQkJCQkjMwoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXItbmFtZSI+CgkJCQkJCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NTA3Nzk5NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNTA3Nzk5NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjI5OTU2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5UaWEgQ2VudGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYyOTk1NjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42Mjk5NTYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42Mjk5NTYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYyOTk1NjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLWJpbyI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTEzIExldAkJCQkJCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTMiPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVyLXRlYW0iPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQk8aW1nIHNyYz0iaHR0cDovL3dpZGdldHMuYmFza2V0aG90ZWwuY29tL2ltYWdlLnBocD9jbGllbnQ9MjcmYW1wO2lkPTYyODI1NyZhbXA7dmVyc2lvbj01MHg3MCIgY2xhc3M9Im1idC12Mi1pbWFnZSIgYWx0PSJMZWRpdGEiPgoJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCQkJPC9kaXY+CQoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQoJCQkJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtbGFyZ2UtNiAgbWJ0LXYyLWNvbC1tZWRpdW0tNiBtYnQtdjItY29sLXNtYWxsLTYgIG1idC12Mi1jb2wteHNtYWxsLTYgbWJ0LXYyLWdyaWQtZW5kIj4KCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWdyaWQgbWJ0LXYyLWFsaWduLWl0ZW1zLXZlcnRpY2FsbHkiPgoJCQkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtNCI+CgkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXJzLXN0YXRzIj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXJzLXZhbHVlIj4KCQkJCQkJCQkJCQkzCgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXJzLXZhbHVlLWRlc2MiPgoJCQkJCQkJCQkJCVNrdXBubzxicj5UZWttZQoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1jb2wgbWJ0LXYyLWNvbC00Ij4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im1idC12Mi1wbGF5ZXJzLXN0YXRzLXRvcC1wbGF5ZXJzLXN0YXRzIj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtYnQtdjItcGxheWVycy1zdGF0cy10b3AtcGxheWVycy12YWx1ZSI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk2NAoJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUtZGVzYyI+CgkJCQkJCQkJCQkJCVNrdXBubzxicj4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoJCQkJCQkJCQkJCQkJVG/EjWtlCgkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCgkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTQgbWJ0LXYyLWdyaWQtZW5kIj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtc3RhdHMiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTIxLjMzCgkJCQkJCQkJCQkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWJ0LXYyLXBsYXllcnMtc3RhdHMtdG9wLXBsYXllcnMtdmFsdWUtZGVzYyI+CgkJCQkJCQkJCQkJUG92cHJlxI1qZTxicj5Ub8SNa2UKCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkKCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCTwvZGl2PgkKCQkKCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCTxkaXYgaWQ9Im1idC12Mi1wbGF5ZXItc3RhdHMtdGFibGUtYXZlcmFnZXMtY29udGFpbmVyIiBjbGFzcz0ibWJ0LXYyLXJlc3BvbnNpdmUtdGFibGUtY29udGFpbmVyIj4KICAgIDx0YWJsZSBpZD0ibWJ0LXYyLXBsYXllci1zdGF0cy1hdmVyYWdlcy10YWJsZSIgY2xhc3M9Im1idC12Mi10YWJsZSBtYnQtdjItcGxheWVyLXN0YXRzLXRhYmxlIj4KICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0aD7FoHQuPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPklncmFsZWM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RWtpcGE8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlRla21lPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VE/EjDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBvdnByZcSNamU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGhlYWQ+CiAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgMS4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5ODk4MDUiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5ODk4MDUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMjA3MzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+QWpkYSBHZXJtPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzIwNzMwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyMDczMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyMDczMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzIwNzMwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk4OTgwNSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk4OTgwNSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyMTMzMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5BLkdlcm08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjEzMzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzIxMzMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzIxMzMwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjEzMzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA2MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyMTc4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5UcmlnbGF2PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzIxNzgwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyMTc4MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjE3ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjE3ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI1LjI1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDIuCiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi1oaWRkZW4teHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD00OTU2MTQ5IiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI0OTU2MTQ5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzIzMjQwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkxlYSBCYXJ0ZWxtZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyMzI0MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjMyNDAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjMyNDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyMzI0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5NTYxNDkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5NTYxNDkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMjM2NTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TC5CYXJ0ZWxtZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyMzY1MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjM2NTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjM2NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyMzY1MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0NjIzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0NjIzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzI0MDAwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkZlbGl4IFphc2F2amU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjQwMDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI0MDAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNDAwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNDAwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTE3CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjMuNDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgMy4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTUwNzc5OTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjUwNzc5OTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMjUzMjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+VGlhIENlbnRhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI1MzIwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyNTMyMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNTMyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzI1MzIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NTA3Nzk5NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNTA3Nzk5NSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyNTcwMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5ULkNlbnRhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI1NzAwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyNTcwMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNTcwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzI1NzAwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyNjA0MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5MZWRpdGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjYwNDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI2MDQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNjA0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyNjA0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNjQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMS4zMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA0LgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NTAyMzI3MyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNTAyMzI3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyNzE5MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5UamHFoWEgRXJtYW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjcxOTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI3MTkwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzI3MTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjcxOTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLXZpc2libGUteHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD01MDIzMjczIiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI1MDIzMjczIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzI3NTUwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPlQuRXJtYW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjc1NTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI3NTUwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzI3NTUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjc1NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDYyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyNzg4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5GZWxpeCBaYXNhdmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI3ODgwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyNzg4MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjc4ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjc4ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDU5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTkuNjcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgNS4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTU2Mzk3MzMiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjU2Mzk3MzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMjkwMDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+Sml0ZSBTb3BoaWEgR2JlbXVvdG9yPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI5MDAwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyOTAwMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyOTAwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzI5MDAwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NTYzOTczMyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNTYzOTczMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMyOTM3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5KLkdiZW11b3RvcjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyOTM3MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMjkzNzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjkzNzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMyOTM3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzODgzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzODgzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzI5NjkwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkNpbmthcm5hIENlbGplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzI5NjkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMyOTY5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjk2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMjk2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDk0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTguODAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgNi4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5NTMzNTEiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5NTMzNTEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzA5ODAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TmluYSBLcmlzdGFuPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMwOTgwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzMDk4MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzMDk4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzMwOTgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk1MzM1MSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk1MzM1MSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzMTM3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5OLktyaXN0YW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzEzNzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMxMzcwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzMxMzcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzEzNzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTIwNTk1MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjIwNTk1MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzMTY5MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5JbmVzPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMxNjkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzMTY5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzE2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzE2OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDU2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTguNjcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgNy4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NTc4MzMiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NTc4MzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzI4MTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+U2FyYSBTYW1ib2xpxIc8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzI4MTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMyODEwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzMyODEwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzI4MTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLXZpc2libGUteHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD00ODU3ODMzIiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI0ODU3ODMzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzMzMTcwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPlMuU2FtYm9sacSHPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMzMTcwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzMzE3MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzMzE3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzMzMTcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5MzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzM1MDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+QWtzb24gSWxpcmlqYSBBPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzMzNTAwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzMzUwMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzM1MDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzM1MDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTcuMDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgOC4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ2NDU2ODMiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ2NDU2ODMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzQ1OTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+xb1hbmEgxb1vcsW+PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM0NTkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzNDU5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzNDU5MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM0NTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDY0NTY4MyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDY0NTY4MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzNDk2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj7FvS7FvW9yxb48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzQ5NjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM0OTYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM0OTYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzQ5NjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTcxOTIyMSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjcxOTIyMSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzNTI3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5WaXBhdmE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzUyNzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM1MjcwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzNTI3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzNTI3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNjcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNi43NQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA5LgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDY1NTcyMyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDY1NTcyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzNjM2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5LaW0gxb1pYmVydDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzNjM2MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzYzNjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzYzNjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzNjM2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ2NTU3MjMiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ2NTU3MjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzY3MDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+Sy7FvWliZXJ0PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM2NzAwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzNjcwMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzNjcwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM2NzAwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQ2MjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQ2MjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzcwMjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RmVsaXggWmFzYXZqZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzNzAyMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzcwMjAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM3MDIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM3MDIwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA4MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE2LjAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDEwLgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDg1ODQyOSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDg1ODQyOSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzODA5MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5MYW5hIFByZcWhZXJlbjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzODA5MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzgwOTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzgwOTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzODA5MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NTg0MjkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NTg0MjkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzg0NDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TC5QcmXFoWVyZW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzg0NDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM4NDQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzM4NDQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzg0NDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA0MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA0MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjMzODc2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5LcmthIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzg3NjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzM4NzYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzODc2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzODc2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNS44MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAxMS4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NjA5NDkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NjA5NDkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzMzk4MzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TGlhIE9iZXLEjTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjMzOTgzMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzMzk4MzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzMzk4MzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjMzOTgzMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NjA5NDkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NjA5NDkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNDAxOTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TC5PYmVyxI08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDAxOTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQwMTkwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQwMTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDAxOTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2Mzk3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0MDUxMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDA1MTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQwNTEwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0MDUxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0MDUxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNS44MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAxMi4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5ODQxNTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5ODQxNTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNDE1ODAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RnJhbmphIEhvcnZhdDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0MTU4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDE1ODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDE1ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0MTU4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5ODQxNTUiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5ODQxNTUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNDE5MzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+Ri5Ib3J2YXQ8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDE5MzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQxOTMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQxOTMwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDE5MzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTkxMzkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjE5MTM5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzQyMjUwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktya2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0MjI1MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDIyNTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQyMjUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQyMjUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA2MwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE1Ljc1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDEzLgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk4MTY5OSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk4MTY5OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0MzM0MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5BbmEgTWFya292acSNPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQzMzQwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0MzM0MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0MzM0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQzMzQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk4MTY5OSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk4MTY5OSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0MzY4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5BLk1hcmtvdmnEjTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0MzY4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDM2ODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDM2ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0MzY4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzOTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzOTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzQ0MDEwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkRvbcW+YWxlPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ0MDEwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0NDAxMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDQwMTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDQwMTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTUuNTAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgMTQuCiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi1oaWRkZW4teHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD00NjM3NDQzIiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI0NjM3NDQzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzQ1MDgwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPk1vbmlrYSBMaXB1xaHEjWVrPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ1MDgwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0NTA4MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0NTA4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ1MDgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDYzNzQ0MyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDYzNzQ0MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0NTQzMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5NLkxpcHXFocSNZWs8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDU0MzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ1NDMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ1NDMwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDU0MzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTI0NjM1MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjI0NjM1MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0NTc1MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5Ub2xtaW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDU3NTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ1NzUwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0NTc1MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0NTc1MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNS40MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAxNS4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NjA5NjEiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NjA5NjEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNDY4MTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RXZhIEhlbmRyaWNreDwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0NjgxMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDY4MTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDY4MTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0NjgxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NjA5NjEiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NjA5NjEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNDcxNjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RS5IZW5kcmlja3g8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDcxNjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ3MTYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ3MTYwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDcxNjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA2MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0NzQ3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5UcmlnbGF2PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ3NDcwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0NzQ3MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDc0NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDc0NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDU5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTQuNzUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgMTYuCiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi1oaWRkZW4teHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD00OTc0OTg3IiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI0OTc0OTg3IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzQ4NTQwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPlRqYcWhYSBNYXJuPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ4NTQwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0ODU0MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM0ODU0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ4NTQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk3NDk4NyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk3NDk4NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM0ODg4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5ULk1hcm48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDg4ODAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzQ4ODgwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ4ODgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNDg4ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTIzNDcmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjEyMzQ3IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzQ5MTkwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkxlZGl0YTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM0OTE5MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNDkxOTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ5MTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzQ5MTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0NAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE0LjY3CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDE3LgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDk4MzIyNyIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDk4MzIyNyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM1MDI1MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5BasWhYSBTaXZrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1MDI1MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTAyNTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTAyNTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1MDI1MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5ODMyMjciIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5ODMyMjciIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNTA3MzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+QS5TaXZrYTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1MDczMDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTA3MzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTA3MzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1MDczMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzMjAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzMjAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzUxNDIwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktvbmppY2U8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTE0MjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzUxNDIwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1MTQyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1MTQyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNC41MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAxOC4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ3MDI4NDEiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ3MDI4NDEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNTI2MTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+SmVyY2EgUm96bWFuPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzUyNjEwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1MjYxMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlUGxheWVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1MjYxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdwbGF5ZXJfaWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzUyNjEwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1idC12Mi12aXNpYmxlLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDcwMjg0MSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDcwMjg0MSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM1Mjk3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5KLlJvem1hbjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1Mjk3MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTI5NzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTI5NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1Mjk3MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTkzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTkzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzUzMjgwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPlN0cmHFvmnFocSNZSBLcmFuajwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1MzI4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTMyODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzUzMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzUzMjgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1NwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE0LjI1CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDE5LgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItaGlkZGVuLXhzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY4JmFtcDtzZWFzb25faWQ9MTAyNTc1JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtwbGF5ZXJfaWQ9NDg1NzgzNSIgc2Vhc29uX2lkPSIxMDI1NzUiIHBsYXllcl9pZD0iNDg1NzgzNSIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM1NDM4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5IYW5hIFNhbWJvbGnEhzwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1NDM4MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTQzODAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVBsYXllcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTQzODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgncGxheWVyX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1NDM4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYnQtdjItdmlzaWJsZS14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ4NTc4MzUiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ4NTc4MzUiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNTQ3NDAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+SC5TYW1ib2xpxIc8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTQ3NDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzU0NzQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzU0NzQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTQ3NDAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2MzkzMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2MzkzMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM1NTA2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5Ba3NvbiBJbGlyaWphIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTUwNjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzU1MDYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1NTA2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuNjM1NTA2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxNC4wMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAyMC4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLWhpZGRlbi14c21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2OCZhbXA7c2Vhc29uX2lkPTEwMjU3NSZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7cGxheWVyX2lkPTQ5ODgzMjkiIHNlYXNvbl9pZD0iMTAyNTc1IiBwbGF5ZXJfaWQ9IjQ5ODgzMjkiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjYzNTYxMzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+TWHFoWEgS2F1xI1pxI08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTYxMzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzU2MTMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzU2MTMwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTYxMzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWJ0LXYyLXZpc2libGUteHNtYWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjgmYW1wO3NlYXNvbl9pZD0xMDI1NzUmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3BsYXllcl9pZD00OTg4MzI5IiBzZWFzb25faWQ9IjEwMjU3NSIgcGxheWVyX2lkPSI0OTg4MzI5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC42MzU2NDgwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPk0uS2F1xI1pxI08L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjYzNTY0ODAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzU2NDgwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVQbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC42MzU2NDgwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3BsYXllcl9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTY0ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDAwMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDAwMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuNjM1Njc5MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5NYXJpYm9yPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC42MzU2NzkwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuNjM1Njc5MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTY3OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjYzNTY3OTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTQuMDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICA8L3RhYmxlPgo8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+Cgk8ZGl2IGNsYXNzPSJtYnQtdjItZ3JpZCI+CgkJPGRpdiBjbGFzcz0ibWJ0LXYyLWNvbCBtYnQtdjItY29sLTEyIj4KCQkJPHVsIGNsYXNzPSJtYnQtdjItcGFnaW5hdGlvbiI+CgkJCQkJCQkJCQkJCQkJCQkJCQk8bGkgY2xhc3M9Im1idC12Mi1wYWdpbmF0aW9uLWFjdGl2ZSI+CgkJCQkJCQkJCQkJCQkJCQk8c3Bhbj4KCQkJCQkJCTEKCQkJCQkJPC9zcGFuPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS0yIj4KCQkJCQkJCTIKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS0zIj4KCQkJCQkJCTMKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS00Ij4KCQkJCQkJCTQKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS01Ij4KCQkJCQkJCTUKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS02Ij4KCQkJCQkJCTYKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS03Ij4KCQkJCQkJCTcKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS04Ij4KCQkJCQkJCTgKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS05Ij4KCQkJCQkJCTkKCQkJCQkJPC9hPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCQkJPGxpPgkKCQkJCQkJCQkJCQkJCQkJCTxhIGhyZWY9IiMiIG9uY2xpY2s9InJldHVybiBmYWxzZTsiIGlkPSIzMy02MDAtcGFnZS0xMCI+CgkJCQkJCQkxMAoJCQkJCQk8L2E+CgkJCQkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpIGNsYXNzPSJtYnQtdjItcGFnaW5hdGlvbi1uZXh0Ij4KCQkJCQkJPGEgaHJlZj0iIyIgb25jbGljaz0icmV0dXJuIGZhbHNlOyIgaWQ9IjMzLTYwMC1wYWdlLW5leHQiPgoJCQkJCQkJ4p2vIAoJCQkJCQk8L2E+CgkJCQkJPC9saT4KCQkJCQkJCTwvdWw+CgkJPC9kaXY+Cgk8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy88IVtDREFUQVsKCgl2YXIgbmFtZXNwYWNlID0gTUJULkFQSS5TYWZlTmFtZXMuQ29udGFpbmVyKCczMy02MDAnKTsKCQoJbmFtZXNwYWNlLm9uUGFnZUNsaWNrID0gZnVuY3Rpb24oZSwgcGFnZSkgewoKCQluYW1lc3BhY2UucGFyYW1zLnBhZ2UgPSBwYWdlOwoJCQoJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJd2lkZ2V0SWQ6IDYwMCwKCQkJY29udGFpbmVyOiAnMzMtNjAwLXRhYi1jb250YWluZXInLAoJCQlzdGF0ZTogJ01qZzBOVGd3T0RjMk9HRTZNVFU2ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qazZJbXhsWVdkMVpWOXBaQ0k3Y3pvMU9pSXhNVEU0TXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaVoyRnRaVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsUjJGdFpTSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFZHVmhiU0k3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pvNE9pSjBaVzF3YkdGMFpTSTdjem95T2lKMk1pSTdjem94T1RvaWRYTmxYMkZrZG1GdVkyVmtYMlpwYkhSbGNpSTdjem8wT2lKMGNuVmxJanR6T2pZNkltWnBiSFJsY2lJN1lUbzFPbnR6T2pnNkluTjBZWFJmWTJGMElqdHpPak02SW5CMGN5STdjem81T2lKelpXRnpiMjVmYVdRaU8zTTZOam9pTVRBeU5UYzFJanR6T2pnNkluTjBZV2RsWDJsa0lqdHpPakE2SWlJN2N6bzNPaUowWldGdFgybGtJanR6T2pBNklpSTdjem80T2lKd2IzTnBkR2x2YmlJN2N6b3dPaUlpTzMxek9qUTZJbkJoWjJVaU8zTTZNVG9pTUNJN2ZRPT0nLAoJCQlwYXJhbXM6IG5hbWVzcGFjZS5wYXJhbXMKCQl9KS5yZW5kZXJQYXJ0aWFsKG5hbWVzcGFjZS5wYXJ0aWFsKTsKCX0KCgkJCQkJCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS0yJywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFsyXSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS0zJywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFszXSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS00JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs0XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS01JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs1XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS02JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs2XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS03JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs3XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS04JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs4XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS05JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFs5XSwgMSkpOyAKCQkJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS0xMCcsICJjbGljayIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uUGFnZUNsaWNrLCBudWxsLCBbMTBdLCAxKSk7IAoJCQkJCQkJCQkJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtcGFnZS1uZXh0JywgImNsaWNrIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25QYWdlQ2xpY2ssIG51bGwsIFsyXSwgMSkpOyAKCQkJLy9dXT4KPC9zY3JpcHQ+CiAgICA8cCBjbGFzcz0ibWJ0LXYyLWluZm8tdGV4dCI+CiAgICAgICAgSWdyYWxlYyBqZSB1dnLFocSNZW4gdiB0byBrYXRlZ29yaWpvLCDEjWUgamUgaWdyYWwgbmEgbmFqbWFuaiA1MCUgdGVrbWFoCiAgICA8L3A+CiAgIAoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgovLzwhW0NEQVRBWwoKICAgIG5ldyBNQlQuQVBJLnJlc3BvbnNpdmVUYWJsZSAoewogICAgICAgIHRhYmxlOiAnbWJ0LXYyLXBsYXllci1zdGF0cy1hdmVyYWdlcy10YWJsZScsCiAgICAgICAgdGFibGVzQ29udGFpbmVyOiAnbWJ0LXYyLXBsYXllci1zdGF0cy10YWJsZS1hdmVyYWdlcy1jb250YWluZXInLAogICAgICAgIGNvbHVtbnNUb1BpbjogMgogICAgfSkud2F0Y2hUYWJsZSgpOwoKLy9dXT4KPC9zY3JpcHQ+PC9kaXY+Cgk8L2Rpdj4KPC9kaXY+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ci8vPCFbQ0RBVEFbCgkKCXZhciBuYW1lc3BhY2UgPSBNQlQuQVBJLlNhZmVOYW1lcy5Db250YWluZXIoJzMzLTYwMCcpOwoKCW5hbWVzcGFjZS5tb2JpbGVNZW51ID0gbmV3IE1CVC5BUEkuY3JlYXRlUmVzcG9uc2l2ZU5hdmlnYXRpb24oewoJCW1lbnVDb250YWluZXIgOiAiMzMtNjAwLW1idC12Mi1uYXZpZ2F0aW9uIiwKCQltb2JpbGVNZW51Q29udGFpbmVyIDogIjMzLTYwMC1tb2JpbGUtbWVudSIsCgkJbW9iaWxlTWVudUNsb3NlVGV4dDogIkl6YmVyaSIsCgl9KTsKCgluYW1lc3BhY2UubW9iaWxlRmlsdGVycyA9IG5ldyBNQlQuQVBJLmNyZWF0ZVJlc3BvbnNpdmVOYXZpZ2F0aW9uKHsKCQltZW51Q29udGFpbmVyIDogIjMzLTYwMC1maWx0ZXJzLWJsb2NrIiwKCQltb2JpbGVNZW51Q29udGFpbmVyIDogIjMzLTYwMC1tb2JpbGUtZmlsdGVycy1ibG9jayIsCgkJZmlsdGVyc01vZGU6IHRydWUKCX0pOwoKCW5hbWVzcGFjZS5wYXJhbXMgPSB7fTsKCgluYW1lc3BhY2UucGFyYW1zLnVzZV9hZHZhbmNlZF9maWx0ZXIgPSB0cnVlOwoKCW5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyID0ge307CgoJbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnMgPSBNQlQuQVBJLmdldCgnMzMtNjAwLWZpbHRlcnMtYmxvY2snKS5jaGlsZE5vZGVzOwoKCWZvcihrZXkgaW4gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnMpIHsKCQlpZihuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLm5vZGVUeXBlID09IDEpIHsKCQkJbmFtZXNwYWNlLnBhcmFtcy5maWx0ZXJbbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScpXSA9IG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0udmFsdWU7CgkJfQoJfQoKCW5hbWVzcGFjZS5vbkZpbHRlckNoYW5nZSA9IGZ1bmN0aW9uKGUsIGZpbHRlcikgewoKCQluYW1lc3BhY2UucGFyYW1zLmZpbHRlcltmaWx0ZXJdID0gZS50YXJnZXQudmFsdWU7CgoJCW5hbWVzcGFjZS5wYXJhbXMucGFnZSA9IDA7CgoJCWlmKGZpbHRlciA9PSAnc2Vhc29uX2lkJyB8fCBmaWx0ZXIgPT0gJ3N0YWdlX2lkJykgewoJCQlpZihuYW1lc3BhY2UucGFyYW1zLmZpbHRlci50ZWFtX2lkKSB7CgkJCQlkZWxldGUgbmFtZXNwYWNlLnBhcmFtcy5maWx0ZXIudGVhbV9pZDsKCQkJCWlmKGZpbHRlciA9PSAnc2Vhc29uX2lkJykgewoJCQkJCWRlbGV0ZSBuYW1lc3BhY2UucGFyYW1zLmZpbHRlci5zdGFnZV9pZDsKCQkJCX0KCQkJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJCQl3aWRnZXRJZDogNjAwLAoJCQkJCWNvbnRhaW5lcjogJzMzLTYwMC1maWx0ZXItdGVhbScsCgkJCQkJc3RhdGU6ICdJREl5TXpFek9ERTJOV0U2TVRJNmUzTTZNVGs2SW14bFlXZDFaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pZEdWaGJWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2laMkZ0WlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94T1RvaWNHeGhlV1Z5WDJ4cGJtdGZkbWx6YVdKc1pTSTdjem94T2lJeElqdHpPams2SW14bFlXZDFaVjlwWkNJN2N6bzFPaUl4TVRFNE15STdjem94TkRvaVoyRnRaVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2laMkZ0WlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFIyRnRaU0k3Y3pveE5Eb2lkR1ZoYlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pZEdWaGJWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxWR1ZoYlNJN2N6b3hOam9pY0d4aGVXVnlYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pFNU9pSndiR0Y1WlhKZmJHbHVhMTlvWVc1a2JHVnlJanR6T2pFME9pSnVZWFpwWjJGMFpWQnNZWGxsY2lJN2N6bzRPaUowWlcxd2JHRjBaU0k3Y3pveU9pSjJNaUk3ZlE9PScsCgkJCQkJcGFyYW1zOiB7CgkJCQkJCXNlYXNvbl9pZDogbmFtZXNwYWNlLnBhcmFtcy5maWx0ZXIuc2Vhc29uX2lkLAoJCQkJCQlzdGFnZV9pZDogbmFtZXNwYWNlLnBhcmFtcy5maWx0ZXIuc3RhZ2VfaWQKCQkJCQl9CgkJCQl9KS5yZW5kZXJQYXJ0aWFsKCdnZXQtdGVhbXMnKTsKCQkJfQoKCQkJaWYoZmlsdGVyICE9ICdzdGFnZV9pZCcpIHsKCQkJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJCQl3aWRnZXRJZDogNjAwLAoJCQkJCWNvbnRhaW5lcjogJzMzLTYwMC1maWx0ZXItc3RhZ2UnLAoJCQkJCXN0YXRlOiAnSURJeU16RXpPREUyTldFNk1USTZlM002TVRrNklteGxZV2QxWlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaWRHVmhiVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE9Ub2ljR3hoZVdWeVgyeHBibXRmZG1semFXSnNaU0k3Y3pveE9pSXhJanR6T2prNklteGxZV2QxWlY5cFpDSTdjem8xT2lJeE1URTRNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxSMkZ0WlNJN2N6b3hORG9pZEdWaGJWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaWRHVmhiVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsVkdWaGJTSTdjem94TmpvaWNHeGhlV1Z5WDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTVPaUp3YkdGNVpYSmZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRTBPaUp1WVhacFoyRjBaVkJzWVhsbGNpSTdjem80T2lKMFpXMXdiR0YwWlNJN2N6b3lPaUoyTWlJN2ZRPT0nLAoJCQkJCXBhcmFtczogewoJCQkJCQlzZWFzb25faWQ6IG5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyLnNlYXNvbl9pZAoJCQkJCX0KCQkJCX0pLnJlbmRlclBhcnRpYWwoJ2dldC1zdGFnZXMnKTsKCQkJfQoJCX0KCgkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJCQl3aWRnZXRJZDogNjAwLAoJCQljb250YWluZXI6ICczMy02MDAtdGFiLWNvbnRhaW5lcicsCgkJCXN0YXRlOiAnSURJeU16RXpPREUyTldFNk1USTZlM002TVRrNklteGxZV2QxWlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaWRHVmhiVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE9Ub2ljR3hoZVdWeVgyeHBibXRmZG1semFXSnNaU0k3Y3pveE9pSXhJanR6T2prNklteGxZV2QxWlY5cFpDSTdjem8xT2lJeE1URTRNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxSMkZ0WlNJN2N6b3hORG9pZEdWaGJWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaWRHVmhiVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsVkdWaGJTSTdjem94TmpvaWNHeGhlV1Z5WDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTVPaUp3YkdGNVpYSmZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRTBPaUp1WVhacFoyRjBaVkJzWVhsbGNpSTdjem80T2lKMFpXMXdiR0YwWlNJN2N6b3lPaUoyTWlJN2ZRPT0nLAoJCQlwYXJhbXM6IG5hbWVzcGFjZS5wYXJhbXMKCQl9KS5yZW5kZXJQYXJ0aWFsKG5hbWVzcGFjZS5wYXJ0aWFsKTsKCX0KCgluYW1lc3BhY2Uub25UYWJDbGljayA9IGZ1bmN0aW9uKHRhYlBhbmVsLCBpbmRleCwgcGFydCkgewoKCQluYW1lc3BhY2UucGFyYW1zLnBhZ2UgPSAwOwoKCQlmb3Ioa2V5IGluIG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzKSB7CgkJCWlmKG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0ubm9kZVR5cGUgPT0gMSkgewoJCQkJaWYobmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScpID09ICdzZWFzb25faWQnKSB7CgkJCQkJaWYobmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5vcHRpb25zWzBdLnZhbHVlID09ICIiKSB7CgkJCQkJCW5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0uc2VsZWN0ZWRJbmRleCA9IDE7CgkJCQkJCW5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyLnNlYXNvbl9pZCA9IG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0ub3B0aW9uc1sxXS52YWx1ZTsKCQkJCQl9IGVsc2UgewoJCQkJCSAgICBuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1sna2V5J10uc2VsZWN0ZWRJbmRleCA9IDE7CgkJCQkJICAgIG5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyLnNlYXNvbl9pZCA9IG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0ub3B0aW9uc1sxXS52YWx1ZTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCW5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0uc2VsZWN0ZWRJbmRleCA9MDsKCQkJCQluYW1lc3BhY2UucGFyYW1zLmZpbHRlcltuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyldID0gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5vcHRpb25zWzBdLnZhbHVlOwoJCQkJfQoJCQl9CgkJfQoKCQluYW1lc3BhY2UucGFydGlhbCA9IHBhcnQ7CgoJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJCXdpZGdldElkOiA2MDAsCgkJCQljb250YWluZXI6ICczMy02MDAtZmlsdGVyLXN0YXRzJywKCQkJCXN0YXRlOiAnSURJeU16RXpPREUyTldFNk1USTZlM002TVRrNklteGxZV2QxWlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaWRHVmhiVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE9Ub2ljR3hoZVdWeVgyeHBibXRmZG1semFXSnNaU0k3Y3pveE9pSXhJanR6T2prNklteGxZV2QxWlY5cFpDSTdjem8xT2lJeE1URTRNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxSMkZ0WlNJN2N6b3hORG9pZEdWaGJWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaWRHVmhiVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsVkdWaGJTSTdjem94TmpvaWNHeGhlV1Z5WDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTVPaUp3YkdGNVpYSmZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRTBPaUp1WVhacFoyRjBaVkJzWVhsbGNpSTdjem80T2lKMFpXMXdiR0YwWlNJN2N6b3lPaUoyTWlJN2ZRPT0nLAoJCQkJcGFyYW1zOiB7CgkJCQkJdGFiOiBwYXJ0CgkJCQl9CgkJCX0pLnJlbmRlclBhcnRpYWwoJ2dldC1zdGF0LWNhdGVnb3JpZXMnKTsKCgkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJCQl3aWRnZXRJZDogNjAwLAoJCQljb250YWluZXI6ICczMy02MDAtdGFiLWNvbnRhaW5lcicsCgkJCXN0YXRlOiAnSURJeU16RXpPREUyTldFNk1USTZlM002TVRrNklteGxZV2QxWlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaWRHVmhiVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE9Ub2ljR3hoZVdWeVgyeHBibXRmZG1semFXSnNaU0k3Y3pveE9pSXhJanR6T2prNklteGxZV2QxWlY5cFpDSTdjem8xT2lJeE1URTRNeUk3Y3pveE5Eb2laMkZ0WlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pWjJGdFpWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxSMkZ0WlNJN2N6b3hORG9pZEdWaGJWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaWRHVmhiVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsVkdWaGJTSTdjem94TmpvaWNHeGhlV1Z5WDJ4cGJtdGZkSGx3WlNJN2N6b3hPaUl6SWp0ek9qRTVPaUp3YkdGNVpYSmZiR2x1YTE5b1lXNWtiR1Z5SWp0ek9qRTBPaUp1WVhacFoyRjBaVkJzWVhsbGNpSTdjem80T2lKMFpXMXdiR0YwWlNJN2N6b3lPaUoyTWlJN2ZRPT0nLAoJCQlwYXJhbXM6IG5hbWVzcGFjZS5wYXJhbXMKCQl9KS5yZW5kZXJQYXJ0aWFsKG5hbWVzcGFjZS5wYXJ0aWFsKTsKCX0KCgluYW1lc3BhY2UudGFicyA9IFtdOwoKCW5hbWVzcGFjZS5tZW51SXRlbXMgPSBNQlQuQVBJLmdldCgnMzMtNjAwLW1idC12Mi1uYXZpZ2F0aW9uJykuY2hpbGROb2RlczsKCglmb3IodmFyIGkgPSAwOyBpIDwgIG5hbWVzcGFjZS5tZW51SXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZihuYW1lc3BhY2UubWVudUl0ZW1zW2ldLm5vZGVUeXBlID09IDEpIHsKICAgICAgICAJbmFtZXNwYWNlLnRhYnMucHVzaCh7CiAgICAgICAgCQl0YWJJZDogbmFtZXNwYWNlLm1lbnVJdGVtc1tpXS5pZCwKICAgICAgICAJCW5lZWRMb2FkOiBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vblRhYkNsaWNrLCBudWxsLCBuYW1lc3BhY2UubWVudUl0ZW1zW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyksIDIpLAogICAgICAgIAl9KTsKICAgICAgICB9Cgl9CgoJbmFtZXNwYWNlLlRhYkNvbnRyb2xsZXIgPSBuZXcgTUJULkFQSS5VSS5UYWJQYW5lbCh7CgkJY29udGFpbmVyOiAnMzMtNjAwLXRhYi1jb250YWluZXInLAoJCXRhYkNsYXNzOiAnbWJ0LXYyLW5hdmlnYXRpb24tdGFiJywKICAgICAgICBhY3RpdmVUYWJDbGFzczogJ21idC12Mi1uYXZpZ2F0aW9uLXRhYi1hY3RpdmUnLAogICAgICAgIHRhYnM6IG5hbWVzcGFjZS50YWJzLAogICAgICAgIG5vQ2FjaGU6IHRydWUsCgkJYWN0aXZlVGFiOiAwCgl9KTsKCgluYW1lc3BhY2UuVGFiQ29udHJvbGxlci5hY3RpdmVUYWIgPSAwOwoKCXN3aXRjaCAobmFtZXNwYWNlLlRhYkNvbnRyb2xsZXIuYWN0aXZlVGFiKSB7CgkJY2FzZSAwOgoJCQluYW1lc3BhY2UucGFydGlhbCA9ICdhdmVyYWdlcyc7CgkJCWJyZWFrOwoJCWNhc2UgMToKCQkJbmFtZXNwYWNlLnBhcnRpYWwgPSAnaGlnaHMnOwoJCQlicmVhazsKCSAgICBjYXNlIDI6CgkJCW5hbWVzcGFjZS5wYXJ0aWFsID0gJ3RvdGFscyc7CgkJCWJyZWFrOwoJCWNhc2UgMzoKCQkJbmFtZXNwYWNlLnBhcnRpYWwgPSAnNDBtaW4nOwoJCQlicmVhazsKCX0KCglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTYwMC1maWx0ZXItc2Vhc29uJywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ3NlYXNvbl9pZCddLCAxKSk7CglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTYwMC1maWx0ZXItc3RhdHMnLCAiY2hhbmdlIiwgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25GaWx0ZXJDaGFuZ2UsIG51bGwsIFsnc3RhdF9jYXQnXSwgMSkpOwoJTUJULkFQSS5FdmVudC5vYnNlcnZlKCczMy02MDAtZmlsdGVyLW1vbnRoJywgImNoYW5nZSIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uRmlsdGVyQ2hhbmdlLCBudWxsLCBbJ21vbnRoX2lkJ10sIDEpKTsKCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtNjAwLWZpbHRlci1zdGFnZScsICJjaGFuZ2UiLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vbkZpbHRlckNoYW5nZSwgbnVsbCwgWydzdGFnZV9pZCddLCAxKSk7CglNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTYwMC1maWx0ZXItdGVhbScsICJjaGFuZ2UiLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vbkZpbHRlckNoYW5nZSwgbnVsbCwgWyd0ZWFtX2lkJ10sIDEpKTsKCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtNjAwLWZpbHRlci1wb3NpdGlvbicsICJjaGFuZ2UiLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vbkZpbHRlckNoYW5nZSwgbnVsbCwgWydwb3NpdGlvbiddLCAxKSk7CgoJCgoJLy9dXT4KPC9zY3JpcHQ+PC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJjb250YWluZXIiPgoJPGRpdiBpZD0ic3RhdHMtdGVhbSIgbWJ0X3dpZGdldD0iNjAxIj48ZGl2IGlkPSJtYnQtdjItdGVhbXMtc3RhdHMiIGNsYXNzPSJtYnQtdjItd2lkZ2V0Ij4KCTxkaXYgY2xhc3M9Im1idC12Mi1oZWFkZXIiPgoJCQkJCVN0YXRpc3Rpa2EKCQkJCgk8L2Rpdj4KCTxkaXYgY2xhc3M9Im1idC12Mi13aWRnZXQtY29udGVudCI+CgkJCQkJPGRpdiBpZD0iMzMtNjAxLW1vYmlsZS1tZW51IiBjbGFzcz0ibWJ0LXYyLW1vYmlsZS1tZW51Ij4KCQkJCVBvdnByZcSNamUKCQkJPC9kaXY+CgkJCTxuYXYgaWQ9IjMzLTYwMS1tYnQtdjItbmF2aWdhdGlvbiIgY2xhc3M9Im1idC12Mi1uYXZpZ2F0aW9uIj4KCQkJCTxkaXYgaWQ9IjMzLTYwMS10YWItMCIgZGF0YS1uYW1lPSJhdmVyYWdlcyIgY2xhc3M9Im1idC12Mi1uYXZpZ2F0aW9uLXRhYi1hY3RpdmUiIHByZXZjbGFzc25hbWU9Im1idC12Mi1uYXZpZ2F0aW9uLXRhYi1hY3RpdmUiPgoJCQkJCVBvdnByZcSNamUKCQkJCTwvZGl2PgoJCQkJPGRpdiBpZD0iMzMtNjAxLXRhYi0xIiBkYXRhLW5hbWU9ImhpZ2hzIiBjbGFzcz0ibWJ0LXYyLW5hdmlnYXRpb24tdGFiIj4KCQkJCQlOYWp2ZcSNCgkJCQk8L2Rpdj4KCQkJCTxkaXYgaWQ9IjMzLTYwMS10YWItMiIgZGF0YS1uYW1lPSJ0b3RhbHMiIGNsYXNzPSJtYnQtdjItbmF2aWdhdGlvbi10YWIiPgoJCQkJCVNrdXBubwoJCQkJPC9kaXY+CgkJCTwvbmF2PgoJCQk8ZGl2IGNsYXNzPSJtYnQtdjItZGl2aWRlciI+PC9kaXY+CgkJCQoJCTxkaXYgaWQ9IjMzLTYwMS1maWx0ZXJzLWJsb2NrIiBjbGFzcz0ibWJ0LXYyLWZpbHRlcnMtYmxvY2tfIj4KCQkJPHNlbGVjdCBpZD0iMzMtNjAxLWNhdGVnb3J5LXNlbGVjdG9yIiBjbGFzcz0ibWJ0LXYyLXNlbGVjdCIgZGF0YS1uYW1lPSJzdGF0X2NhdCI+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9InB0cyIgc2VsZWN0ZWQ9InNlbGVjdGVkIj4KCQkJCQkJVG/EjWtlCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9InJ0Ij4KCQkJCQkJU2tva2kKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iZXEiPgoJCQkJCQlWYWxvcml6YWNpamEKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iYXMiPgoJCQkJCQlBc2lzdGVuY2UKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMmEiPgoJCQkJCQnFoHQuIG1ldG92IHphIDIgdG/EjWtpCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjJtIj4KCQkJCQkJxaB0LiB6YWRldGloIG1ldG92IHphIDIgdG/EjWtpCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjJwIj4KCQkJCQkJJSB6YSAyIHRvxI1raQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIzYSI+CgkJCQkJCcWgdC4gbWV0b3YgemEgMyB0b8SNa2UKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iM20iPgoJCQkJCQlaYWRldGkgbWV0aSB6YSAzIHRvxI1rZQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIzcCI+CgkJCQkJCSUgemEgMyB0b8SNa2UKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMWEiPgoJCQkJCQlJenZlZGVuaSBwcm9zdGkgbWV0aQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxbSI+CgkJCQkJCVphZGV0aSBwcm9zdGkgbWV0aQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxcCI+CgkJCQkJCSUgcHJvc3RpIG1ldGkKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0icm8iPgoJCQkJCQlOYXBhZGFsbmkgc2tva2kKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0icmQiPgoJCQkJCQlTa29raSB2IG9icmFtYmkKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0idG8iPgoJCQkJCQlJemcuIMW+b2dlCgkJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9InN0Ij4KCQkJCQkJUHJpZC4gxb5vZ2UKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iYXNfdG8iPgoJCQkJCQlBc2lzdGVuY2UvaXpnLiDFvm9nZQoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSJzdF90byI+CgkJCQkJCVByaWQuL2l6Zy4gxb5vZ2UKCQkJCQk8L29wdGlvbj4KCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iYXR0bmQiPgoJCQkJCQlHbGVkYWxjZXYKCQkJCQk8L29wdGlvbj4KCQkJCQkJCTwvc2VsZWN0PgoJCQkJCQkJPHNlbGVjdCBpZD0iMzMtNjAxLXNlYXNvbi1zZWxlY3RvciIgY2xhc3M9Im1idC12Mi1zZWxlY3QiIGRhdGEtbmFtZT0ic2Vhc29uX2lkIj4KCQkJCSAgICA8b3B0aW9uIHZhbHVlPSIiPlZzZSBzZXpvbmU8L29wdGlvbj4KCSAgICAgICAgICAgICAgICAgICAgCQkgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEwMjU3NSIgc2VsZWN0ZWQ9InNlbGVjdGVkIj4KCQkJICAgICAgICAgICAgICAgICAgICAyMDE4LTIwMTkKCQkgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgoJCSAgICAgICAgICAgICAgICAJCSAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iOTc5MTMiPgoJCQkgICAgICAgICAgICAgICAgICAgIDIwMTctMjAxOAoJCSAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+CgkJICAgICAgICAgICAgICAgIAkJICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI5Mzk3NyI+CgkJCSAgICAgICAgICAgICAgICAgICAgMjAxNi0yMDE3CgkJICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KCQkgICAgICAgICAgICAgICAgCQkgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjkxMDYzIj4KCQkJICAgICAgICAgICAgICAgICAgICAyMDE1LTIwMTYKCQkgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgoJCSAgICAgICAgICAgICAgICAJCSAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iODk1NjkiPgoJCQkgICAgICAgICAgICAgICAgICAgIDIwMTQtMjAxNQoJCSAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+CgkJICAgICAgICAgICAgICAgIAkJICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI4MDA2MSI+CgkJCSAgICAgICAgICAgICAgICAgICAgMjAxMy0yMDE0CgkJICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj4KCQkgICAgICAgICAgICAgICAgCQkgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjQyMDMzIj4KCQkJICAgICAgICAgICAgICAgICAgICAyMDEyLTIwMTMKCQkgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPgoJCSAgICAgICAgICAgICAgICAJCSAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTgxODMiPgoJCQkgICAgICAgICAgICAgICAgICAgIDIwMTEtMjAxMgoJCSAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+CgkJICAgICAgICAgICAgICAgICAKCQkJCTwvc2VsZWN0PgoJCQkJCQk8c2VsZWN0IGlkPSIzMy02MDEtc3RhZ2Utc2VsZWN0b3IiIGNsYXNzPSJtYnQtdjItc2VsZWN0IiBkYXRhLW5hbWU9InN0YWdlX2lkIj4KCQkJCTxvcHRpb24gdmFsdWU9IiI+CgkJCQkJVnNpIGRlbGkgdGVrbW92YW5qYQoJCQkJPC9vcHRpb24+CgkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwNjg1MSI+CgkJCQkJCTEuIGRlbAoJCQkJCTwvb3B0aW9uPgoJCQkJCQkJPC9zZWxlY3Q+IAoJCTwvZGl2PgoJCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCQk8ZGl2IGlkPSIzMy02MDEtdGFiLWNvbnRhaW5lciI+CTxkaXYgaWQ9Im1idC12Mi10ZWFtcy1zdGF0cy10YWJsZS1hdmVyYWdlcy1jb250YWluZXIiIGNsYXNzPSJtYnQtdjItcmVzcG9uc2l2ZS10YWJsZS1jb250YWluZXIiPgoJPHRhYmxlIGlkPSJtYnQtdjItdGVhbXMtc3RhdHMtYXZlcmFnZXMtdGFibGUiIGNsYXNzPSJtYnQtdjItdGFibGUgbWJ0LXYyLXRlYW1zLXN0YXRzLXRhYmxlIj4KCQk8dGhlYWQ+CgkJCTx0cj4KCQkJCTx0aD4KCQkJCQnFoHQuCgkJCQk8L3RoPgoJCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+CgkgICAgICAgICAgICAgICAgICAgICAgICBFa2lwYQogICAgICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4KCSAgICAgICAgICAgICAgICAgICAgICAgIFRla21lCgkgICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPgoJICAgICAgICAgICAgICAgICAgICAgICAgVE/EjAogICAgICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4KCSAgICAgICAgICAgICAgICAgICAgICAgIFBvdnByZcSNamUKICAgICAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCQkJPC90cj4KCQk8L3RoZWFkPgoJCTx0Ym9keT4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTEuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDYyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDYyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc3MTY4MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5GZWxpeCBaYXNhdmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzcxNjgwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc3MTY4MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzE2ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzE2ODAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgNDY2CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgOTMuMjAKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTIuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDA2MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDA2MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc3NDU3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5UcmlnbGF2PC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzc0NTcwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc3NDU3MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzQ1NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzQ1NzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgMzM2CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgODQuMDAKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTMuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzk3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2Mzk3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc3NTgzMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3NzU4MzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzc1ODMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc3NTgzMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc3NTgzMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDUKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA0MTUKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA4My4wMAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJNC4KCQkJCQk8L3RkPgoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTYzMjAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTYzMjAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzc2OTQwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktvbmppY2U8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3NzY5NDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzc2OTQwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc3Njk0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc3Njk0MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAzMTQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA3OC41MAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJNS4KCQkJCQk8L3RkPgoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MDQzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MDQzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzc3OTkwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktya2EgQTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc3Nzk5MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3Nzc5OTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzc3OTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzc3OTkwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgNQoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDM5MgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc4LjQwCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJPHRkPgoJCQkJCQk2LgoJCQkJCTwvdGQ+CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD03MTkyMjEmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI3MTkyMjEiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjI3NzkwMzAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+VmlwYXZhPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzc5MDMwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc3OTAzMDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzkwMzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3NzkwMzAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA1CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgMzg3CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzcuNDAKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTcuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2Mzg4MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2Mzg4MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc4MDA3MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5DaW5rYXJuYSBDZWxqZTwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc4MDA3MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3ODAwNzAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzgwMDcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzgwMDcwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgNgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDQ1NQoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1LjgzCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJPHRkPgoJCQkJCQk4LgoJCQkJCTwvdGQ+CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MDMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5MDMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjI3ODE5NjAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+RG9txb5hbGU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3ODE5NjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzgxOTYwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4MTk2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4MTk2MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAyNzQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA2OC41MAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJOS4KCQkJCQk8L3RkPgoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MTY0MTAzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMTY0MTAzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzgzNTUwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkplbMWhYSDFoG1hcmplPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzgzNTUwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc4MzU1MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODM1NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODM1NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAzCgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgMTg4CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNjIuNjcKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTEwLgoJCQkJCTwvdGQ+CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjM5MzMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjM5MzMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjI3ODQ2NTAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+QWtzb24gSWxpcmlqYSBBPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzg0NjUwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc4NDY1MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODQ2NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODQ2NTAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA0CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgMjQyCgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNjAuNTAKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTExLgoJCQkJCTwvdGQ+CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD0xNjQxMjMmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSIxNjQxMjMiIGNsaWVudF9oYXNoPSIzOWY1NjQzN2Y5NzJkYzRjYTkxZDJjOTk3Zjg3NGRjZmMyMzJhNjg4IiBpZD0iYS0wLjI3ODU2ODAwMTU0MTIzNDMwMyIgb25seXVybD0iMSI+UGl2a2EgUGVydXRuaW5hcnN0dm88L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3ODU2ODAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzg1NjgwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NTY4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NTY4MDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDYKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAzMzkKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA1Ni41MAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTIuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDE5MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDE5MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc4NjcxMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5TdHJhxb5pxaHEjWUgS3Jhbmo8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3ODY3MTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzg2NzEwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NjcxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NjcxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAyMjAKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA1NS4wMAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTMuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDAyMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDAyMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc4NzgwMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5Hcm9zdXBsamU8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3ODc4MDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzg3ODAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NzgwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc4NzgwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDQKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAyMTgKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA1NC41MAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTQuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDAwMyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDAwMyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc4OTk2MDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5NYXJpYm9yPC9hPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzg5OTYwMDE1NDEyMzQzMDMiKSA9PT0gIm9iamVjdCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc4OTk2MDAxNTQxMjM0MzAzIikuaHJlZiA9IG5hdmlnYXRlVGVhbShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODk5NjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgndGVhbV9pZCcpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS0wLjI3ODk5NjAwMTU0MTIzNDMwMycpLmdldEF0dHJpYnV0ZSgnc2Vhc29uX2lkJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAzCgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgMTYzCgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTQuMzMKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCQk8dGQ+CgkJCQkJCTE1LgoJCQkJCTwvdGQ+CgkJCQkJCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmt6cy5zaS9pbmNsP2lkPTk2NyZhbXA7dGVhbV9pZD00NjEyMzQ3JmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iNDYxMjM0NyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc5MTQxMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5MZWRpdGE8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTE0MTAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzkxNDEwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5MTQxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5MTQxMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDMKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAxNjIKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA1NC4wMAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTYuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTI0NjM1MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjI0NjM1MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc5MjUyMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5Ub2xtaW48L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTI1MjAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzkyNTIwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5MjUyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5MjUyMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDUKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAyMjUKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA0NS4wMAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTcuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTE2NDE3MyZhbXA7bGVhZ3VlX2lkPXVuZGVmaW5lZCZhbXA7c2Vhc29uX2lkPTEwMjU3NSIgc2Vhc29uX2lkPSIxMDI1NzUiIHRlYW1faWQ9IjE2NDE3MyIgY2xpZW50X2hhc2g9IjM5ZjU2NDM3Zjk3MmRjNGNhOTFkMmM5OTdmODc0ZGNmYzIzMmE2ODgiIGlkPSJhLTAuMjc5NDAwMDAxNTQxMjM0MzAzIiBvbmx5dXJsPSIxIj5KZcW+aWNhIEI8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTQwMDAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzk0MDAwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5NDAwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5NDAwMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDUKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAyMTgKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA0My42MAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMTguCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTIzNDkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjEyMzQ5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzk1MTQwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPsSMcm5vbWVsajwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc5NTE0MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTUxNDAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzk1MTQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzk1MTQwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgNQoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDIxMQoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQyLjIwCgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCQkJCTwvdHI+CgkJCQkJCQk8dHI+CgkJCQkJPHRkPgoJCQkJCQkxOS4KCQkJCQk8L3RkPgoJCQkJCQkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5renMuc2kvaW5jbD9pZD05NjcmYW1wO3RlYW1faWQ9MjA1OTUzJmFtcDtsZWFndWVfaWQ9dW5kZWZpbmVkJmFtcDtzZWFzb25faWQ9MTAyNTc1IiBzZWFzb25faWQ9IjEwMjU3NSIgdGVhbV9pZD0iMjA1OTUzIiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzk3NDMwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPkluZXM8L2E+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTc0MzAwMTU0MTIzNDMwMyIpID09PSAib2JqZWN0IikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImEtMC4yNzk3NDMwMDE1NDEyMzQzMDMiKS5ocmVmID0gbmF2aWdhdGVUZWFtKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5NzQzMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCd0ZWFtX2lkJyksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLTAuMjc5NzQzMDAxNTQxMjM0MzAzJykuZ2V0QXR0cmlidXRlKCdzZWFzb25faWQnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDMKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KCQkgICAgICAgICAgICAgICAgICAgICAgICAxMjYKCQkgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA0Mi4wMAoJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkJCQk8L3RyPgoJCQkJCQkJPHRyPgoJCQkJCTx0ZD4KCQkJCQkJMjAuCgkJCQkJPC90ZD4KCQkJCQkJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cua3pzLnNpL2luY2w/aWQ9OTY3JmFtcDt0ZWFtX2lkPTQ2MTkxMzkmYW1wO2xlYWd1ZV9pZD11bmRlZmluZWQmYW1wO3NlYXNvbl9pZD0xMDI1NzUiIHNlYXNvbl9pZD0iMTAyNTc1IiB0ZWFtX2lkPSI0NjE5MTM5IiBjbGllbnRfaGFzaD0iMzlmNTY0MzdmOTcyZGM0Y2E5MWQyYzk5N2Y4NzRkY2ZjMjMyYTY4OCIgaWQ9ImEtMC4yNzk4NTUwMDE1NDEyMzQzMDMiIG9ubHl1cmw9IjEiPktya2EgQjwvYT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhLTAuMjc5ODU1MDAxNTQxMjM0MzAzIikgPT09ICJvYmplY3QiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYS0wLjI3OTg1NTAwMTU0MTIzNDMwMyIpLmhyZWYgPSBuYXZpZ2F0ZVRlYW0oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzk4NTUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3RlYW1faWQnKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtMC4yNzk4NTUwMDE1NDEyMzQzMDMnKS5nZXRBdHRyaWJ1dGUoJ3NlYXNvbl9pZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CgkJICAgICAgICAgICAgICAgICAgICA8L3RkPgoJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgNAoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgoJCSAgICAgICAgICAgICAgICAgICAgICAgIDE1OQoJCSAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM5Ljc1CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KCSAgICAgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgICAgIAkgICAgICAgICAgICAgICAgCQkJCTwvdHI+CgkJCQkJPC90Ym9keT4KCTwvdGFibGU+CjwvZGl2PgoKCTxkaXYgY2xhc3M9Im1idC12Mi1kaXZpZGVyIj48L2Rpdj4KCTxkaXYgY2xhc3M9Im1idC12Mi1ncmlkIj4KCQk8ZGl2IGNsYXNzPSJtYnQtdjItY29sIG1idC12Mi1jb2wtMTIiPgoJCQk8dWwgY2xhc3M9Im1idC12Mi1wYWdpbmF0aW9uIj4KCQkJCQkJCQkJCQkJCQkJCQkJCTxsaSBjbGFzcz0ibWJ0LXYyLXBhZ2luYXRpb24tYWN0aXZlIj4KCQkJCQkJCQkJCQkJCQkJCTxzcGFuPgoJCQkJCQkJMQoJCQkJCQk8L3NwYW4+CgkJCQkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJCQk8bGk+CQoJCQkJCQkJCQkJCQkJCQkJPGEgaHJlZj0iIyIgb25jbGljaz0icmV0dXJuIGZhbHNlOyIgaWQ9IjMzLTYwMS1wYWdlLTIiPgoJCQkJCQkJMgoJCQkJCQk8L2E+CgkJCQkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpIGNsYXNzPSJtYnQtdjItcGFnaW5hdGlvbi1uZXh0Ij4KCQkJCQkJPGEgaHJlZj0iIyIgb25jbGljaz0icmV0dXJuIGZhbHNlOyIgaWQ9IjMzLTYwMS1wYWdlLW5leHQiPgoJCQkJCQkJ4p2vIAoJCQkJCQk8L2E+CgkJCQkJPC9saT4KCQkJCQkJCTwvdWw+CgkJPC9kaXY+Cgk8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy88IVtDREFUQVsKCgl2YXIgbmFtZXNwYWNlID0gTUJULkFQSS5TYWZlTmFtZXMuQ29udGFpbmVyKCczMy02MDEnKTsKCQoJbmFtZXNwYWNlLm9uUGFnZUNsaWNrID0gZnVuY3Rpb24oZSwgcGFnZSkgewoKCQluYW1lc3BhY2UucGFyYW1zLnBhZ2UgPSBwYWdlOwoJCQoJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJd2lkZ2V0SWQ6IDYwMSwKCQkJY29udGFpbmVyOiAnMzMtNjAxLXRhYi1jb250YWluZXInLAoJCQlzdGF0ZTogJ0lERXdPVEE0TlRZM09HRTZNVE02ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qazZJbXhsWVdkMVpWOXBaQ0k3Y3pvMU9pSXhNVEU0TXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaVoyRnRaVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsUjJGdFpTSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFZHVmhiU0k3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pvNE9pSjBaVzF3YkdGMFpTSTdjem95T2lKMk1pSTdjem81T2lKelpXRnpiMjVmYVdRaU8zTTZOam9pTVRBeU5UYzFJanQ5JywKCQkJcGFyYW1zOiBuYW1lc3BhY2UucGFyYW1zCgkJfSkucmVuZGVyUGFydGlhbChuYW1lc3BhY2UucGFydGlhbCk7Cgl9CgoJCQkJCQkJCQkJCQkJCQkJCU1CVC5BUEkuRXZlbnQub2JzZXJ2ZSgnMzMtNjAxLXBhZ2UtMicsICJjbGljayIsIE1CVC5BUEkuRnVuY3Rpb24uY3JlYXRlRGVsZWdhdGUobmFtZXNwYWNlLm9uUGFnZUNsaWNrLCBudWxsLCBbMl0sIDEpKTsgCgkJCQkJCQkJCQlNQlQuQVBJLkV2ZW50Lm9ic2VydmUoJzMzLTYwMS1wYWdlLW5leHQnLCAiY2xpY2siLCBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vblBhZ2VDbGljaywgbnVsbCwgWzJdLCAxKSk7IAoJCQkvL11dPgo8L3NjcmlwdD4KPHAgY2xhc3M9Im1idC12Mi1pbmZvLXRleHQiPgogICAgCjwvcD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy88IVtDREFUQVsKCiAgICBuZXcgTUJULkFQSS5yZXNwb25zaXZlVGFibGUgKHsKICAgICAgICB0YWJsZTogJ21idC12Mi10ZWFtcy1zdGF0cy1hdmVyYWdlcy10YWJsZScsCiAgICAgICAgdGFibGVzQ29udGFpbmVyOiAnbWJ0LXYyLXRlYW1zLXN0YXRzLXRhYmxlLWF2ZXJhZ2VzLWNvbnRhaW5lcicsCiAgICAgICAgY29sdW1uc1RvUGluOiAyCiAgICB9KS53YXRjaFRhYmxlKCk7CgovL11dPgo8L3NjcmlwdD48L2Rpdj4KCTwvZGl2Pgo8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KLy88IVtDREFUQVsKCQoJCXZhciBuYW1lc3BhY2UgPSBNQlQuQVBJLlNhZmVOYW1lcy5Db250YWluZXIoJzMzLTYwMScpOwoKCQluYW1lc3BhY2UucGFyYW1zID0ge307CgkJbmFtZXNwYWNlLnBhcnRpYWwgPSAnaGlnaHMnOwoKCQkKCQkJCQluYW1lc3BhY2UucGFyYW1zLnRlYW1Nb2RlID0gZmFsc2U7CgkJCQkgCgoJCW5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyID0ge307CgkJbmFtZXNwYWNlLnBhcmFtcy51c2VfYWR2YW5jZWRfZmlsdGVyID0gdHJ1ZTsKCgkJbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnMgPSBNQlQuQVBJLmdldCgnMzMtNjAxLWZpbHRlcnMtYmxvY2snKS5jaGlsZE5vZGVzOwoKCQluYW1lc3BhY2Uub25GaWx0ZXJDaGFuZ2UgPSBmdW5jdGlvbihlLCBmaWx0ZXIpIHsKCQkJCgkJCW5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyW2ZpbHRlcl0gPSBlLnRhcmdldC52YWx1ZTsKCQkJbmFtZXNwYWNlLnBhcmFtcy5wYWdlID0gMDsKCgkJCWlmKGZpbHRlciA9PSAnc2Vhc29uX2lkJykgewoJCQkJZGVsZXRlIG5hbWVzcGFjZS5wYXJhbXMuZmlsdGVyLnN0YWdlX2lkOwoJCQkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJCQkJCXdpZGdldElkOiA2MDEsCgkJCQkJY29udGFpbmVyOiAnMzMtNjAxLXN0YWdlLXNlbGVjdG9yJywKCQkJCQlzdGF0ZTogJ0lESXlNekV6T0RFMk5XRTZNVEk2ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qazZJbXhsWVdkMVpWOXBaQ0k3Y3pvMU9pSXhNVEU0TXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaVoyRnRaVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsUjJGdFpTSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFZHVmhiU0k3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pvNE9pSjBaVzF3YkdGMFpTSTdjem95T2lKMk1pSTdmUT09JywKCQkJCQlwYXJhbXM6IHsKCQkJCQkJc2Vhc29uX2lkOiBuYW1lc3BhY2UucGFyYW1zLmZpbHRlci5zZWFzb25faWQKCQkJCQl9CgkJCQl9KS5yZW5kZXJQYXJ0aWFsKCdnZXQtc3RhZ2VzJyk7CgkJCX0KCgkJCW5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkJCXdpZGdldElkOiA2MDEsCgkJCQljb250YWluZXI6ICczMy02MDEtdGFiLWNvbnRhaW5lcicsCgkJCQlzdGF0ZTogJ0lESXlNekV6T0RFMk5XRTZNVEk2ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qazZJbXhsWVdkMVpWOXBaQ0k3Y3pvMU9pSXhNVEU0TXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaVoyRnRaVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsUjJGdFpTSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFZHVmhiU0k3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pvNE9pSjBaVzF3YkdGMFpTSTdjem95T2lKMk1pSTdmUT09JywKCQkJCXBhcmFtczogbmFtZXNwYWNlLnBhcmFtcwoJCQl9KS5yZW5kZXJQYXJ0aWFsKG5hbWVzcGFjZS5wYXJ0aWFsKTsKCQl9CgoJCWZvcihrZXkgaW4gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnMpIHsKCQkJaWYobmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5ub2RlVHlwZSA9PSAxKSB7CgkJCQluYW1lc3BhY2UucGFyYW1zLmZpbHRlcltuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyldID0gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS52YWx1ZTsKCSAgICAgICAgICAgIE1CVC5BUEkuRXZlbnQub2JzZXJ2ZShuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLCAnY2hhbmdlJywgTUJULkFQSS5GdW5jdGlvbi5jcmVhdGVEZWxlZ2F0ZShuYW1lc3BhY2Uub25GaWx0ZXJDaGFuZ2UsIG51bGwsIFtuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyldLCAxKSk7CgkJCX0KCQl9CgoJCWlmKCFuYW1lc3BhY2UucGFyYW1zLnRlYW1Nb2RlKSB7CgkJCW5hbWVzcGFjZS5vblRhYkNsaWNrID0gZnVuY3Rpb24odGFiUGFuZWwsIGluZGV4LCBwYXJ0KSB7CgoJCQkJbmFtZXNwYWNlLnBhcnRpYWwgPSBwYXJ0OwoJCQkJbmFtZXNwYWNlLnBhcmFtcy5wYWdlID0gMDsKCgkJCQlmb3Ioa2V5IGluIG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzKSB7CgkJCQkJaWYobmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5ub2RlVHlwZSA9PSAxKSB7CgkJCQkJCWlmKG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzW2tleV0uZ2V0QXR0cmlidXRlKCdkYXRhLW5hbWUnKSA9PSAnc2Vhc29uX2lkJykgewoJCQkJCQkJaWYobmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5vcHRpb25zWzBdLnZhbHVlID09ICIiKSB7CgkJCQkJCQkJbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5zZWxlY3RlZEluZGV4ID0gMTsKCQkJCQkJCQluYW1lc3BhY2UucGFyYW1zLmZpbHRlci5zZWFzb25faWQgPSBuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLm9wdGlvbnNbMV0udmFsdWU7CgkJCQkJCQl9IGVsc2UgewoJCQkJCQkJICAgIG5hbWVzcGFjZS5hdmFpbGFibGVGaWx0ZXJzWydrZXknXS5zZWxlY3RlZEluZGV4ID0gMTsKCQkJCQkJCSAgICBuYW1lc3BhY2UucGFyYW1zLmZpbHRlci5zZWFzb25faWQgPSBuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLm9wdGlvbnNbMV0udmFsdWU7CgkJCQkJCQl9CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQluYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLnNlbGVjdGVkSW5kZXggPTA7CgkJCQkJCQluYW1lc3BhY2UucGFyYW1zLmZpbHRlcltuYW1lc3BhY2UuYXZhaWxhYmxlRmlsdGVyc1trZXldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyldID0gbmFtZXNwYWNlLmF2YWlsYWJsZUZpbHRlcnNba2V5XS5vcHRpb25zWzBdLnZhbHVlOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkgICAgICAgIG5ldyBNQlQuQVBJLldpZGdldHMuV2lkZ2V0KHsKCQkgICAgICAgIAl3aWRnZXRJZDogNjAxLCAKCQkJCQljb250YWluZXI6ICczMy02MDEtdGFiLWNvbnRhaW5lcicsCgkJCQkJc3RhdGU6ICdJREl5TXpFek9ERTJOV0U2TVRJNmUzTTZNVGs2SW14bFlXZDFaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hOem9pZEdWaGJWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2laMkZ0WlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94T1RvaWNHeGhlV1Z5WDJ4cGJtdGZkbWx6YVdKc1pTSTdjem94T2lJeElqdHpPams2SW14bFlXZDFaVjlwWkNJN2N6bzFPaUl4TVRFNE15STdjem94TkRvaVoyRnRaVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2laMkZ0WlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFIyRnRaU0k3Y3pveE5Eb2lkR1ZoYlY5c2FXNXJYM1I1Y0dVaU8zTTZNVG9pTXlJN2N6b3hOem9pZEdWaGJWOXNhVzVyWDJoaGJtUnNaWElpTzNNNk1USTZJbTVoZG1sbllYUmxWR1ZoYlNJN2N6b3hOam9pY0d4aGVXVnlYMnhwYm10ZmRIbHdaU0k3Y3pveE9pSXpJanR6T2pFNU9pSndiR0Y1WlhKZmJHbHVhMTlvWVc1a2JHVnlJanR6T2pFME9pSnVZWFpwWjJGMFpWQnNZWGxsY2lJN2N6bzRPaUowWlcxd2JHRjBaU0k3Y3pveU9pSjJNaUk3ZlE9PScsCgkJCQkJcGFyYW1zOiB7CgkJCQkJCXNlYXNvbl9pZDogJzEwMjU3NScKCQkJCQl9CgkJCQl9KS5yZW5kZXJQYXJ0aWFsKHBhcnQpOwoJCSAgICB9CgoJCQluYW1lc3BhY2UudGFicyA9IFtdOwoKCQkJbmFtZXNwYWNlLm1lbnVJdGVtcyA9IE1CVC5BUEkuZ2V0KCczMy02MDEtbWJ0LXYyLW5hdmlnYXRpb24nKS5jaGlsZE5vZGVzOwoKCQkJZm9yKHZhciBpID0gMDsgaSA8ICBuYW1lc3BhY2UubWVudUl0ZW1zLmxlbmd0aDsgaSsrKSB7CgkJICAgICAgICBpZihuYW1lc3BhY2UubWVudUl0ZW1zW2ldLm5vZGVUeXBlID09IDEpIHsKCQkgICAgICAgIAluYW1lc3BhY2UudGFicy5wdXNoKHsKCQkgICAgICAgIAkJdGFiSWQ6IG5hbWVzcGFjZS5tZW51SXRlbXNbaV0uaWQsCgkJICAgICAgICAJCW5lZWRMb2FkOiBNQlQuQVBJLkZ1bmN0aW9uLmNyZWF0ZURlbGVnYXRlKG5hbWVzcGFjZS5vblRhYkNsaWNrLCBudWxsLCBuYW1lc3BhY2UubWVudUl0ZW1zW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyksIDIpLAoJCSAgICAgICAgCX0pOwoJCSAgICAgICAgfQoJCQl9CgoJCQluYW1lc3BhY2UuVGFiQ29udHJvbGxlciA9IG5ldyBNQlQuQVBJLlVJLlRhYlBhbmVsKHsKCQkJCWNvbnRhaW5lcjogJzMzLTYwMS10YWItY29udGFpbmVyJywKCQkJCXRhYkNsYXNzOiAnbWJ0LXYyLW5hdmlnYXRpb24tdGFiJywKCQkgICAgICAgIGFjdGl2ZVRhYkNsYXNzOiAnbWJ0LXYyLW5hdmlnYXRpb24tdGFiLWFjdGl2ZScsCgkJICAgICAgICB0YWJzOiBuYW1lc3BhY2UudGFicywKCQkgICAgICAgIG5vQ2FjaGU6IHRydWUsCgkJICAgICAgICBhY3RpdmVUYWI6IDAKCQkJfSk7CgkJfSBlbHNlIHsKCQkJbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoewoJICAgICAgICAJd2lkZ2V0SWQ6IDYwMSwgCgkJCQljb250YWluZXI6ICczMy02MDEtdGFiLWNvbnRhaW5lcicsCgkJCQlzdGF0ZTogJ0lESXlNekV6T0RFMk5XRTZNVEk2ZTNNNk1UazZJbXhsWVdkMVpWOXNhVzVyWDNacGMybGliR1VpTzNNNk1Ub2lNU0k3Y3pveE56b2lkR1ZoYlY5c2FXNXJYM1pwYzJsaWJHVWlPM002TVRvaU1TSTdjem94TnpvaVoyRnRaVjlzYVc1clgzWnBjMmxpYkdVaU8zTTZNVG9pTVNJN2N6b3hPVG9pY0d4aGVXVnlYMnhwYm10ZmRtbHphV0pzWlNJN2N6b3hPaUl4SWp0ek9qazZJbXhsWVdkMVpWOXBaQ0k3Y3pvMU9pSXhNVEU0TXlJN2N6b3hORG9pWjJGdFpWOXNhVzVyWDNSNWNHVWlPM002TVRvaU15STdjem94TnpvaVoyRnRaVjlzYVc1clgyaGhibVJzWlhJaU8zTTZNVEk2SW01aGRtbG5ZWFJsUjJGdFpTSTdjem94TkRvaWRHVmhiVjlzYVc1clgzUjVjR1VpTzNNNk1Ub2lNeUk3Y3pveE56b2lkR1ZoYlY5c2FXNXJYMmhoYm1Sc1pYSWlPM002TVRJNkltNWhkbWxuWVhSbFZHVmhiU0k3Y3pveE5qb2ljR3hoZVdWeVgyeHBibXRmZEhsd1pTSTdjem94T2lJeklqdHpPakU1T2lKd2JHRjVaWEpmYkdsdWExOW9ZVzVrYkdWeUlqdHpPakUwT2lKdVlYWnBaMkYwWlZCc1lYbGxjaUk3Y3pvNE9pSjBaVzF3YkdGMFpTSTdjem95T2lKMk1pSTdmUT09JywKCQkJCXBhcmFtczogewoJCQkJCXNlYXNvbl9pZDogJzEwMjU3NScKCQkJCX0KCQkJfSkucmVuZGVyUGFydGlhbChuYW1lc3BhY2UucGFydGlhbCk7CgkJfQoKCSAgICBpZighbmFtZXNwYWNlLnBhcmFtcy50ZWFtTW9kZSkgewoJCSAgICBuYW1lc3BhY2UubW9iaWxlTmF2ID0gbmV3IE1CVC5BUEkuY3JlYXRlUmVzcG9uc2l2ZU5hdmlnYXRpb24oewoJCQkJbWVudUNvbnRhaW5lciA6ICIzMy02MDEtbWJ0LXYyLW5hdmlnYXRpb24iLAoJCQkJbW9iaWxlTWVudUNvbnRhaW5lciA6ICIzMy02MDEtbW9iaWxlLW1lbnUiLAoJCQkJbW9iaWxlTWVudU9wZW5lZENsYXNzIDogJ21idC12Mi1tb2JpbGUtbWVudS1vcGVuZWQnLAoJCQkJbW9iaWxlTWVudUNsb3NlVGV4dDogJ0l6YmVyaScKCQkJfSk7CgkgICAgfQoJCi8vXV0+Cjwvc2NyaXB0Pgk8L2Rpdj4KPC9kaXY+CjxzY3JpcHQ+CiAgICAgICAgdmFyIGxlYWd1ZSA9IDExMTgzOwogICAgPC9zY3JpcHQ+PCEtLSBOZWVkIGZvciBzY2hlZHVsZSB3aWRnZXQgLS0+PCEtLSBMb2FkIHNjaGVkdWxlIHdpZGdldCAtLT48c2NyaXB0PgoKICAgICAgICB2YXIgcmVxdWVzdCA9IG5ldyBNQlQuQVBJLldpZGdldHMuUmVuZGVyUmVxdWVzdCgpOwogICAgICAgIHZhciB3aWRnZXQgPSBuZXcgTUJULkFQSS5XaWRnZXRzLldpZGdldCgpOwogICAgICAgIHdpZGdldC5zZXRDb250YWluZXIoJ3NjaGVkdWxlJyk7CiAgICAgICAgd2lkZ2V0LnNldFdpZGdldElkKE1CVC5BUEkuV2lkZ2V0cy5TRUFTT05fU0NIRURVTEVfTE9OR19XSURHRVQpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVhbV9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3Nob3dfc2Vhc29uX3NlbGVjdG9yJywgMSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdnYW1lX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVhbV9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfdHlwZScsIE1CVC5BUEkuTkFWSUdBVElPTl9UWVBFX0NVU1RPTSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZWFtX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZVRlYW0nKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2dhbWVfbGlua19oYW5kbGVyJywgJ25hdmlnYXRlR2FtZScpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZVBsYXllcicpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnYXJlbmFfbGlua192aXNpYmxlJywgMSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdhcmVuYV9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnYXJlbmFfbGlua19oYW5kbGVyJywgJ25hdmlnYXRlQXJlbmEnKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2xlYWd1ZV9pZCcsIGxlYWd1ZSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdzZWFzb25faWQnLCBzZWFzb24pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9kYXlzJywgMSApOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnc2hvd19yZWZlcmVlX2NpdHknLCAnMScpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnaXRlbXNfb25fcGFnZScsICczMCcpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnc3RhZ2VfbGV2ZWxzX3Zpc2libGUnLCAyKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlbXBsYXRlJywgJ3YyJyk7CiAgICAgICAgcmVxdWVzdC5hZGRXaWRnZXQod2lkZ2V0KTsKICAgICAgICByZXF1ZXN0LnJlbmRlcigpOwogICAgPC9zY3JpcHQ+PCEtLSBOZWVkIGZvciBzdGFuZGluZ3Mgd2lkZ2V0IC0tPjwhLS0gTG9hZCBzdGFuZGluZ3Mgd2lkZ2V0IC0tPjxzY3JpcHQ+CiAgICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgTUJULkFQSS5XaWRnZXRzLlJlbmRlclJlcXVlc3QoKTsKICAgICAgICB2YXIgd2lkZ2V0ID0gbmV3IE1CVC5BUEkuV2lkZ2V0cy5XaWRnZXQoKTsKICAgICAgICB3aWRnZXQuc2V0Q29udGFpbmVyKCdzdGFuZGluZ3MnKTsKICAgICAgICB3aWRnZXQuc2V0V2lkZ2V0SWQoTUJULkFQSS5XaWRnZXRzLlNFQVNPTl9TVEFORElOR1NfTE9OR19XSURHRVQpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnbGVhZ3VlX2xpbmtfdmlzaWJsZScsIDIpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVhbV9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2dhbWVfbGlua192aXNpYmxlJywgMik7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdwbGF5ZXJfbGlua192aXNpYmxlJywgMSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdmdWxsX3N0YW5kaW5nc19saW5rX3Zpc2libGUnLCAyKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oInN0YWdlX2xldmVsc192aXNpYmxlIiwgMik7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdsZWFndWVfaWQnLCBsZWFndWUpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnc2Vhc29uX2lkJywgc2Vhc29uKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlYW1fbGlua190eXBlJywgTUJULkFQSS5OQVZJR0FUSU9OX1RZUEVfQ1VTVE9NKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlYW1fbGlua19oYW5kbGVyJywgJ25hdmlnYXRlVGVhbScpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZnVsbF9zdGFuZGluZ3NfbGlua190eXBlJywgTUJULkFQSS5OQVZJR0FUSU9OX1RZUEVfQ1VTVE9NKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2Z1bGxfc3RhbmRpbmdzX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZVN0YW5kaW5ncycpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVtcGxhdGUnLCAndjInKTsKICAgICAgICByZXF1ZXN0LmFkZFdpZGdldCh3aWRnZXQpOwogICAgICAgIHJlcXVlc3QucmVuZGVyKCk7CiAgICA8L3NjcmlwdD48IS0tIE5lZWQgZm9yIHN0YW5kaW5ncyB3aWRnZXQgLS0+PHNjcmlwdD4KICAgICAgICB2YXIgcmVxdWVzdCA9IG5ldyBNQlQuQVBJLldpZGdldHMuUmVuZGVyUmVxdWVzdCgpOwogICAgICAgIHZhciB3aWRnZXQgPSBuZXcgTUJULkFQSS5XaWRnZXRzLldpZGdldCgpOwogICAgICAgIHdpZGdldC5zZXRDb250YWluZXIoJ3N0YW5kaW5ncycpOwogICAgICAgIHdpZGdldC5zZXRXaWRnZXRJZChNQlQuQVBJLldpZGdldHMuU0VBU09OX1NUQU5ESU5HU19MT05HX1dJREdFVCk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdsZWFndWVfbGlua192aXNpYmxlJywgMik7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZWFtX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9saW5rX3Zpc2libGUnLCAyKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3BsYXllcl9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2Z1bGxfc3RhbmRpbmdzX2xpbmtfdmlzaWJsZScsIDIpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgic3RhZ2VfbGV2ZWxzX3Zpc2libGUiLCAyKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2xlYWd1ZV9pZCcsIGxlYWd1ZSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdzZWFzb25faWQnLCBzZWFzb24pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVhbV9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVhbV9saW5rX2hhbmRsZXInLCAnbmF2aWdhdGVUZWFtJyk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdmdWxsX3N0YW5kaW5nc19saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZnVsbF9zdGFuZGluZ3NfbGlua19oYW5kbGVyJywgJ25hdmlnYXRlU3RhbmRpbmdzJyk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZW1wbGF0ZScsICd2MicpOwogICAgICAgIHJlcXVlc3QuYWRkV2lkZ2V0KHdpZGdldCk7CiAgICAgICAgcmVxdWVzdC5yZW5kZXIoKTsKICAgIDwvc2NyaXB0PjwhLS0gTG9hZCBwbGF5ZXIgc3RhdHMgd2lkZ2V0IC0tPjxzY3JpcHQ+CiAgICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgTUJULkFQSS5XaWRnZXRzLlJlbmRlclJlcXVlc3QoKTsKICAgICAgICB3aWRnZXQgPSBuZXcgTUJULkFQSS5XaWRnZXRzLldpZGdldCgpOwogICAgICAgIHdpZGdldC5zZXRDb250YWluZXIoJ3N0YXRzLXBsYXllcicpOwogICAgICAgIHdpZGdldC5zZXRXaWRnZXRJZChNQlQuQVBJLldpZGdldHMuU1RBVElTVElDU19QTEFZRVJTX1dJREdFVCk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdsZWFndWVfbGlua192aXNpYmxlJywgMSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZWFtX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3BsYXllcl9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2xlYWd1ZV9pZCcsIGxlYWd1ZSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdzZWFzb25faWQnLCBzZWFzb24pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnZ2FtZV9saW5rX2hhbmRsZXInLCAnbmF2aWdhdGVHYW1lJyk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZWFtX2xpbmtfdHlwZScsIE1CVC5BUEkuTkFWSUdBVElPTl9UWVBFX0NVU1RPTSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZWFtX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZVRlYW0nKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3BsYXllcl9saW5rX3R5cGUnLCBNQlQuQVBJLk5BVklHQVRJT05fVFlQRV9DVVNUT00pOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZVBsYXllcicpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgndGVtcGxhdGUnLCAndjInKTsKICAgICAgICByZXF1ZXN0LmFkZFdpZGdldCh3aWRnZXQpOwogICAgICAgIHJlcXVlc3QucmVuZGVyKCk7CiAgICA8L3NjcmlwdD48IS0tIExvYWQgdGVhbSBzdGF0cyB3aWRnZXQgLS0+PHNjcmlwdD4KICAgICAgICB2YXIgcmVxdWVzdCA9IG5ldyBNQlQuQVBJLldpZGdldHMuUmVuZGVyUmVxdWVzdCgpOwogICAgICAgIHZhciB3aWRnZXQgPSBuZXcgTUJULkFQSS5XaWRnZXRzLldpZGdldCgpOwogICAgICAgIHdpZGdldC5zZXRDb250YWluZXIoJ3N0YXRzLXRlYW0nKTsKICAgICAgICB3aWRnZXQuc2V0V2lkZ2V0SWQoTUJULkFQSS5XaWRnZXRzLlNUQVRJU1RJQ1NfVEVBTVNfV0lER0VUKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ2xlYWd1ZV9saW5rX3Zpc2libGUnLCAxKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlYW1fbGlua192aXNpYmxlJywgMSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdnYW1lX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfdmlzaWJsZScsIDEpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgnbGVhZ3VlX2lkJywgbGVhZ3VlKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3NlYXNvbl9pZCcsIHNlYXNvbik7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdnYW1lX2xpbmtfdHlwZScsIE1CVC5BUEkuTkFWSUdBVElPTl9UWVBFX0NVU1RPTSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdnYW1lX2xpbmtfaGFuZGxlcicsICduYXZpZ2F0ZUdhbWUnKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlYW1fbGlua190eXBlJywgTUJULkFQSS5OQVZJR0FUSU9OX1RZUEVfQ1VTVE9NKTsKICAgICAgICB3aWRnZXQuc2V0UGFyYW0oJ3RlYW1fbGlua19oYW5kbGVyJywgJ25hdmlnYXRlVGVhbScpOwogICAgICAgIHdpZGdldC5zZXRQYXJhbSgncGxheWVyX2xpbmtfdHlwZScsIE1CVC5BUEkuTkFWSUdBVElPTl9UWVBFX0NVU1RPTSk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCdwbGF5ZXJfbGlua19oYW5kbGVyJywgJ25hdmlnYXRlUGxheWVyJyk7CiAgICAgICAgd2lkZ2V0LnNldFBhcmFtKCd0ZW1wbGF0ZScsICd2MicpOwogICAgICAgIHJlcXVlc3QuYWRkV2lkZ2V0KHdpZGdldCk7CiAgICAgICAgcmVxdWVzdC5yZW5kZXIoKTsKICAgIDwvc2NyaXB0PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImNvbnRhaW5lci1ib290c3RyYXAgYmFubmVyLWgiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLW1kLTEyIHRleHQtY2VudGVyIj48c2NyaXB0IGxhbmd1YWdlPSJKYXZhU2NyaXB0IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9vZ2xhc2kua3pzLnNpL2FkeC5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBsYW5ndWFnZT0iSmF2YVNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48IS0tCmlmICghZG9jdW1lbnQucGhwQWRzX3VzZWQpIGRvY3VtZW50LnBocEFkc191c2VkID0gJywnO3BocEFkc19yYW5kb20gPSBuZXcgU3RyaW5nIChNYXRoLnJhbmRvbSgpKTsgcGhwQWRzX3JhbmRvbSA9IHBocEFkc19yYW5kb20uc3Vic3RyaW5nKDIsMTEpO2RvY3VtZW50LndyaXRlICgiPCIgKyAic2NyaXB0IGxhbmd1YWdlPSdKYXZhU2NyaXB0JyB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0nIik7ZG9jdW1lbnQud3JpdGUgKCJodHRwczovL29nbGFzaS5renMuc2kvYWRqcy5waHA/bj0iICsgcGhwQWRzX3JhbmRvbSk7ZG9jdW1lbnQud3JpdGUgKCImYW1wO3doYXQ9em9uZTozIik7ZG9jdW1lbnQud3JpdGUgKCImYW1wO2V4Y2x1ZGU9IiArIGRvY3VtZW50LnBocEFkc191c2VkKTtpZiAoZG9jdW1lbnQucmVmZXJyZXIpZG9jdW1lbnQud3JpdGUgKCImYW1wO3JlZmVyZXI9IiArIGVzY2FwZShkb2N1bWVudC5yZWZlcnJlcikpO2RvY3VtZW50LndyaXRlICgiJz48IiArICIvc2NyaXB0PiIpOwovLy0tPjwvc2NyaXB0PjxzY3JpcHQgbGFuZ3VhZ2U9IkphdmFTY3JpcHQiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL29nbGFzaS5renMuc2kvYWRqcy5waHA/bj01ODI3NDI4MzAmYW1wO3doYXQ9em9uZTozJmFtcDtleGNsdWRlPSwiPjwvc2NyaXB0PjxhIGhyZWY9Imh0dHBzOi8vb2dsYXNpLmt6cy5zaS9hZGNsaWNrLnBocD9iYW5uZXJpZD02MDQmYW1wO3pvbmVpZD0zJmFtcDtzb3VyY2U9JmFtcDtkZXN0PWh0dHBzJTNBJTJGJTJGd3d3LmUtc3RhdmUuY29tJTJGIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vb2dsYXNpLmt6cy5zaS9hZGltYWdlLnBocD9maWxlbmFtZT1iYW5uZXIta3pzLTcxMHg5MC5qcGcmYW1wO2NvbnRlbnR0eXBlPWpwZWciIHdpZHRoPSI3MTAiIGhlaWdodD0iOTAiIGFsdD0iIiB0aXRsZT0iIiBib3JkZXI9IjAiPjwvYT48ZGl2IGlkPSJiZWFjb25fNjA0IiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwcHg7IHRvcDogMHB4OyB2aXNpYmlsaXR5OiBoaWRkZW47Ij48aW1nIHNyYz0iaHR0cHM6Ly9vZ2xhc2kua3pzLnNpL2FkbG9nLnBocD9iYW5uZXJpZD02MDQmYW1wO2NsaWVudGlkPTM2MCZhbXA7em9uZWlkPTMmYW1wO3NvdXJjZT0mYW1wO2Jsb2NrPTAmYW1wO2NhcHBpbmc9MCZhbXA7Y2I9NzgyMTA5ODc2ZjU1ZjEwOGZhZjZiMDA2NmY2ZmVjOGEiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGFsdD0iIiBzdHlsZT0id2lkdGg6IDBweDsgaGVpZ2h0OiAwcHg7Ij48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9mYW5jeWJveC9qcXVlcnkuZmFuY3lib3gucGFjay5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9mYW5jeWJveC9qcXVlcnkuZmFuY3lib3gtYnV0dG9ucy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9mYW5jeWJveC9qcXVlcnkuZmFuY3lib3gtbWVkaWEuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvZmFuY3lib3gvanF1ZXJ5LmZhbmN5Ym94LXRodW1icy5qcyI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CjwhLS0KalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKCWpRdWVyeSgnLmFnYWwnKS5mYW5jeWJveCh7CgkJdHlwZSA6ICdpbWFnZScsCgkJcGFkZGluZzogMCwKCQloZWxwZXJzIDogewoJICAgICBtZWRpYSA6IHt9CgkgICAgfQogICAgfSk7Cn0pOwovLy0tPgo8L3NjcmlwdD4KCQkJCQkJCgkJCQk8ZGl2IHN0eWxlPSJjbGVhcjogYm90aDsiPjwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCTwvZGl2PjwhLS1taWRkbGUgcGFydHMgZW5kcy0tPgo8L2Rpdj48IS0tY29udGFpbmVyIHBhcnRzIGVuZHMtLT4KCQkKCgoKCgoKCgo8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgc3BvbnNvci1jb250YWluZXIiPjxkaXYgY2xhc3M9ImRpdmlkZXIiPjwvZGl2PjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLW1kLTEyIHNwb25zb3ItY29udGFpbmVyLWlubmVyIj48ZGl2IGlkPSJzcG9uc29ycyIgY2xhc3M9ImNhcm91c2VsIHNsaWRlIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSI3MDAwIj48ZGl2IGNsYXNzPSJyb3cgZ2VuZXJhbC1zcG9uc29ycyI+PGRpdiBjbGFzcz0iY29sLW1kLW9mZnNldC0yIGNvbC1tZC00ICBjb2wtc20tNiBjb2wteHMtNiBjb2wteHhzLTEyIGctc3AtcmlnaHQgc3Bvbi1nZW4iPjxhIGNsYXNzPSJzcG9uLWdlbi10cmFuc2Zvcm0iPjwvYT48YSBocmVmPSJodHRwczovL3RlbGVtYWNoLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJUZWxlbWFjaCI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzgwNzMvcncvMjIwL3JwL3RydWUvaC8zNWFiZDgiPjwvYT48cCBjbGFzcz0iZ2VuLXNwb24iPkdlbmVyYWxuaSBzcG9uem9yPC9wPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1tZC00ICBjb2wtc20tNiBjb2wteHMtNiBjb2wteHhzLTEyIGctc3AtbGVmdCBzcG9uLXBsYXQiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWRpZGFzLmNvbSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJBZGlkYXMiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC80NDUyL3J3LzIyMC9ycC90cnVlL2gvNTkxYWQ5Ij48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5zcGFyLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJTcGFyIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNzAyNC9ydy8yMjAvcnAvdHJ1ZS9oL2RlZjQwZiI+PC9hPjxwPlBsYXRpbmFzdGEgc3BvbnpvcmphPC9wPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIiByb2xlPSJsaXN0Ym94Ij48ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+PGRpdiBjbGFzcz0ic2xpZGVyLWlubmVyIj48ZGl2IGNsYXNzPSJzcG9uc29ycyBnb2xkZW4iPjxkaXYgY2xhc3M9ImxvZ29zIj48YSBocmVmPSJodHRwOi8vd3d3Lm5rYm0uc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ik5LQk0iPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC80Njk4L3J3LzE1NC9ycC90cnVlL2gvNmIxMjk2Ij48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5wZXRyb2wuc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlBldHJvbCI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzQ2OTcvcncvMTU0L3JwL3RydWUvaC9hMDA1ZDYiPjwvYT48L2Rpdj48cD5abGF0aSBzcG9uem9yamk8L3A+PC9kaXY+PGRpdiBjbGFzcz0ic3BvbnNvcnMgc2lsdmVyIj48ZGl2IGNsYXNzPSJsb2dvcyI+PGEgaHJlZj0iaHR0cDovL3d3dy5hLWNvc21vcy5zaS8iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iQS1Db3Ntb3MiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC8xNDM5NS9ydy8xNTQvcnAvdHJ1ZS9oLzY2NGMyZSI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cucGl2by1sYXNrby5zaS9zbG8vIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxhxaFrbyI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzE1MDUyL3J3LzE1NC9ycC90cnVlL2gvYTI3YTkyIj48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5zcGFsZGluZy5zaS8iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iU3BhbGRpbmciPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC81MDU5L3J3LzE1NC9ycC90cnVlL2gvMTI3ZGJjIj48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5zb255LnNpL3NlY3Rpb24vemFjZXRuYS1zdHJhbiIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJTb255Ij48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTA2My9ydy8xNTQvcnAvdHJ1ZS9oLzRiMzNlNyI+PC9hPjwvZGl2PjxwPlNyZWJybmkgc3BvbnpvcmppPC9wPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gIj48ZGl2IGNsYXNzPSJzbGlkZXItaW5uZXIiPjxkaXYgY2xhc3M9InNwb25zb3JzIGdvbGRlbiI+PGRpdiBjbGFzcz0ibG9nb3MiPjxhIGhyZWY9Imh0dHA6Ly93d3cua29tcGFzLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJLb21wYXMiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC80NzAwL3J3LzE1NC9ycC90cnVlL2gvY2NiNWJlIj48L2E+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZG0tZHJvZ2VyaWVtYXJrdC5zaS8iIHRpdGxlPSJETSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzUwNTMvcncvMTU0L3JwL3RydWUvaC9lNzJmMGYiPjwvYT48L2Rpdj48cD5TcmVicm5pIHNwb256b3JqaTwvcD48L2Rpdj48ZGl2IGNsYXNzPSJzcG9uc29ycyBzaWx2ZXIiPjxkaXYgY2xhc3M9ImxvZ29zIj48YSBocmVmPSJodHRwczovL3d3dy5lLXN0YXZlLmNvbS8iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0ixaBwb3J0bmEgbG90ZXJpamEiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC8xNDI0OS9ydy8xNTQvcnAvdHJ1ZS9oL2Y4ZjRhMCI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cuZWxla3Ryby1nb3Jlbmpza2Euc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkVsZWt0cm8gR29yZW5qc2thIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTA1NC9ydy8xNTQvcnAvdHJ1ZS9oLzE0MzIxNCI+PC9hPjxhIGhyZWY9Imh0dHA6Ly9sb3RlcmlqYS5zaS8iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTG90ZXJpamEgU2xvdmVuaWplIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTgxMy9ydy8xNTQvcnAvdHJ1ZS9oLzk0NzhiOCI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cuaHNlLnNpL3NpLyIgdGl0bGU9IkhTRSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzUzMjcvcncvMTU0L3JwL3RydWUvaC9mZGVjNTMiPjwvYT48L2Rpdj48cD5Ccm9uYXN0aSBzcG9uem9yamk8L3A+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iaXRlbSAiPjxkaXYgY2xhc3M9InNsaWRlci1pbm5lciI+PGRpdiBjbGFzcz0ic3BvbnNvcnMgZ29sZGVuIj48ZGl2IGNsYXNzPSJsb2dvcyI+PGEgaHJlZj0iaHR0cDovL3d3dy5nb3JlbmplLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHb3JlbmplIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTA2OS9ydy8xNTQvcnAvdHJ1ZS9oLzA4ZTQ3ZSI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cua25hdWZpbnN1bGF0aW9uLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJLbmF1ZiI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzUwNjUvcncvMTU0L3JwL3RydWUvaC80ZWYyYWMiPjwvYT48YSBocmVmPSJodHRwOi8vd3d3LnNsby16ZWxlem5pY2Uuc2kvc2wvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlNsb3ZlbnNrZSDFvmVsZXpuaWNlIj48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTA1NS9ydy8xNTQvcnAvdHJ1ZS9oLzk2MzdkYSI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cuZ2VuLWVuZXJnaWphLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHRU4tSSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzUwNjYvcncvMTU0L3JwL3RydWUvaC8xMDJiMmUiPjwvYT48L2Rpdj48cD5Ccm9uYXN0aSBzcG9uem9yamk8L3A+PC9kaXY+PGRpdiBjbGFzcz0ic3BvbnNvcnMgc2lsdmVyIj48ZGl2IGNsYXNzPSJsb2dvcyI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYXVzdHJpYS10cmVuZC5hdC9lbi9ob3RlbHMvbGp1YmxqYW5hIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkFUSCI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzc1MDMvcncvMTU0L3JwL3RydWUvaC8yMjljMDAiPjwvYT48YSBocmVmPSJodHRwOi8vd3d3LmZ1bmRhY2lqYXphc3BvcnQub3JnLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJGdW5kYWNpamEgemEgxaFwb3J0Ij48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNDg4My9ydy8xNTQvcnAvdHJ1ZS9oLzlkOWE3YSI+PC9hPjwvZGl2PjxwPlBhcnRuZXJqaTwvcD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICI+PGRpdiBjbGFzcz0ic2xpZGVyLWlubmVyIj48ZGl2IGNsYXNzPSJzcG9uc29ycyBnb2xkZW4iPjxkaXYgY2xhc3M9ImxvZ29zIj48YSBocmVmPSJodHRwOi8vd3d3Lm1zcy5nb3Yuc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ik1JWlMiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC81MDY4L3J3LzE1NC9ycC90cnVlL2gvNzVkNmQzIj48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5ldXJvcGxha2F0LnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJFdXJvcGxha2F0Ij48aW1nIHNyYz0iL2JpbmFyeS9zaG93aW1hZ2UvaWQvNTgxNS9ydy8xNTQvcnAvdHJ1ZS9oL2RhZmMzYiI+PC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cudnppdm8uc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlYgxb5pdm8iPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC81ODE0L3J3LzE1NC9ycC90cnVlL2gvNGRiMGI4Ij48L2E+PGEgaHJlZj0iaHR0cDovL3d3dy5hcnNwaGFybWFlLmNvbS8iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iQXJzcGhhcm1hZSI+PGltZyBzcmM9Ii9iaW5hcnkvc2hvd2ltYWdlL2lkLzUwNjQvcncvMTU0L3JwL3RydWUvaC80Y2FlYjkiPjwvYT48YSBocmVmPSJodHRwOi8vd3d3LnByb21ldG1lc2VjLnNpLyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJOb21hZ28iPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC82OTExL3J3LzE1NC9ycC90cnVlL2gvMGE1NTIzIj48L2E+PGEgaHJlZj0iaHR0cDovL2V2ZW50aW0uc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkV2ZW50aW0iPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC81MDU3L3J3LzE1NC9ycC90cnVlL2gvZGVhYjk1Ij48L2E+PC9kaXY+PHA+UGFydG5lcmppPC9wPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gIj48ZGl2IGNsYXNzPSJzbGlkZXItaW5uZXIiPjxkaXYgY2xhc3M9InNwb25zb3JzIGdvbGRlbiI+PGRpdiBjbGFzcz0ibG9nb3MiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1vZGlhbmEuc2kvIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ik1vZGlhbmEiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC81MTQ1L3J3LzE1NC9ycC90cnVlL2gvNWIxMDJmIj48L2E+PC9kaXY+PHA+UGFydG5lcmppPC9wPjwvZGl2PjxkaXYgY2xhc3M9InNwb25zb3JzIHNpbHZlciI+PGRpdiBjbGFzcz0ibG9nb3MiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lmdyb3NiYXNrZXQuY29tL3NsIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ikdyb3NiYXNrZXQiPjxpbWcgc3JjPSIvYmluYXJ5L3Nob3dpbWFnZS9pZC83MDI1L3J3LzE1NC9ycC90cnVlL2gvNTRhMjc1Ij48L2E+PC9kaXY+PHA+R2VuZXJhbG5pIHNwb256b3IgRFAgM3gzPC9wPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxhIGNsYXNzPSJsZWZ0IGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNzcG9uc29ycyIgcm9sZT0iYnV0dG9uIiBkYXRhLXNsaWRlPSJwcmV2Ij48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi10cmlhbmdsZS1sZWZ0IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPjxzcGFuIGNsYXNzPSJzci1vbmx5Ij5OYXphajwvc3Bhbj48L2E+PGEgY2xhc3M9InJpZ2h0IGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNzcG9uc29ycyIgcm9sZT0iYnV0dG9uIiBkYXRhLXNsaWRlPSJuZXh0Ij48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi10cmlhbmdsZS1yaWdodCIgYXJpYS1oaWRkZW49InRydWUiPjwvc3Bhbj48c3BhbiBjbGFzcz0ic3Itb25seSI+TmFwcmVqPC9zcGFuPjwvYT48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KPGRpdiBjbGFzcz0iZm9vdGVyIj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXItYm9vdHN0cmFwIj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMCBjb2wtbWQtb2Zmc2V0LTEgY29sLXNtLTEyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgoJCSAgPGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTMgY29sLXhzLTMgY29sLXh4cy02Ij48aDM+TWVkaWpza28gc3JlZGnFocSNZTwvaDM+PHVsPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vYWtyZWRpdGFjaWplIj5Ba3JlZGl0YWNpamU8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Pcmdhbml6YWNpamEvTG9nb3RpcGkvY2lkLzEzMCI+TG9nb3RpcGk8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Pcmdhbml6YWNpamEvVnNlLW8tS1pTL2NpZC8xMjUiPktvbnRha3Q8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Wc3RvcG5pY2UvY2lkLzE1MSI+VnN0b3BuaWNlPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvUHJlbm9zaS9jaWQvMTQyIj5QcmVub3NpPC9hPjwvbGk+PC91bD48L2Rpdj4KCQkgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS0zIGNvbC14cy0zIGNvbC14eHMtNiI+PGgzPktaUzwvaDM+PHVsPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL09yZ2FuaXphY2lqYS9Eb2t1bWVudGkvY2lkLzEzMSI+RG9rdW1lbnRpPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9hcnRpY2xlL2lkLzUzMSI+U29kbmnFoWtpIGlza2FsbmlrPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cua29zYXJrYXJza2ktdHJlbmVyamkuY29tLyIgdGFyZ2V0PSJfYmxhbmsiPlpLVFM8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9UcmdvdmluYS9jaWQvMTQxIj5UcmdvdmluYTwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vb2xkLmt6cy5zaS8iIHRhcmdldD0iX2JsYW5rIj5BcmhpdiBLWlM8L2E+PC9saT48L3VsPjwvZGl2PgoJCSAgPGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTMgY29sLXhzLTMgY29sLXh4cy02Ij48aDM+UmVwcmV6ZW50YW5jZTwvaDM+PHVsPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1JlcHJlemVudGFuY2UvQ2xhbmkvY2lkLzM3Ij7EjGxhbmk8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9SZXByZXplbnRhbmNlL0NsYW5pY2UvY2lkLzgzIj7EjGxhbmljZTwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1JlcHJlemVudGFuY2UvRmFudGplLVUyMC9jaWQvNzgiPkZhbnRqZSBVMjA8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9SZXByZXplbnRhbmNlL0Rla2xldGEtVTIwL2NpZC84NCI+RGVrbGV0YSBVMjA8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9SZXByZXplbnRhbmNlL0ZhbnRqZS1VMTgvY2lkLzc5Ij5GYW50amUgVTE4PC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvUmVwcmV6ZW50YW5jZS9EZWtsZXRhLVUxOC9jaWQvODUiPkRla2xldGEgVTE4PC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvUmVwcmV6ZW50YW5jZS9GYW50amUtVTE2L2NpZC84MCI+RmFudGplIFUxNjwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1JlcHJlemVudGFuY2UvRGVrbGV0YS1VMTYvY2lkLzg2Ij5EZWtsZXRhIFUxNjwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1JlcHJlemVudGFuY2UvRmFudGplLVUxNC9jaWQvODIiPkZhbnRqZSBVMTQ8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9SZXByZXplbnRhbmNlL0Rla2xldGEtVTE0L2NpZC84OCI+RGVrbGV0YSBVMTQ8L2E+PC9saT48L3VsPjwvZGl2PgoJCSAgPGRpdiBjbGFzcz0iY29sLW1kLTMgY29sLXNtLTMgY29sLXhzLTMgY29sLXh4cy02Ij48aDM+UHJvamVrdGkgaW4gdGVrbW92YW5qYTwvaDM+PHVsPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1Byb2pla3RpL0lncml2YS1rb3NhcmthL2NpZC85MSI+SWdyaXZhIGtvxaFhcmthPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvUHJvamVrdGkvTGlwa28vY2lkLzE1NSI+TGlwa288L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Qcm9qZWt0aS9SZWdpanNrby1zZWxla2Npb25pcmFuamUvY2lkLzkzIj5SZWdpanNrbyBzZWxla2Npb25pcmFuamU8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Qcm9qZWt0aS9LWlMtdGFib3IvY2lkLzkyIj5UYWJvcmk8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9Qcm9qZWt0aS9Lb3NhcmthcnNraS1zdXBlcnNvbGFyL2NpZC85NCI+S2/FoWFya2Fyc2tpIFN1cGVyxaFvbGFyPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvUHJvamVrdGkvVTE0LXNsb3ZlbmlhLWJhbGwvY2lkLzk1Ij5VMTQgU2xvdmVuaWEgQmFsbDwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1Byb2pla3RpL0FsbC1TdGFycy9jaWQvOTYiPkFsbCBzdGFyczwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vY21zLmRhZy1maWxlcy5jb20vY2xhbmVrL1Byb2pla3RpL1Bva2FsLUV1cm9iYXNrZXQtMjAxNy9jaWQvMjAwIj5Qb2thbCBFdXJvYmFza2V0IDIwMTc8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9UZWttb3ZhbmphL0xpZ2EtTm92YS1LQk0vY2lkLzY2Ij5MaWdhIE5vdmEgS0JNPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvVGVrbW92YW5qYS8xLi1TS0wtemEtemVuc2tlL2NpZC82NyI+MS4gU0tMIHphIMW+ZW5za2U8L2E+PC9saT48bGk+PGEgaHJlZj0iaHR0cDovL2Ntcy5kYWctZmlsZXMuY29tL2NsYW5lay9UZWttb3ZhbmphL1Bva2FsLVNwYXIvY2lkLzcyI21idDozMy0zMDMkdCZhbXA7MD0xIj5Qb2thbCBTcGFyPC9hPjwvbGk+PGxpPjxhIGhyZWY9Imh0dHA6Ly9jbXMuZGFnLWZpbGVzLmNvbS9jbGFuZWsvM3gzL1NhbXN1bmctZHJ6YXZuby1wcnZlbnN0dm8vY2lkLzIwOSI+S2/FoWFya2EgM3gzPC9hPjwvbGk+PC91bD48L2Rpdj4KCQkgIDxkaXYgY2xhc3M9ImNiIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CQkKCgogCgoKCgo8ZGl2IGNsYXNzPSJjb29raWVDb250IiBpZD0iY29va2lkaW90Ij48ZGl2IGNsYXNzPSJtb3JlSW5mb0NvbnQiPlRhIHNwbGV0bmEgc3RyYW4gdXBvcmFibGphIHBpxaFrb3RrZSB6IG5hbWVub20sIGRhIHZhbSBwb251ZGltbyBuYWpib2xqxaFvIG1vxb5ubyB1cG9yYWJuacWha28gaXprdcWhbmpvIG5hIG5hxaFpaCBzcGxldG5paCBzdHJhbmVoLiA8YSBocmVmPSIvY2xhbmVrL1Bpc2tvdGtpL2NpZC8yODAiPlZlxI08L2E+PC9kaXY+PGEgY2xhc3M9ImFncmVlTGluayIgaWQ9ImNpX2FncmVlIiBvbmNsaWNrPSJDb29raWVJZGlvdC5vbkFncmVlTGlua0NsaWNrKHRoaXMsIHRydWUpOyI+U3RyaW5qYW0gc2U8L2E+PGEgY2xhc3M9ImRpc2FncmVlTGluayIgaWQ9ImNpX25vdGFncmVlIiBvbmNsaWNrPSJDb29raWVJZGlvdC5vbkFncmVlTGlua0NsaWNrKHRoaXMsIGZhbHNlKTsiPk5lIHN0cmluamFtIHNlPC9hPjxkaXYgY2xhc3M9ImxtIiBpZD0iY29va0lkaW90TG0iIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij48L2Rpdj48L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KdmFyIENvb2tpZUlkaW90ID0gQ29va2llSWRpb3R8fHt9OwooZnVuY3Rpb24oKSB7CglDb29raWVJZGlvdC5vbkFncmVlTGlua0NsaWNrID0gZnVuY3Rpb24oc2VuZGVyLCBhZ3JlZSkgewoJCXZhciByZXF1ZXN0RGF0YSA9IHt9OwoJCXJlcXVlc3REYXRhWydtJ10gPSAndGEnOwoKCQlpZihhZ3JlZSA9PT0gdHJ1ZSkgewoJCQl2YXIgdHJhY2tDaGVjayA9IGpRdWVyeShzZW5kZXIpLmNsb3Nlc3QoJyNjb29raWRpb3QnKS5maW5kKCcjdHJhY2tDaGVjaycpOwoJCQlpZih0cmFja0NoZWNrLmxlbmd0aCA9PSAwKSB7CgkJCQlyZXF1ZXN0RGF0YVsnYWcnXSA9IGFncmVlPT09dHJ1ZT8nMSc6JzAnOwoJCQl9IGVsc2UgewoJCQkJcmVxdWVzdERhdGFbJ2FnJ10gPSB0cmFja0NoZWNrLmdldCgwKS5jaGVja2VkPT09dHJ1ZT8nMSc6JzAnOwoJCQl9CgkJfSBlbHNlIHsKCQkJcmVxdWVzdERhdGFbJ2FnJ10gPSBhZ3JlZT09PXRydWU/JzEnOicwJzsKCQl9CgkJCgkJalF1ZXJ5LmFqYXgoewoJCQl1cmw6ICcvYWpheC9jb29raWVpZGlvdCcsCgkJCWRhdGE6IChyZXF1ZXN0RGF0YSksCgkJCWRhdGFUeXBlOiAneG1sJywKCQkJX2Nvb2tpZU9uU3VjOiByZXF1ZXN0RGF0YVsnYWcnXT09JzEnLAoJCQlzdWNjZXNzOiBmdW5jdGlvbih4bWwpIHsKCQkJCWlmKGpRdWVyeSh4bWwpLmZpbmQoJ3N0YXR1cycpLnRleHQoKSA9PSAnMScgJiYgISF0aGlzLl9jb29raWVPblN1YykgewoJCQkJCXZhciBuYW1lID0gJ2NjaWRpb3QnLCB2YWx1ZT0nMSc7CgkJCQkJdmFyIGV4cGlyZXMgPSAiIjsKCQkJICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CgkJCSAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgKDM2NSoyNCo2MCo2MCoxMDAwKSk7IC8vMSB5ZWFyCgkJCSAgICAgICAgZXhwaXJlcyA9ICI7IGV4cGlyZXM9IiArIGRhdGUudG9VVENTdHJpbmcoKTsKCQkJCSAgICBkb2N1bWVudC5jb29raWUgPSBuYW1lICsgIj0iICsgKHZhbHVlIHx8ICIiKSAgKyBleHBpcmVzICsgIjsgcGF0aD0vIjsKCQkJCX0KCQkJfQoJCX0pOwoKCQlqUXVlcnkoc2VuZGVyKS5jbG9zZXN0KCcjY29va2lkaW90Jykuc2xpZGVVcCgpOwkJCgl9OwoKCUNvb2tpZUlkaW90Lm9uTGVhcm5Nb3JlTGlua0NsaWNrID0gZnVuY3Rpb24oc2VuZGVyKSB7CgkJdmFyIHJlcXVlc3REYXRhID0ge307CgkJcmVxdWVzdERhdGFbJ20nXSA9ICdsbSc7CgkJCgkJalF1ZXJ5LmFqYXgoewoJCQlzbmQ6IHNlbmRlciwKCQkJdXJsOiAnL2FqYXgvY29va2llaWRpb3QnLAoJCQlkYXRhOiAocmVxdWVzdERhdGEpLAoJCQlkYXRhVHlwZTogJ3htbCcsCgkJCWVycm9yOiBmdW5jdGlvbigpe19vbkxlYXJuTW9yZUVycm9yKHRoaXMuc25kLCBudWxsKTt9LAoJCQlzdWNjZXNzOiBmdW5jdGlvbih4bWwpIHsKCQkJCWlmKGpRdWVyeSh4bWwpLmZpbmQoJ3N0YXR1cycpLnRleHQoKSA9PSAnMScpIHsKCQkJCQl2YXIgY2lkaW90ID0galF1ZXJ5KHRoaXMuc25kKS5jbG9zZXN0KCcjY29va2lkaW90Jyk7CgkJCQkJY2lkaW90LmZpbmQoJyNjaV9hZ3JlZSwjY2lfbm90YWdyZWUnKS5yZW1vdmUoKTsKCQkJCQljaWRpb3QuZmluZCgnI2Nvb2tJZGlvdExtJykuaHRtbChqUXVlcnkoeG1sKS5maW5kKCdsbWh0bWwnKS50ZXh0KCkpLnNob3coKTsKCQkJCQlqUXVlcnkodGhpcy5zbmQpLnJlbW92ZSgpOwoJCQkJfSBlbHNlIHsKCQkJCQlfb25MZWFybk1vcmVFcnJvcih0aGlzLnNuZCwgalF1ZXJ5KHhtbCkuZmluZCgnbG1odG1sJykudGV4dCgpKTsKCQkJCX0KCQkJfQoJCX0pOwoJfTsKCgl2YXIgX29uTGVhcm5Nb3JlRXJyb3IgPSBmdW5jdGlvbihzZW5kZXIsIG1zZykgewoJCXZhciBsbURpdiA9IGpRdWVyeShzZW5kZXIpLmNsb3Nlc3QoJyNjb29raWRpb3QnKS5maW5kKCcjY29va0lkaW90TG0nKTsKCQlpZihtc2cgPT0gbnVsbCkgewoJCQlsbURpdi5odG1sKCc8ZGl2IGNsYXNzPSJmb3JtZXJyb3IiPicrVXRmOC5aaCsnYWwgamUgcHJpJytVdGY4LnNoKydsbyBkbyBuYXBha2UgcHJpIHByaWRvYml2YW5qdSBwb2RhdGtvdi48L2Rpdj4nKTsKCQl9IGVsc2UgewoJCQlsbURpdi5odG1sKG1zZyk7CgkJfQoJCWxtRGl2LnNob3coKTsKCX07Cn0pKCk7Cjwvc2NyaXB0PgkJCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KPCEtLQpqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewoJalF1ZXJ5KGRvY3VtZW50KS5jbGljayhmdW5jdGlvbigpIHtDb21tb24uc2hvd0dpdmVuRGl2QW5kQ2xvc2VPdGhlcnMobnVsbCk7fSk7Cn0pOwovLy0tPgo8L3NjcmlwdD4KCgoKPC9ib2R5PjwvaHRtbD4= #