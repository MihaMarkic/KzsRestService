#Root#<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
	<!--[if lt IE 7.]>
	<script defer type="text/javascript" src="/js/pngfix.js"></script>
	<![endif]-->

 	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	
		<meta property="og:title" content="Fantje U13 - 1. SKL">
	
	
	
	
	
		<meta property="og:image" content="http://www.kzs.si/images/project/logo.png">
	

  	








<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="rating" content="General">
<meta name="author" content="Perun Pro">
<meta name="copyright" content="">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<meta name="Language" content="slovenian">
<meta http-equiv="content-Language" content="sl-SI">



<meta name="description" content="">

<meta name="keywords" content="">







    <link rel="shortcut icon" href="/images/favicon.png">	
    <title>KZS | Fantje U13 - 1. SKL</title>
    
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    
    <script async="" src="//www.google-analytics.com/analytics.js"></script><script type="text/javascript" src="/js/jquery-3.2.1.min.js"></script>
	<script type="text/javascript" src="/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/js/jquery.ui/jquery-ui-1.12.1.custom.min.js"></script>
    <script type="text/javascript" src="/js/fancybox/jquery.fancybox.pack.js"></script>
    
    <script type="text/javascript" src="/js/pp-common.js"></script>
    <script type="text/javascript" src="/js/pp-objects.js"></script>
    <script type="text/javascript" src="/js/linkManager.js"></script>
    <script type="text/javascript" src="/js/utf8.js"></script>
    <script type="text/javascript" src="/js/jsp/topnavigation.js"></script>
    <script type="text/javascript" src="/js/lang/ppt_sl.js"></script>
	
	<script type="text/javascript" src="/js/widgets/api.js"></script>
	<script type="text/javascript" src="/js/widgets/new_script.js"></script>
	
	<link rel="stylesheet" href="/css/jquery.ui/jquery-ui-1.12.1.custom.min.css">
	<link rel="stylesheet" href="/css/jquery.ui/jquery-ui-1.12.1.theme.min.css">
    <link rel="stylesheet" href="/css/jquery.fancybox.css">
    <link rel="stylesheet" href="/css/jquery.fancybox-buttons.css">
    <link rel="stylesheet" href="/css/jquery.fancybox-thumbs.css">
    
    
	
	<link rel="stylesheet" href="/css/cookie.css">
    <link rel="stylesheet" href="/css/ie10-viewport-bug-workaround.css">
    <link rel="stylesheet" href="/css/kzs.css">
    <link rel="stylesheet" href="/css/kzs-cms.css">
    <link rel="stylesheet" href="/css/style.css">
    
	<link rel="stylesheet" href="/css/widgets_style_css_main.css" type="text/css" media="all">

    <link href="https://fonts.googleapis.com/css?family=Noto+Sans&amp;subset=latin-ext" rel="stylesheet">
    
    <link rel="canonical" href="http://www.kzs.si/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U13/cid/102">   
    



<script type="text/javascript">

(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	ga('create', 'UA-23907246-1', 'auto');
	ga('send', 'pageview');
</script>
 
<link rel="stylesheet" type="text/css" media="all" href="https://widgets.baskethotel.com/css.php?api=39f56437f972dc4ca91d2c997f874dcfc232a688&amp;index=0&amp;v=144"></head>	



<body class="news-detail-page">

<script type="text/javascript">
<!--
var CLOSE_ON_CLICK = null;
var CALENDAR_CLOSE_ON_CLICK = null;
var CALENDAR_DATE_FORMAT = '%d.%m.%Y %H:%M';
var URL_LANG = 'sl';

jQuery.ajaxSettings.traditional = true;

//jQuery(function() {jQuery(document).tooltip();});

var SETTINGS = SETTINGS||{};

//-->
</script>


<div id="container" class="article">

	

	



 




<header>
  <div class="container-bootstrap">
    <div class="row">
      <div class="col-sm-2 col-xs-12">
        <a class="navbar-brand" href="/"><img src="/images/project/logo.png"></a>
      </div>
      <div class="col-sm-10 col-xs-12 top-menu">
        <a href="/clanek/Prenosi/cid/142" style="margin-left:0;"><i class="kzs-camera"></i> <span>Prenosi</span></a>
        
        <a style="color:#939394; cursor: default;"><i class="kzs-nkbm"></i> <span>Košarkarska banka</span></a>
        <a href="/clanek/Trgovina/cid/141"><i class="kzs-shop"></i> <span>Trgovina</span></a>
        <a href="/clanek/Vstopnice/cid/151"><i class="kzs-ticket"></i> <span>Vstopnice</span></a>
        <a href="/izbericlanstvo"><i class="kzs-ball"></i> <span>Navijači#mojtim</span></a>
        
			<a href="/prijava"><div class="kzs-profile kzs-profile-unregistered"></div></a>
		
        
      </div>
    </div>
  </div>
  <nav class="navbar navbar-inverse">
    <div class="container-bootstrap">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" onclick="TopNav.toggleMenu(this);">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>
      <div id="navbar" class="collapse navbar-collapse">
      
		<ul class="nav navbar-nav main-menu"><li class="dropdown"><a class="dropdown-toggle">Novice</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanki/Novice/Tekmovanja/id/41">Tekmovanja</a><ul><li><a href="/clanki/Novice/Tekmovanja/Liga-Nova-KBM/id/29">Liga Nova KBM</a></li><li><a href="/clanki/Novice/Tekmovanja/1.-SKL-za-zenske/id/42">1. SKL za ženske</a></li><li><a href="/clanki/Novice/Tekmovanja/Pokal-Spar/id/46">Pokal Spar</a></li><li><a href="/clanki/Novice/Tekmovanja/Pokal-clanic/id/47">Pokal članic</a></li><li><a href="/clanki/Novice/Tekmovanja/2.-SKL/id/43">2. SKL</a></li><li><a href="/clanki/Novice/Tekmovanja/Mlajse-kategorije/id/50">DP mlajših kategorij</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanki/Novice/Reprezentance/id/30">Reprezentance</a><ul><li><a href="/clanki/Novice/Reprezentance/Clani/id/31">Člani</a></li><li><a href="/clanki/Novice/Reprezentance/Clanice/id/56">Članice</a></li><li><a href="/clanki/Novice/Reprezentance/Fantje-U20/id/51">Fantje U20</a></li><li><a href="/clanki/Novice/Reprezentance/Fantje-U18/id/52">Fantje U18</a></li><li><a href="/clanki/Novice/Reprezentance/Fantje-U16/id/53">Fantje U16</a></li><li><a href="/clanki/Novice/Reprezentance/Dekleta-U20/id/57">Dekleta U20</a></li><li><a href="/clanki/Novice/Reprezentance/Dekleta-U18/id/58">Dekleta U18</a></li><li><a href="/clanki/Novice/Reprezentance/Dekleta-U16/id/59">Dekleta U16</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a>Projekti</a><ul><li><a href="/clanki/Novice/Kosarka-3x3/id/63">Košarka 3x3</a></li><li><a href="/clanki/Novice/Projekti/Tabor-KZS/id/254">Tabor KZS</a></li><li><a href="/clanki/Novice/Projekti/Kosarkarski-Supersolar/id/148">Košarkarski Superšolar</a></li><li><a href="/clanki/Novice/Projekti/U14-Slovenia-Ball/id/234">U14 Slovenia Ball</a></li><li><a href="/clanki/Novice/Projekti/Regijsko-selekcioniranje/id/162">Regijsko selekcioniranje</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanki/Novice/Ostalo/id/64">Ostalo</a></li></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Tekmovanja</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Tekmovanja/Liga-Nova-KBM/cid/66">Liga Nova KBM</a></li><li><a href="/clanek/Tekmovanja/1.-SKL-za-zenske/cid/67">1. SKL za ženske</a></li><li><a href="/clanek/Tekmovanja/2.-SKL/cid/68">2. SKL</a></li><li><a href="/clanek/Tekmovanja/3.-SKL/cid/69">3. SKL</a></li><li><a href="/clanek/Tekmovanja/4.-SKL/cid/70">4. SKL</a></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Tekmovanja/Pokal-Spar/cid/72">Pokal Spar</a></li><li><a href="/clanek/Tekmovanja/Pokal-clanic/cid/73">Pokal Članic</a></li><li><a href="/clanek/Tekmovanja/Superpokal-Slovenije/cid/77">Superpokal Slovenije</a><ul><li><a href="/clanek/Tekmovanja/Razpored-in-rezultati-vseh-tekem/cid/347">Vse tekme</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a>Mlajše kategorije - fantje</a><ul><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U19/cid/99">U19</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U17/cid/100">U17</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U15/cid/101">U15</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U13/cid/102">U13</a></li><li><a href="/clanek/Tekmovanja/Mini-pokal-Spar/cid/74">Mini pokal Spar</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U11/cid/103">U11</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje-in-dekleta-U9/cid/104">U9</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a>Mlajše kategorije - dekleta</a><ul><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Dekleta/Dekleta-U19/cid/105">U19</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Dekleta/Dekleta-U17/cid/106">U17</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Dekleta/Dekleta-U15/cid/107">U15</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Dekleta/Dekleta-U13/cid/108">U13</a></li><li><a href="/clanek/Tekmovanja/Mini-pokal-deklet/cid/75">Mini pokal deklet</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Dekleta/Dekleta-U11/cid/109">U11</a></li><li><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje-in-dekleta-U9/cid/104">U9</a></li></ul></li></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Reprezentance</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Reprezentance/Clani/cid/37">Člani</a></li><li><a href="/clanek/Reprezentance/Clani-B/cid/165">Člani B</a></li><li><a href="/clanek/Reprezentance/Clanice/cid/83">Članice</a></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Reprezentance/Fantje-U20/cid/78">Fantje U20</a></li><li><a href="/clanek/Reprezentance/Fantje-U18/cid/79">Fantje U18</a></li><li><a href="/clanek/Reprezentance/Fantje-U16/cid/80">Fantje U16</a></li><li><a href="/clanek/Reprezentance/Fantje-U14/cid/82">Fantje U14</a></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Reprezentance/Dekleta-U20/cid/84">Dekleta U20</a></li><li><a href="/clanek/Reprezentance/Dekleta-U18/cid/85">Dekleta U18</a></li><li><a href="/clanek/Reprezentance/Dekleta-U16/cid/86">Dekleta U16</a></li><li><a href="/clanek/Reprezentance/Dekleta-U14/cid/88">Dekleta U14</a></li></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Projekti</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6 col-xs-6 event-menu"><div class="row"><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Igriva-kosarka/cid/91"><img src="/binary/showimage/id/6420/rw/200/rh/200/rp/true/rd/true/wm/0/h/727008"><span>Igriva košarka</span></a></div><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Lipko/cid/155"><img src="/binary/showimage/id/6421/rw/200/rh/200/rp/true/rd/true/wm/0/h/ec6bc6"><span>Lipko</span></a></div></div></div><div class="col-md-3 col-sm-6 col-xs-6 event-menu"><div class="row"><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Regijsko-selekcioniranje/cid/93"><img src="/binary/showimage/id/6422/rw/200/rh/200/rp/true/rd/true/wm/0/h/8b3394"><span>Regijsko selekcioniranje</span></a></div><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/KZS-tabor/cid/92"><img src="/binary/showimage/id/6423/rw/200/rh/200/rp/true/rd/true/wm/0/h/7a0e69"><span>Tabori KZS</span></a></div></div></div><div class="col-md-3 col-sm-6 col-xs-6 event-menu"><div class="row"><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Kosarkarski-supersolar/cid/94"><img src="/binary/showimage/id/6424/rw/200/rh/200/rp/true/rd/true/wm/0/h/66b88d"><span>Košarkarski superšolar</span></a></div><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/U14-Slovenia-Ball/cid/95"><img src="/binary/showimage/id/6428/rw/200/rh/200/rp/true/rd/true/wm/0/h/ba783a"><span>U14 Slovenia Ball</span></a></div></div></div><div class="col-md-3 col-sm-6 col-xs-6 event-menu"><div class="row"><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Dan-slovenske-kosarke/cid/96"><img src="/binary/showimage/id/6425/rw/200/rh/200/rp/true/rd/true/wm/0/h/781b90"><span>Dan slovenske košarke</span></a></div><div class="col-xxs-12 col-xs-6 col-sm-6 col-md-6"><a class="menu-img" href="/clanek/Projekti/Pokal-Eurobasket-2017/cid/200"><img src="/binary/showimage/id/6426/rw/200/rh/200/rp/true/rd/true/wm/0/h/251ee0"><span>Pokal Eurobasket 2017</span></a></div></div></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Košarka 3x3</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/3x3/O-3x3/cid/207">O 3x3</a></li><li><a href="/clanek/3x3/Pravila/cid/372">Pravila</a></li><li><a href="/clanek/3x3/Reprezentance/cid/345">Reprezentance</a></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/3x3/Grosbasket-DP/cid/209">Grosbasket DP</a></li><li><a href="https://www.3x3ljubljanachallenger.com/" target="_blank">Ljubljana Challenger</a></li><li><a href="/clanek/3x3/Mednar.-klubska-tekm./cid/360">Mednarodna klubska tekmovanja</a></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/3x3/Lokalci/cid/208">Lokalni turnirji</a></li></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Organizacija</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Organizacija/Vse-o-KZS/cid/125">Vse o KZS</a></li><li><a>Člani in organi</a><ul><li><a href="/clanek/Organizacija/Clani-in-organi/Organi/cid/127">Organi</a></li><li><a href="/clanek/Organizacija/Clani-in-organi/Clani/cid/128">Člani</a></li><li><a href="/clanek/Organizacija/Clani-in-organi/Zdruzenja/cid/129">Združenja</a></li><li><a href="/clanek/Organizacija/Clani-in-organi/Stalne-komisije/cid/143">Stalne komisije</a></li><li><a href="/clanek/Organizacija/Clani-in-organi/Licenciranje/cid/152">Licenciranje</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a>Dokumenti</a><ul><li><a href="/clanek/Organizacija/Dokumenti/Pravilniki/cid/135">Pravilniki</a></li><li><a href="/clanek/Organizacija/Dokumenti/Dokumenti/cid/136">Dokumenti</a></li><li><a href="/clanek/Organizacija/Dokumenti/Obrazci/cid/137">Obrazci</a></li><li><a href="/clanek/Organizacija/Dokumenti/Razpisi/cid/153">Razpisi</a></li><li><a href="/clanek/Organizacija/Dokumenti/Vodenje-statistike/cid/138">Vodenje statistike</a></li><li><a href="/clanek/Organizacija/Dokumenti/Seminarji-za-pomozne-sodnike/cid/410">Seminarji za pomožne sodnike</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Organizacija/Integriteta-in-zascita-igre/cid/400">Integriteta in zaščita igre</a><ul><li><a href="/clanek/Organizacija/Integriteta-in-zascita-igre/Sporocilo-predsednika-KZS/cid/401">Sporočilo predsednika KZS</a></li><li><a href="/clanek/Organizacija/Integriteta-in-zascita-igre/Kodeks-integritete-KZS/cid/402">Kodeks integritete KZS</a></li><li><a href="https://anonimnaprijava.kzs.si/" target="_blank">Anonimna prijava</a></li></ul></li></ul></div><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/Organizacija/Bilteni/cid/132">Bilteni</a></li><li><a href="/clanek/Organizacija/Logotipi/cid/130">Logotipi</a></li><li><a href="/clanek/Organizacija/Povezave/cid/133">Povezave</a></li></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">Anon. prijava</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="https://anonimnaprijava.kzs.si/" target="_blank">Anon. prijava</a></li></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div></div></div></div></li><li class="dropdown"><a class="dropdown-toggle">BizBasket 3x3</a><div class="dropdown-menu"><div class="container-bootstrap"><div class="row"><div class="col-md-3 col-sm-6"><ul><li><a href="/clanek/BizBasket-3x3/cid/411">BizBasket 3x3</a></li></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div><div class="col-md-3 col-sm-6"><ul></ul></div></div></div></div></li></ul>
		
<script type="text/javascript">
jQuery(document).ready(function() {
	jQuery('ul.nav li.dropdown').hover(function() {
		jQuery(this).find('.dropdown-menu').stop(true, true).delay(100).fadeIn(300);
		}, function() {
			jQuery(this).find('.dropdown-menu').stop(true, true).delay(100).fadeOut(300);
		});
});
</script>
        <div class="input-group header-search">
          <form class="navbar-form navbar-left" role="search" action="/iskanje" method="post">
            <button id="search-button" class="btn btn-default" onclick="return TopNav.onSearchOpenClick(this);"><span class="glyphicon glyphicon-search"></span></button>
            <div id="search-form" class="form-group">
              <div class="input-group">
                <input type="text" class="form-control" name="searchQuery" onkeydown="Common.submitClosestFormOnEnter(this, event, 'search');" placeholder="Iskanje klubov">
                <span id="search-icon" class="input-group-addon" onclick="commonSubmitClosestForm(this, 'search')"><span class="glyphicon glyphicon-search"></span></span>
              </div>
            </div>
          </form>
        </div><!-- /input-group -->

        <ul class="nav navbar-nav social-menu">
          <li><a target="_blank" href="https://www.instagram.com/kzs_si/"><i class="kzs-instagram"></i></a></li>
          <li><a target="_blank" href="https://www.youtube.com/user/kzsslobasket"><i class="kzs-video-alt"></i></a></li>
          <li><a target="_blank" href="https://www.facebook.com/koszveza/"><i class="kzs-facebook"></i></a></li>
          <li><a target="_blank" href="https://twitter.com/kzs_si"><i class="kzs-twitter"></i></a></li>
        </ul>

      </div><!--/.nav-collapse -->
    </div>
  </nav>
</header>

<div class="row"><div class="col-sm-12 image"><img src="/binary/showimage/id/2977/wm/0/h/c43250"></div></div><div class="container-fluid"><div class="row"><nav class="navbar navbar-inverse navbar-second" style="margin-top:10px;"><div class=""><div class="navbar-header"><button type="button" class="navbar-toggle collapsed" onclick="TopNav.toggleMenu2(this);"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button></div><div id="navbar-two" class="collapse navbar-collapse"><ul class="nav navbar-nav main-menu" id="menu"><li class="dropdown"><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U13/Fantje-U13---1.-SKL/cid/193#menu" class="dropdown-toggle">Fantje U13 - 1. SKL</a></li><li class="dropdown"><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U13/Fantje-U13---2.-SKL/cid/119#menu" class="dropdown-toggle">Fantje U13 - 2. SKL</a></li><li class="dropdown"><a href="/clanek/Tekmovanja/Mlajse-kategorije/Fantje/Fantje-U13/Fantje-U13---kval.-za-1.-SKL/cid/120#menu" class="dropdown-toggle">Fantje U13 - kval. za 1. SKL</a></li></ul></div></div></nav></div></div>
	
	<div id="main" class=""><!--middle parts starts-->
		<div class="">
			<div class="col-lg-12">

				



		
				








<!-- javascript check -->
<noscript>
    &lt;div class="errormessage"&gt;Za pravilno delovanje morate imeti v brskalniku omogočen JavaScript&lt;/div&gt;
</noscript>
<!-- cookies check -->
<script type="text/javascript">
    jQuery(function() {
        if (!areCookiesEnabled()) {
            addErrorMessage('Za pravilno delovanje morate imeti v brskalniku omogočene piškotke (cookies)');
        }
    });
</script>


<div id="infomessage_template" class="infomessage hidden" onclick="jQuery(this).fadeOut()"></div>
<div id="errormessage_template" class="errormessage hidden" onclick="jQuery(this).fadeOut()"></div>

<script type="text/javascript">
function addInfoMessage(message) {
	var infom = jQuery("#infomessage_template").clone().removeClass("hidden").removeAttr("id").html(message);
	jQuery("#infomessage_template").before(infom);
}
function addErrorMessage(message) {
	var errorm = jQuery("#errormessage_template").clone().removeClass("hidden").removeAttr("id").html(message);
	jQuery("#errormessage_template").before(errorm);
}
    
    function createCookie(name, value, days) {
        var expires;
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toGMTString();
        }
        else expires = "";
        document.cookie = name + "=" + value + expires + "; path=/";
    }

    function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    function eraseCookie(name) {
        createCookie(name, "", -1);
    }

    function areCookiesEnabled() {
        var r = false;
        createCookie("testing", "Hello", 1);
        if (readCookie("testing") != null) {
            r = true;
            eraseCookie("testing");
        }
        return r;
    }        
</script>

	
			
							

<div class=""><div class="row "><div class="col-md-12"><h1>Fantje U13 - 1. SKL</h1></div></div></div><div class=""><div class="row"><div class="col-lg-12 art-content"><div class="container">
	<div id="schedule" mbt_widget="303"><div id="mbt-v2-schedule-long" class="mbt-v2-widget">
	<div class="mbt-v2-header">
					Razpored in rezultati
			</div>
	<div class="mbt-v2-widget-content">
		<div id="33-303-mobile-menu" class="mbt-v2-mobile-menu">
			Razpored
		</div>
		<nav id="33-303-mbt-v2-navigation" class="mbt-v2-navigation">
						<div id="33-303-tab-1" data-name="schedule_and_results" data-type="schedule_only" class="mbt-v2-navigation-tab">
				Razpored
			</div>
			<div id="33-303-tab-2" data-name="schedule_and_results" data-type="results_only" class="mbt-v2-navigation-tab-active" prevclassname="mbt-v2-navigation-tab-active">
				Rezultati
			</div>
		</nav>
		<div class="mbt-v2-divider"></div>
		<div id="33-303-mobile-filters-block" class="mbt-v2-mobile-filters-block">
			Filtri
		</div>
		<div id="33-303-filters-block" class="mbt-v2-filters-block">
                            <select id="33-303-filter-season" class="mbt-v2-select">
											<option value="102563" selected="selected">
							2018-2019
						</option>
											<option value="97935">
							2017-2018
						</option>
											<option value="93963">
							2016-2017
						</option>
											<option value="91049">
							2015-2016
						</option>
											<option value="89571">
							2014-2015
						</option>
											<option value="80391">
							2013-2014
						</option>
											<option value="41993">
							2012-2013
						</option>
											<option value="17193">
							2011-2012
						</option>
									</select>
                        				<select id="33-303-filter-stage" data-filter="stage" data-load="get-stages" class="mbt-v2-select">
					<option value="">
						Vsi deli tekmovanja
					</option>
											<option value="206747">
							1. del
						</option>
                                                            <option value="209453">
	                                1. del-Skupina 1
	                            </option>
                                                                                            <option value="209435">
	                                1. del-Skupina 10
	                            </option>
                                                                                            <option value="209433">
	                                1. del-Skupina 11
	                            </option>
                                                                                            <option value="209431">
	                                1. del-Skupina 12
	                            </option>
                                                                                            <option value="209451">
	                                1. del-Skupina 2
	                            </option>
                                                                                            <option value="209449">
	                                1. del-Skupina 3
	                            </option>
                                                                                            <option value="209447">
	                                1. del-Skupina 4
	                            </option>
                                                                                            <option value="209445">
	                                1. del-Skupina 5
	                            </option>
                                                                                            <option value="209443">
	                                1. del-Skupina 6
	                            </option>
                                                                                            <option value="209441">
	                                1. del-Skupina 7
	                            </option>
                                                                                            <option value="209439">
	                                1. del-Skupina 8
	                            </option>
                                                                                            <option value="209437">
	                                1. del-Skupina 9
	                            </option>
                                                            									</select>
										<select id="33-303-filter-game-day" data-filter="game_day" data-load="get-game-days" class="mbt-v2-select">
					<option value="">
						Kolo
					</option>
											<option value="1">
							1
						</option>
											<option value="2">
							2
						</option>
											<option value="3">
							3
						</option>
											<option value="4">
							4
						</option>
									</select>	
										<select id="33-303-filter-team" data-filter="team" data-load="get-teams" class="mbt-v2-select">
					<option value="">
						Ekipa
					</option>
											<option value="4643213">
							3x3 Piran beli
						</option>
											<option value="163623">
							Ajdovščina A
						</option>
											<option value="163573">
							AKK Branik
						</option>
											<option value="163603">
							Brinox Medvode
						</option>
											<option value="163083">
							Celje
						</option>
											<option value="163803">
							Cerknica
						</option>
											<option value="162983">
							ECE Triglav A
						</option>
											<option value="163163">
							Elektra Šoštanj
						</option>
											<option value="4612421">
							Gorenja vas
						</option>
											<option value="163483">
							Grosuplje A
						</option>
											<option value="163313">
							Helios Suns Vzajemci
						</option>
											<option value="164323">
							Hidria
						</option>
											<option value="4619121">
							i Team
						</option>
											<option value="164493">
							Janče Ljubljana A
						</option>
											<option value="163663">
							Jesenice
						</option>
											<option value="163673">
							Ježica
						</option>
											<option value="163693">
							KOŠ Primorska A
						</option>
											<option value="163373">
							Krka beli
						</option>
											<option value="248343">
							KŠ Sani Bistrica
						</option>
											<option value="4612567">
							KŠ Sani Maribor
						</option>
											<option value="248263">
							Lastovka
						</option>
											<option value="164433">
							Litija
						</option>
											<option value="163703">
							Ljubljana A
						</option>
											<option value="164373">
							Ljutomer
						</option>
											<option value="162993">
							LTH Castings
						</option>
											<option value="162853">
							Mesarija Prunk A
						</option>
											<option value="248303">
							Miki šport Konjice
						</option>
											<option value="2231011">
							Nova Gorica mladi A
						</option>
											<option value="163413">
							Parklji A
						</option>
											<option value="163443">
							Petrol Olimpija A
						</option>
											<option value="163863">
							Pivka
						</option>
											<option value="163723">
							Plama pur - Ilirska Bistrica beli
						</option>
											<option value="163563">
							Postojna
						</option>
											<option value="4619129">
							Prebold 2014
						</option>
											<option value="163133">
							Radenska Creativ Sobota
						</option>
											<option value="163593">
							Rogaška A
						</option>
											<option value="164613">
							Šenčur GGD
						</option>
											<option value="163423">
							Šentjur Tajfun
						</option>
											<option value="163333">
							Slovan A
						</option>
											<option value="2232681">
							Stražišče Kranj
						</option>
											<option value="163773">
							Tera Tolmin
						</option>
											<option value="163753">
							Terme Olimia Podčetrtek
						</option>
											<option value="163263">
							Vojnik Gradbena trgovina G7
						</option>
											<option value="2233101">
							Vrani Vransko
						</option>
											<option value="163233">
							Vrhnika
						</option>
											<option value="163243">
							Zagorje
						</option>
											<option value="163453">
							Zlatorog
						</option>
											<option value="4646275">
							Žogica Sixt Primorska
						</option>
									</select>
						<select id="33-303-filter-month" data-filter="month" data-load="get-months" class="mbt-v2-select">
				<option value="all">
					Mesec
				</option>
									<option value="10">
						oktober
					</option>
									<option value="11">
						november
					</option>
							</select>
				
		</div>
		<div class="mbt-v2-divider"></div>
		<div id="33-303-container">	<table id="mbt-v2-schedule-table" class="mbt-v2-schedule-long-table mbt-v2-table mbt-v2-vertical-responsive">
			
		<tbody>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242213&amp;league_id=undefined&amp;season_id=102563" game_id="4242213" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.542343001541234343" onlyurl="1">13.10.2018 15:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.542343001541234343") === "object") {
                               document.getElementById("a-0.542343001541234343").href = navigateGame(document.getElementById('a-0.542343001541234343').getAttribute('game_id'), document.getElementById('a-0.542343001541234343').getAttribute('season_id'), document.getElementById('a-0.542343001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163703&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163703" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.542530001541234343" onlyurl="1">Ljubljana A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.542530001541234343") === "object") {
                               document.getElementById("a-0.542530001541234343").href = navigateTeam(document.getElementById('a-0.542530001541234343').getAttribute('team_id'), document.getElementById('a-0.542530001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242213&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242213" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.542689001541234343" onlyurl="1"><span class="mbt-v2-strong">82</span>:19</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.542689001541234343") === "object") {
                               document.getElementById("a-0.542689001541234343").href = navigateGame(document.getElementById('a-0.542689001541234343').getAttribute('game_id'), document.getElementById('a-0.542689001541234343').getAttribute('season_id'), document.getElementById('a-0.542689001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163663&amp;league_id=undefined&amp;season_id=102563" team_id="163663" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.542825001541234343" onlyurl="1">Jesenice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.542825001541234343") === "object") {
                               document.getElementById("a-0.542825001541234343").href = navigateTeam(document.getElementById('a-0.542825001541234343').getAttribute('team_id'), document.getElementById('a-0.542825001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=13653" arena_id="13653" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.542942001541234343" onlyurl="1">OŠ Hinko Smrekar</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.542942001541234343") === "object") {
                               document.getElementById("a-0.542942001541234343").href = navigateArena(document.getElementById('a-0.542942001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242211&amp;league_id=undefined&amp;season_id=102563" game_id="4242211" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543210001541234343" onlyurl="1">13.10.2018 14:15</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543210001541234343") === "object") {
                               document.getElementById("a-0.543210001541234343").href = navigateGame(document.getElementById('a-0.543210001541234343').getAttribute('game_id'), document.getElementById('a-0.543210001541234343').getAttribute('season_id'), document.getElementById('a-0.543210001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=2232681&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="2232681" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543354001541234343" onlyurl="1">Stražišče Kranj</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543354001541234343") === "object") {
                               document.getElementById("a-0.543354001541234343").href = navigateTeam(document.getElementById('a-0.543354001541234343').getAttribute('team_id'), document.getElementById('a-0.543354001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242211&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242211" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543482001541234343" onlyurl="1"><span class="mbt-v2-strong">62</span>:37</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543482001541234343") === "object") {
                               document.getElementById("a-0.543482001541234343").href = navigateGame(document.getElementById('a-0.543482001541234343').getAttribute('game_id'), document.getElementById('a-0.543482001541234343').getAttribute('season_id'), document.getElementById('a-0.543482001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163663&amp;league_id=undefined&amp;season_id=102563" team_id="163663" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543603001541234343" onlyurl="1">Jesenice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543603001541234343") === "object") {
                               document.getElementById("a-0.543603001541234343").href = navigateTeam(document.getElementById('a-0.543603001541234343').getAttribute('team_id'), document.getElementById('a-0.543603001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=13653" arena_id="13653" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543717001541234343" onlyurl="1">OŠ Hinko Smrekar</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543717001541234343") === "object") {
                               document.getElementById("a-0.543717001541234343").href = navigateArena(document.getElementById('a-0.543717001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242209&amp;league_id=undefined&amp;season_id=102563" game_id="4242209" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.543928001541234343" onlyurl="1">13.10.2018 13:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.543928001541234343") === "object") {
                               document.getElementById("a-0.543928001541234343").href = navigateGame(document.getElementById('a-0.543928001541234343').getAttribute('game_id'), document.getElementById('a-0.543928001541234343').getAttribute('season_id'), document.getElementById('a-0.543928001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163703&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163703" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544064001541234343" onlyurl="1">Ljubljana A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544064001541234343") === "object") {
                               document.getElementById("a-0.544064001541234343").href = navigateTeam(document.getElementById('a-0.544064001541234343').getAttribute('team_id'), document.getElementById('a-0.544064001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242209&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242209" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544195001541234343" onlyurl="1"><span class="mbt-v2-strong">99</span>:22</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544195001541234343") === "object") {
                               document.getElementById("a-0.544195001541234343").href = navigateGame(document.getElementById('a-0.544195001541234343').getAttribute('game_id'), document.getElementById('a-0.544195001541234343').getAttribute('season_id'), document.getElementById('a-0.544195001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=2232681&amp;league_id=undefined&amp;season_id=102563" team_id="2232681" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544312001541234343" onlyurl="1">Stražišče Kranj</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544312001541234343") === "object") {
                               document.getElementById("a-0.544312001541234343").href = navigateTeam(document.getElementById('a-0.544312001541234343').getAttribute('team_id'), document.getElementById('a-0.544312001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=13653" arena_id="13653" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544420001541234343" onlyurl="1">OŠ Hinko Smrekar</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544420001541234343") === "object") {
                               document.getElementById("a-0.544420001541234343").href = navigateArena(document.getElementById('a-0.544420001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242141&amp;league_id=undefined&amp;season_id=102563" game_id="4242141" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544625001541234343" onlyurl="1">13.10.2018 12:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544625001541234343") === "object") {
                               document.getElementById("a-0.544625001541234343").href = navigateGame(document.getElementById('a-0.544625001541234343').getAttribute('game_id'), document.getElementById('a-0.544625001541234343').getAttribute('season_id'), document.getElementById('a-0.544625001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=248343&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248343" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544761001541234343" onlyurl="1">KŠ Sani Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544761001541234343") === "object") {
                               document.getElementById("a-0.544761001541234343").href = navigateTeam(document.getElementById('a-0.544761001541234343').getAttribute('team_id'), document.getElementById('a-0.544761001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242141&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242141" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.544899001541234343" onlyurl="1">36:<span class="mbt-v2-strong">49</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.544899001541234343") === "object") {
                               document.getElementById("a-0.544899001541234343").href = navigateGame(document.getElementById('a-0.544899001541234343').getAttribute('game_id'), document.getElementById('a-0.544899001541234343').getAttribute('season_id'), document.getElementById('a-0.544899001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=4619129&amp;league_id=undefined&amp;season_id=102563" team_id="4619129" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545021001541234343" onlyurl="1">Prebold 2014</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545021001541234343") === "object") {
                               document.getElementById("a-0.545021001541234343").href = navigateTeam(document.getElementById('a-0.545021001541234343').getAttribute('team_id'), document.getElementById('a-0.545021001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8543" arena_id="8543" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545102001541234343" onlyurl="1">ŠD Slovenska Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545102001541234343") === "object") {
                               document.getElementById("a-0.545102001541234343").href = navigateArena(document.getElementById('a-0.545102001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242069&amp;league_id=undefined&amp;season_id=102563" game_id="4242069" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545251001541234343" onlyurl="1">13.10.2018 12:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545251001541234343") === "object") {
                               document.getElementById("a-0.545251001541234343").href = navigateGame(document.getElementById('a-0.545251001541234343').getAttribute('game_id'), document.getElementById('a-0.545251001541234343').getAttribute('season_id'), document.getElementById('a-0.545251001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=164433&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164433" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545325001541234343" onlyurl="1">Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545325001541234343") === "object") {
                               document.getElementById("a-0.545325001541234343").href = navigateTeam(document.getElementById('a-0.545325001541234343').getAttribute('team_id'), document.getElementById('a-0.545325001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242069&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242069" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545387001541234343" onlyurl="1">15:<span class="mbt-v2-strong">39</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545387001541234343") === "object") {
                               document.getElementById("a-0.545387001541234343").href = navigateGame(document.getElementById('a-0.545387001541234343').getAttribute('game_id'), document.getElementById('a-0.545387001541234343').getAttribute('season_id'), document.getElementById('a-0.545387001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=248303&amp;league_id=undefined&amp;season_id=102563" team_id="248303" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545447001541234343" onlyurl="1">Miki šport Konjice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545447001541234343") === "object") {
                               document.getElementById("a-0.545447001541234343").href = navigateTeam(document.getElementById('a-0.545447001541234343').getAttribute('team_id'), document.getElementById('a-0.545447001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7293" arena_id="7293" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545546001541234343" onlyurl="1">ŠD Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545546001541234343") === "object") {
                               document.getElementById("a-0.545546001541234343").href = navigateArena(document.getElementById('a-0.545546001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242309&amp;league_id=undefined&amp;season_id=102563" game_id="4242309" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545751001541234343" onlyurl="1">13.10.2018 12:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545751001541234343") === "object") {
                               document.getElementById("a-0.545751001541234343").href = navigateGame(document.getElementById('a-0.545751001541234343').getAttribute('game_id'), document.getElementById('a-0.545751001541234343').getAttribute('season_id'), document.getElementById('a-0.545751001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163723&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163723" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.545878001541234343" onlyurl="1">Plama pur - Ilirska Bistrica beli</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.545878001541234343") === "object") {
                               document.getElementById("a-0.545878001541234343").href = navigateTeam(document.getElementById('a-0.545878001541234343').getAttribute('team_id'), document.getElementById('a-0.545878001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242309&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242309" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546004001541234343" onlyurl="1">26:<span class="mbt-v2-strong">54</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546004001541234343") === "object") {
                               document.getElementById("a-0.546004001541234343").href = navigateGame(document.getElementById('a-0.546004001541234343').getAttribute('game_id'), document.getElementById('a-0.546004001541234343').getAttribute('season_id'), document.getElementById('a-0.546004001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163773&amp;league_id=undefined&amp;season_id=102563" team_id="163773" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546125001541234343" onlyurl="1">Tera Tolmin</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546125001541234343") === "object") {
                               document.getElementById("a-0.546125001541234343").href = navigateTeam(document.getElementById('a-0.546125001541234343').getAttribute('team_id'), document.getElementById('a-0.546125001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8613" arena_id="8613" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546238001541234343" onlyurl="1">OŠ Antona Žnideršiča</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546238001541234343") === "object") {
                               document.getElementById("a-0.546238001541234343").href = navigateArena(document.getElementById('a-0.546238001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242093&amp;league_id=undefined&amp;season_id=102563" game_id="4242093" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546450001541234343" onlyurl="1">13.10.2018 11:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546450001541234343") === "object") {
                               document.getElementById("a-0.546450001541234343").href = navigateGame(document.getElementById('a-0.546450001541234343').getAttribute('game_id'), document.getElementById('a-0.546450001541234343').getAttribute('season_id'), document.getElementById('a-0.546450001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163753&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163753" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546586001541234343" onlyurl="1">Terme Olimia Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546586001541234343") === "object") {
                               document.getElementById("a-0.546586001541234343").href = navigateTeam(document.getElementById('a-0.546586001541234343').getAttribute('team_id'), document.getElementById('a-0.546586001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242093&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242093" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546713001541234343" onlyurl="1"><span class="mbt-v2-strong">42</span>:24</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546713001541234343") === "object") {
                               document.getElementById("a-0.546713001541234343").href = navigateGame(document.getElementById('a-0.546713001541234343').getAttribute('game_id'), document.getElementById('a-0.546713001541234343').getAttribute('season_id'), document.getElementById('a-0.546713001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163133&amp;league_id=undefined&amp;season_id=102563" team_id="163133" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546796001541234343" onlyurl="1">Radenska Creativ Sobota</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546796001541234343") === "object") {
                               document.getElementById("a-0.546796001541234343").href = navigateTeam(document.getElementById('a-0.546796001541234343').getAttribute('team_id'), document.getElementById('a-0.546796001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=9003" arena_id="9003" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546850001541234343" onlyurl="1">OŠ Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546850001541234343") === "object") {
                               document.getElementById("a-0.546850001541234343").href = navigateArena(document.getElementById('a-0.546850001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242189&amp;league_id=undefined&amp;season_id=102563" game_id="4242189" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.546986001541234343" onlyurl="1">13.10.2018 11:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.546986001541234343") === "object") {
                               document.getElementById("a-0.546986001541234343").href = navigateGame(document.getElementById('a-0.546986001541234343').getAttribute('game_id'), document.getElementById('a-0.546986001541234343').getAttribute('season_id'), document.getElementById('a-0.546986001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=164493&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164493" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547111001541234343" onlyurl="1">Janče Ljubljana A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547111001541234343") === "object") {
                               document.getElementById("a-0.547111001541234343").href = navigateTeam(document.getElementById('a-0.547111001541234343').getAttribute('team_id'), document.getElementById('a-0.547111001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242189&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242189" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547205001541234343" onlyurl="1">25:<span class="mbt-v2-strong">52</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547205001541234343") === "object") {
                               document.getElementById("a-0.547205001541234343").href = navigateGame(document.getElementById('a-0.547205001541234343').getAttribute('game_id'), document.getElementById('a-0.547205001541234343').getAttribute('season_id'), document.getElementById('a-0.547205001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163483&amp;league_id=undefined&amp;season_id=102563" team_id="163483" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547268001541234343" onlyurl="1">Grosuplje A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547268001541234343") === "object") {
                               document.getElementById("a-0.547268001541234343").href = navigateTeam(document.getElementById('a-0.547268001541234343').getAttribute('team_id'), document.getElementById('a-0.547268001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=110489" arena_id="110489" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547319001541234343" onlyurl="1">OŠ Ledina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547319001541234343") === "object") {
                               document.getElementById("a-0.547319001541234343").href = navigateArena(document.getElementById('a-0.547319001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242237&amp;league_id=undefined&amp;season_id=102563" game_id="4242237" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547423001541234343" onlyurl="1">13.10.2018 11:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547423001541234343") === "object") {
                               document.getElementById("a-0.547423001541234343").href = navigateGame(document.getElementById('a-0.547423001541234343').getAttribute('game_id'), document.getElementById('a-0.547423001541234343').getAttribute('season_id'), document.getElementById('a-0.547423001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612421&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4612421" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547517001541234343" onlyurl="1">Gorenja vas</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547517001541234343") === "object") {
                               document.getElementById("a-0.547517001541234343").href = navigateTeam(document.getElementById('a-0.547517001541234343').getAttribute('team_id'), document.getElementById('a-0.547517001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242237&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242237" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547632001541234343" onlyurl="1">33:<span class="mbt-v2-strong">65</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547632001541234343") === "object") {
                               document.getElementById("a-0.547632001541234343").href = navigateGame(document.getElementById('a-0.547632001541234343').getAttribute('game_id'), document.getElementById('a-0.547632001541234343').getAttribute('season_id'), document.getElementById('a-0.547632001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=162983&amp;league_id=undefined&amp;season_id=102563" team_id="162983" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547746001541234343" onlyurl="1">ECE Triglav A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547746001541234343") === "object") {
                               document.getElementById("a-0.547746001541234343").href = navigateTeam(document.getElementById('a-0.547746001541234343').getAttribute('team_id'), document.getElementById('a-0.547746001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7243" arena_id="7243" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.547847001541234343" onlyurl="1">ŠD OŠ Poljane</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.547847001541234343") === "object") {
                               document.getElementById("a-0.547847001541234343").href = navigateArena(document.getElementById('a-0.547847001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242261&amp;league_id=undefined&amp;season_id=102563" game_id="4242261" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548053001541234343" onlyurl="1">13.10.2018 11:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548053001541234343") === "object") {
                               document.getElementById("a-0.548053001541234343").href = navigateGame(document.getElementById('a-0.548053001541234343').getAttribute('game_id'), document.getElementById('a-0.548053001541234343').getAttribute('season_id'), document.getElementById('a-0.548053001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163603&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163603" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548187001541234343" onlyurl="1">Brinox Medvode</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548187001541234343") === "object") {
                               document.getElementById("a-0.548187001541234343").href = navigateTeam(document.getElementById('a-0.548187001541234343').getAttribute('team_id'), document.getElementById('a-0.548187001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242261&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242261" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548313001541234343" onlyurl="1"><span class="mbt-v2-strong">43</span>:17</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548313001541234343") === "object") {
                               document.getElementById("a-0.548313001541234343").href = navigateGame(document.getElementById('a-0.548313001541234343').getAttribute('game_id'), document.getElementById('a-0.548313001541234343').getAttribute('season_id'), document.getElementById('a-0.548313001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=162993&amp;league_id=undefined&amp;season_id=102563" team_id="162993" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548428001541234343" onlyurl="1">LTH Castings</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548428001541234343") === "object") {
                               document.getElementById("a-0.548428001541234343").href = navigateTeam(document.getElementById('a-0.548428001541234343').getAttribute('team_id'), document.getElementById('a-0.548428001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7403" arena_id="7403" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548532001541234343" onlyurl="1">ŠD Medvode</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548532001541234343") === "object") {
                               document.getElementById("a-0.548532001541234343").href = navigateArena(document.getElementById('a-0.548532001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242333&amp;league_id=undefined&amp;season_id=102563" game_id="4242333" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548728001541234343" onlyurl="1">13.10.2018 11:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548728001541234343") === "object") {
                               document.getElementById("a-0.548728001541234343").href = navigateGame(document.getElementById('a-0.548728001541234343').getAttribute('game_id'), document.getElementById('a-0.548728001541234343').getAttribute('season_id'), document.getElementById('a-0.548728001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163693&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163693" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548852001541234343" onlyurl="1">KOŠ Primorska A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548852001541234343") === "object") {
                               document.getElementById("a-0.548852001541234343").href = navigateTeam(document.getElementById('a-0.548852001541234343').getAttribute('team_id'), document.getElementById('a-0.548852001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242333&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242333" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.548969001541234343" onlyurl="1"><span class="mbt-v2-strong">36</span>:19</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.548969001541234343") === "object") {
                               document.getElementById("a-0.548969001541234343").href = navigateGame(document.getElementById('a-0.548969001541234343').getAttribute('game_id'), document.getElementById('a-0.548969001541234343').getAttribute('season_id'), document.getElementById('a-0.548969001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163563&amp;league_id=undefined&amp;season_id=102563" team_id="163563" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549086001541234343" onlyurl="1">Postojna</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549086001541234343") === "object") {
                               document.getElementById("a-0.549086001541234343").href = navigateTeam(document.getElementById('a-0.549086001541234343').getAttribute('team_id'), document.getElementById('a-0.549086001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8603" arena_id="8603" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549173001541234343" onlyurl="1">ŠD STŠ Koper</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549173001541234343") === "object") {
                               document.getElementById("a-0.549173001541234343").href = navigateArena(document.getElementById('a-0.549173001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242045&amp;league_id=undefined&amp;season_id=102563" game_id="4242045" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549325001541234343" onlyurl="1">13.10.2018 11:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549325001541234343") === "object") {
                               document.getElementById("a-0.549325001541234343").href = navigateGame(document.getElementById('a-0.549325001541234343').getAttribute('game_id'), document.getElementById('a-0.549325001541234343').getAttribute('season_id'), document.getElementById('a-0.549325001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163593&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163593" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549406001541234343" onlyurl="1">Rogaška A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549406001541234343") === "object") {
                               document.getElementById("a-0.549406001541234343").href = navigateTeam(document.getElementById('a-0.549406001541234343').getAttribute('team_id'), document.getElementById('a-0.549406001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242045&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242045" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549492001541234343" onlyurl="1">32:32</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549492001541234343") === "object") {
                               document.getElementById("a-0.549492001541234343").href = navigateGame(document.getElementById('a-0.549492001541234343').getAttribute('game_id'), document.getElementById('a-0.549492001541234343').getAttribute('season_id'), document.getElementById('a-0.549492001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612567&amp;league_id=undefined&amp;season_id=102563" team_id="4612567" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549574001541234343" onlyurl="1">KŠ Sani Maribor</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549574001541234343") === "object") {
                               document.getElementById("a-0.549574001541234343").href = navigateTeam(document.getElementById('a-0.549574001541234343').getAttribute('team_id'), document.getElementById('a-0.549574001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8783" arena_id="8783" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549627001541234343" onlyurl="1">ŠD Rogaška Slatina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549627001541234343") === "object") {
                               document.getElementById("a-0.549627001541234343").href = navigateArena(document.getElementById('a-0.549627001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242285&amp;league_id=undefined&amp;season_id=102563" game_id="4242285" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549795001541234343" onlyurl="1">13.10.2018 11:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549795001541234343") === "object") {
                               document.getElementById("a-0.549795001541234343").href = navigateGame(document.getElementById('a-0.549795001541234343').getAttribute('game_id'), document.getElementById('a-0.549795001541234343').getAttribute('season_id'), document.getElementById('a-0.549795001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163803&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163803" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549890001541234343" onlyurl="1">Cerknica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549890001541234343") === "object") {
                               document.getElementById("a-0.549890001541234343").href = navigateTeam(document.getElementById('a-0.549890001541234343').getAttribute('team_id'), document.getElementById('a-0.549890001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242285&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242285" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.549953001541234343" onlyurl="1"><span class="mbt-v2-strong">79</span>:23</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.549953001541234343") === "object") {
                               document.getElementById("a-0.549953001541234343").href = navigateGame(document.getElementById('a-0.549953001541234343').getAttribute('game_id'), document.getElementById('a-0.549953001541234343').getAttribute('season_id'), document.getElementById('a-0.549953001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=2231011&amp;league_id=undefined&amp;season_id=102563" team_id="2231011" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550016001541234343" onlyurl="1">Nova Gorica mladi A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550016001541234343") === "object") {
                               document.getElementById("a-0.550016001541234343").href = navigateTeam(document.getElementById('a-0.550016001541234343').getAttribute('team_id'), document.getElementById('a-0.550016001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7383" arena_id="7383" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550115001541234343" onlyurl="1">ŠD Cerknica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550115001541234343") === "object") {
                               document.getElementById("a-0.550115001541234343").href = navigateArena(document.getElementById('a-0.550115001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242139&amp;league_id=undefined&amp;season_id=102563" game_id="4242139" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550310001541234343" onlyurl="1">13.10.2018 11:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550310001541234343") === "object") {
                               document.getElementById("a-0.550310001541234343").href = navigateGame(document.getElementById('a-0.550310001541234343').getAttribute('game_id'), document.getElementById('a-0.550310001541234343').getAttribute('season_id'), document.getElementById('a-0.550310001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=2233101&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="2233101" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550442001541234343" onlyurl="1">Vrani Vransko</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550442001541234343") === "object") {
                               document.getElementById("a-0.550442001541234343").href = navigateTeam(document.getElementById('a-0.550442001541234343').getAttribute('team_id'), document.getElementById('a-0.550442001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242139&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242139" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550558001541234343" onlyurl="1"><span class="mbt-v2-strong">33</span>:32</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550558001541234343") === "object") {
                               document.getElementById("a-0.550558001541234343").href = navigateGame(document.getElementById('a-0.550558001541234343').getAttribute('game_id'), document.getElementById('a-0.550558001541234343').getAttribute('season_id'), document.getElementById('a-0.550558001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=4619129&amp;league_id=undefined&amp;season_id=102563" team_id="4619129" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550672001541234343" onlyurl="1">Prebold 2014</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550672001541234343") === "object") {
                               document.getElementById("a-0.550672001541234343").href = navigateTeam(document.getElementById('a-0.550672001541234343').getAttribute('team_id'), document.getElementById('a-0.550672001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8543" arena_id="8543" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550779001541234343" onlyurl="1">ŠD Slovenska Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550779001541234343") === "object") {
                               document.getElementById("a-0.550779001541234343").href = navigateArena(document.getElementById('a-0.550779001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242067&amp;league_id=undefined&amp;season_id=102563" game_id="4242067" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.550983001541234343" onlyurl="1">13.10.2018 10:45</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.550983001541234343") === "object") {
                               document.getElementById("a-0.550983001541234343").href = navigateGame(document.getElementById('a-0.550983001541234343').getAttribute('game_id'), document.getElementById('a-0.550983001541234343').getAttribute('season_id'), document.getElementById('a-0.550983001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163453&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163453" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551174001541234343" onlyurl="1">Zlatorog</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551174001541234343") === "object") {
                               document.getElementById("a-0.551174001541234343").href = navigateTeam(document.getElementById('a-0.551174001541234343').getAttribute('team_id'), document.getElementById('a-0.551174001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242067&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242067" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551310001541234343" onlyurl="1">38:<span class="mbt-v2-strong">47</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551310001541234343") === "object") {
                               document.getElementById("a-0.551310001541234343").href = navigateGame(document.getElementById('a-0.551310001541234343').getAttribute('game_id'), document.getElementById('a-0.551310001541234343').getAttribute('season_id'), document.getElementById('a-0.551310001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=248303&amp;league_id=undefined&amp;season_id=102563" team_id="248303" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551434001541234343" onlyurl="1">Miki šport Konjice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551434001541234343") === "object") {
                               document.getElementById("a-0.551434001541234343").href = navigateTeam(document.getElementById('a-0.551434001541234343').getAttribute('team_id'), document.getElementById('a-0.551434001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7293" arena_id="7293" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551544001541234343" onlyurl="1">ŠD Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551544001541234343") === "object") {
                               document.getElementById("a-0.551544001541234343").href = navigateArena(document.getElementById('a-0.551544001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242307&amp;league_id=undefined&amp;season_id=102563" game_id="4242307" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551708001541234343" onlyurl="1">13.10.2018 10:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551708001541234343") === "object") {
                               document.getElementById("a-0.551708001541234343").href = navigateGame(document.getElementById('a-0.551708001541234343').getAttribute('game_id'), document.getElementById('a-0.551708001541234343').getAttribute('season_id'), document.getElementById('a-0.551708001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163623&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163623" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551782001541234343" onlyurl="1">Ajdovščina A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551782001541234343") === "object") {
                               document.getElementById("a-0.551782001541234343").href = navigateTeam(document.getElementById('a-0.551782001541234343').getAttribute('team_id'), document.getElementById('a-0.551782001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242307&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242307" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551859001541234343" onlyurl="1"><span class="mbt-v2-strong">39</span>:23</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551859001541234343") === "object") {
                               document.getElementById("a-0.551859001541234343").href = navigateGame(document.getElementById('a-0.551859001541234343').getAttribute('game_id'), document.getElementById('a-0.551859001541234343').getAttribute('season_id'), document.getElementById('a-0.551859001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163773&amp;league_id=undefined&amp;season_id=102563" team_id="163773" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.551939001541234343" onlyurl="1">Tera Tolmin</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.551939001541234343") === "object") {
                               document.getElementById("a-0.551939001541234343").href = navigateTeam(document.getElementById('a-0.551939001541234343').getAttribute('team_id'), document.getElementById('a-0.551939001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8613" arena_id="8613" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552029001541234343" onlyurl="1">OŠ Antona Žnideršiča</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552029001541234343") === "object") {
                               document.getElementById("a-0.552029001541234343").href = navigateArena(document.getElementById('a-0.552029001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242331&amp;league_id=undefined&amp;season_id=102563" game_id="4242331" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552230001541234343" onlyurl="1">13.10.2018 10:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552230001541234343") === "object") {
                               document.getElementById("a-0.552230001541234343").href = navigateGame(document.getElementById('a-0.552230001541234343').getAttribute('game_id'), document.getElementById('a-0.552230001541234343').getAttribute('season_id'), document.getElementById('a-0.552230001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=162853&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="162853" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552362001541234343" onlyurl="1">Mesarija Prunk A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552362001541234343") === "object") {
                               document.getElementById("a-0.552362001541234343").href = navigateTeam(document.getElementById('a-0.552362001541234343').getAttribute('team_id'), document.getElementById('a-0.552362001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242331&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242331" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552489001541234343" onlyurl="1">39:<span class="mbt-v2-strong">45</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552489001541234343") === "object") {
                               document.getElementById("a-0.552489001541234343").href = navigateGame(document.getElementById('a-0.552489001541234343').getAttribute('game_id'), document.getElementById('a-0.552489001541234343').getAttribute('season_id'), document.getElementById('a-0.552489001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163563&amp;league_id=undefined&amp;season_id=102563" team_id="163563" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552608001541234343" onlyurl="1">Postojna</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552608001541234343") === "object") {
                               document.getElementById("a-0.552608001541234343").href = navigateTeam(document.getElementById('a-0.552608001541234343').getAttribute('team_id'), document.getElementById('a-0.552608001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8603" arena_id="8603" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552713001541234343" onlyurl="1">ŠD STŠ Koper</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552713001541234343") === "object") {
                               document.getElementById("a-0.552713001541234343").href = navigateArena(document.getElementById('a-0.552713001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242091&amp;league_id=undefined&amp;season_id=102563" game_id="4242091" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.552906001541234343" onlyurl="1">13.10.2018 10:15</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.552906001541234343") === "object") {
                               document.getElementById("a-0.552906001541234343").href = navigateGame(document.getElementById('a-0.552906001541234343').getAttribute('game_id'), document.getElementById('a-0.552906001541234343').getAttribute('season_id'), document.getElementById('a-0.552906001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163423&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163423" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553010001541234343" onlyurl="1">Šentjur Tajfun</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553010001541234343") === "object") {
                               document.getElementById("a-0.553010001541234343").href = navigateTeam(document.getElementById('a-0.553010001541234343').getAttribute('team_id'), document.getElementById('a-0.553010001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242091&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242091" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553122001541234343" onlyurl="1">34:<span class="mbt-v2-strong">42</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553122001541234343") === "object") {
                               document.getElementById("a-0.553122001541234343").href = navigateGame(document.getElementById('a-0.553122001541234343').getAttribute('game_id'), document.getElementById('a-0.553122001541234343').getAttribute('season_id'), document.getElementById('a-0.553122001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163133&amp;league_id=undefined&amp;season_id=102563" team_id="163133" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553235001541234343" onlyurl="1">Radenska Creativ Sobota</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553235001541234343") === "object") {
                               document.getElementById("a-0.553235001541234343").href = navigateTeam(document.getElementById('a-0.553235001541234343').getAttribute('team_id'), document.getElementById('a-0.553235001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=9003" arena_id="9003" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553333001541234343" onlyurl="1">OŠ Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553333001541234343") === "object") {
                               document.getElementById("a-0.553333001541234343").href = navigateArena(document.getElementById('a-0.553333001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242187&amp;league_id=undefined&amp;season_id=102563" game_id="4242187" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553531001541234343" onlyurl="1">13.10.2018 10:15</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553531001541234343") === "object") {
                               document.getElementById("a-0.553531001541234343").href = navigateGame(document.getElementById('a-0.553531001541234343').getAttribute('game_id'), document.getElementById('a-0.553531001541234343').getAttribute('season_id'), document.getElementById('a-0.553531001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=248263&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248263" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553661001541234343" onlyurl="1">Lastovka</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553661001541234343") === "object") {
                               document.getElementById("a-0.553661001541234343").href = navigateTeam(document.getElementById('a-0.553661001541234343').getAttribute('team_id'), document.getElementById('a-0.553661001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242187&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242187" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553780001541234343" onlyurl="1">15:<span class="mbt-v2-strong">63</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553780001541234343") === "object") {
                               document.getElementById("a-0.553780001541234343").href = navigateGame(document.getElementById('a-0.553780001541234343').getAttribute('game_id'), document.getElementById('a-0.553780001541234343').getAttribute('season_id'), document.getElementById('a-0.553780001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163483&amp;league_id=undefined&amp;season_id=102563" team_id="163483" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.553895001541234343" onlyurl="1">Grosuplje A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.553895001541234343") === "object") {
                               document.getElementById("a-0.553895001541234343").href = navigateTeam(document.getElementById('a-0.553895001541234343').getAttribute('team_id'), document.getElementById('a-0.553895001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=110489" arena_id="110489" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554001001541234343" onlyurl="1">OŠ Ledina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554001001541234343") === "object") {
                               document.getElementById("a-0.554001001541234343").href = navigateArena(document.getElementById('a-0.554001001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242235&amp;league_id=undefined&amp;season_id=102563" game_id="4242235" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554216001541234343" onlyurl="1">13.10.2018 10:15</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554216001541234343") === "object") {
                               document.getElementById("a-0.554216001541234343").href = navigateGame(document.getElementById('a-0.554216001541234343').getAttribute('game_id'), document.getElementById('a-0.554216001541234343').getAttribute('season_id'), document.getElementById('a-0.554216001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163413&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163413" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554350001541234343" onlyurl="1">Parklji A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554350001541234343") === "object") {
                               document.getElementById("a-0.554350001541234343").href = navigateTeam(document.getElementById('a-0.554350001541234343').getAttribute('team_id'), document.getElementById('a-0.554350001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242235&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242235" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554475001541234343" onlyurl="1">39:<span class="mbt-v2-strong">93</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554475001541234343") === "object") {
                               document.getElementById("a-0.554475001541234343").href = navigateGame(document.getElementById('a-0.554475001541234343').getAttribute('game_id'), document.getElementById('a-0.554475001541234343').getAttribute('season_id'), document.getElementById('a-0.554475001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=162983&amp;league_id=undefined&amp;season_id=102563" team_id="162983" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554591001541234343" onlyurl="1">ECE Triglav A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554591001541234343") === "object") {
                               document.getElementById("a-0.554591001541234343").href = navigateTeam(document.getElementById('a-0.554591001541234343').getAttribute('team_id'), document.getElementById('a-0.554591001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7243" arena_id="7243" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554697001541234343" onlyurl="1">ŠD OŠ Poljane</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554697001541234343") === "object") {
                               document.getElementById("a-0.554697001541234343").href = navigateArena(document.getElementById('a-0.554697001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242259&amp;league_id=undefined&amp;season_id=102563" game_id="4242259" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.554894001541234343" onlyurl="1">13.10.2018 10:15</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.554894001541234343") === "object") {
                               document.getElementById("a-0.554894001541234343").href = navigateGame(document.getElementById('a-0.554894001541234343').getAttribute('game_id'), document.getElementById('a-0.554894001541234343').getAttribute('season_id'), document.getElementById('a-0.554894001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163373&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163373" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555026001541234343" onlyurl="1">Krka beli</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555026001541234343") === "object") {
                               document.getElementById("a-0.555026001541234343").href = navigateTeam(document.getElementById('a-0.555026001541234343').getAttribute('team_id'), document.getElementById('a-0.555026001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242259&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242259" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555216001541234343" onlyurl="1"><span class="mbt-v2-strong">39</span>:17</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555216001541234343") === "object") {
                               document.getElementById("a-0.555216001541234343").href = navigateGame(document.getElementById('a-0.555216001541234343').getAttribute('game_id'), document.getElementById('a-0.555216001541234343').getAttribute('season_id'), document.getElementById('a-0.555216001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=162993&amp;league_id=undefined&amp;season_id=102563" team_id="162993" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555340001541234343" onlyurl="1">LTH Castings</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555340001541234343") === "object") {
                               document.getElementById("a-0.555340001541234343").href = navigateTeam(document.getElementById('a-0.555340001541234343').getAttribute('team_id'), document.getElementById('a-0.555340001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7403" arena_id="7403" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555445001541234343" onlyurl="1">ŠD Medvode</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555445001541234343") === "object") {
                               document.getElementById("a-0.555445001541234343").href = navigateArena(document.getElementById('a-0.555445001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242043&amp;league_id=undefined&amp;season_id=102563" game_id="4242043" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555646001541234343" onlyurl="1">13.10.2018 10:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555646001541234343") === "object") {
                               document.getElementById("a-0.555646001541234343").href = navigateGame(document.getElementById('a-0.555646001541234343').getAttribute('game_id'), document.getElementById('a-0.555646001541234343').getAttribute('season_id'), document.getElementById('a-0.555646001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163573&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163573" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555779001541234343" onlyurl="1">AKK Branik</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555779001541234343") === "object") {
                               document.getElementById("a-0.555779001541234343").href = navigateTeam(document.getElementById('a-0.555779001541234343').getAttribute('team_id'), document.getElementById('a-0.555779001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242043&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242043" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.555900001541234343" onlyurl="1"><span class="mbt-v2-strong">37</span>:25</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.555900001541234343") === "object") {
                               document.getElementById("a-0.555900001541234343").href = navigateGame(document.getElementById('a-0.555900001541234343').getAttribute('game_id'), document.getElementById('a-0.555900001541234343').getAttribute('season_id'), document.getElementById('a-0.555900001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612567&amp;league_id=undefined&amp;season_id=102563" team_id="4612567" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556016001541234343" onlyurl="1">KŠ Sani Maribor</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556016001541234343") === "object") {
                               document.getElementById("a-0.556016001541234343").href = navigateTeam(document.getElementById('a-0.556016001541234343').getAttribute('team_id'), document.getElementById('a-0.556016001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8783" arena_id="8783" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556119001541234343" onlyurl="1">ŠD Rogaška Slatina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556119001541234343") === "object") {
                               document.getElementById("a-0.556119001541234343").href = navigateArena(document.getElementById('a-0.556119001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242283&amp;league_id=undefined&amp;season_id=102563" game_id="4242283" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556327001541234343" onlyurl="1">13.10.2018 09:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556327001541234343") === "object") {
                               document.getElementById("a-0.556327001541234343").href = navigateGame(document.getElementById('a-0.556327001541234343').getAttribute('game_id'), document.getElementById('a-0.556327001541234343').getAttribute('season_id'), document.getElementById('a-0.556327001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163443&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163443" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556458001541234343" onlyurl="1">Petrol Olimpija A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556458001541234343") === "object") {
                               document.getElementById("a-0.556458001541234343").href = navigateTeam(document.getElementById('a-0.556458001541234343').getAttribute('team_id'), document.getElementById('a-0.556458001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242283&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242283" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556578001541234343" onlyurl="1"><span class="mbt-v2-strong">74</span>:11</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556578001541234343") === "object") {
                               document.getElementById("a-0.556578001541234343").href = navigateGame(document.getElementById('a-0.556578001541234343').getAttribute('game_id'), document.getElementById('a-0.556578001541234343').getAttribute('season_id'), document.getElementById('a-0.556578001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=2231011&amp;league_id=undefined&amp;season_id=102563" team_id="2231011" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556692001541234343" onlyurl="1">Nova Gorica mladi A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556692001541234343") === "object") {
                               document.getElementById("a-0.556692001541234343").href = navigateTeam(document.getElementById('a-0.556692001541234343').getAttribute('team_id'), document.getElementById('a-0.556692001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7383" arena_id="7383" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556795001541234343" onlyurl="1">ŠD Cerknica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556795001541234343") === "object") {
                               document.getElementById("a-0.556795001541234343").href = navigateArena(document.getElementById('a-0.556795001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242065&amp;league_id=undefined&amp;season_id=102563" game_id="4242065" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.556993001541234343" onlyurl="1">13.10.2018 09:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.556993001541234343") === "object") {
                               document.getElementById("a-0.556993001541234343").href = navigateGame(document.getElementById('a-0.556993001541234343').getAttribute('game_id'), document.getElementById('a-0.556993001541234343').getAttribute('season_id'), document.getElementById('a-0.556993001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=164433&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164433" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557123001541234343" onlyurl="1">Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557123001541234343") === "object") {
                               document.getElementById("a-0.557123001541234343").href = navigateTeam(document.getElementById('a-0.557123001541234343').getAttribute('team_id'), document.getElementById('a-0.557123001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242065&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242065" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557250001541234343" onlyurl="1">28:<span class="mbt-v2-strong">43</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557250001541234343") === "object") {
                               document.getElementById("a-0.557250001541234343").href = navigateGame(document.getElementById('a-0.557250001541234343').getAttribute('game_id'), document.getElementById('a-0.557250001541234343').getAttribute('season_id'), document.getElementById('a-0.557250001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163453&amp;league_id=undefined&amp;season_id=102563" team_id="163453" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557370001541234343" onlyurl="1">Zlatorog</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557370001541234343") === "object") {
                               document.getElementById("a-0.557370001541234343").href = navigateTeam(document.getElementById('a-0.557370001541234343').getAttribute('team_id'), document.getElementById('a-0.557370001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7293" arena_id="7293" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557450001541234343" onlyurl="1">ŠD Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557450001541234343") === "object") {
                               document.getElementById("a-0.557450001541234343").href = navigateArena(document.getElementById('a-0.557450001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242137&amp;league_id=undefined&amp;season_id=102563" game_id="4242137" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557564001541234343" onlyurl="1">13.10.2018 09:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557564001541234343") === "object") {
                               document.getElementById("a-0.557564001541234343").href = navigateGame(document.getElementById('a-0.557564001541234343').getAttribute('game_id'), document.getElementById('a-0.557564001541234343').getAttribute('season_id'), document.getElementById('a-0.557564001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=248343&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248343" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557631001541234343" onlyurl="1">KŠ Sani Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557631001541234343") === "object") {
                               document.getElementById("a-0.557631001541234343").href = navigateTeam(document.getElementById('a-0.557631001541234343').getAttribute('team_id'), document.getElementById('a-0.557631001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242137&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242137" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557692001541234343" onlyurl="1">23:<span class="mbt-v2-strong">54</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557692001541234343") === "object") {
                               document.getElementById("a-0.557692001541234343").href = navigateGame(document.getElementById('a-0.557692001541234343').getAttribute('game_id'), document.getElementById('a-0.557692001541234343').getAttribute('season_id'), document.getElementById('a-0.557692001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=2233101&amp;league_id=undefined&amp;season_id=102563" team_id="2233101" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557747001541234343" onlyurl="1">Vrani Vransko</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557747001541234343") === "object") {
                               document.getElementById("a-0.557747001541234343").href = navigateTeam(document.getElementById('a-0.557747001541234343').getAttribute('team_id'), document.getElementById('a-0.557747001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8543" arena_id="8543" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557798001541234343" onlyurl="1">ŠD Slovenska Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557798001541234343") === "object") {
                               document.getElementById("a-0.557798001541234343").href = navigateArena(document.getElementById('a-0.557798001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242329&amp;league_id=undefined&amp;season_id=102563" game_id="4242329" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557893001541234343" onlyurl="1">13.10.2018 09:30</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557893001541234343") === "object") {
                               document.getElementById("a-0.557893001541234343").href = navigateGame(document.getElementById('a-0.557893001541234343').getAttribute('game_id'), document.getElementById('a-0.557893001541234343').getAttribute('season_id'), document.getElementById('a-0.557893001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163693&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163693" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.557986001541234343" onlyurl="1">KOŠ Primorska A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.557986001541234343") === "object") {
                               document.getElementById("a-0.557986001541234343").href = navigateTeam(document.getElementById('a-0.557986001541234343').getAttribute('team_id'), document.getElementById('a-0.557986001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242329&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242329" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558066001541234343" onlyurl="1">40:<span class="mbt-v2-strong">42</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558066001541234343") === "object") {
                               document.getElementById("a-0.558066001541234343").href = navigateGame(document.getElementById('a-0.558066001541234343').getAttribute('game_id'), document.getElementById('a-0.558066001541234343').getAttribute('season_id'), document.getElementById('a-0.558066001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=162853&amp;league_id=undefined&amp;season_id=102563" team_id="162853" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558126001541234343" onlyurl="1">Mesarija Prunk A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558126001541234343") === "object") {
                               document.getElementById("a-0.558126001541234343").href = navigateTeam(document.getElementById('a-0.558126001541234343').getAttribute('team_id'), document.getElementById('a-0.558126001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8603" arena_id="8603" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558178001541234343" onlyurl="1">ŠD STŠ Koper</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558178001541234343") === "object") {
                               document.getElementById("a-0.558178001541234343").href = navigateArena(document.getElementById('a-0.558178001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242041&amp;league_id=undefined&amp;season_id=102563" game_id="4242041" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558320001541234343" onlyurl="1">13.10.2018 09:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558320001541234343") === "object") {
                               document.getElementById("a-0.558320001541234343").href = navigateGame(document.getElementById('a-0.558320001541234343').getAttribute('game_id'), document.getElementById('a-0.558320001541234343').getAttribute('season_id'), document.getElementById('a-0.558320001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163593&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163593" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558442001541234343" onlyurl="1">Rogaška A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558442001541234343") === "object") {
                               document.getElementById("a-0.558442001541234343").href = navigateTeam(document.getElementById('a-0.558442001541234343').getAttribute('team_id'), document.getElementById('a-0.558442001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242041&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242041" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558565001541234343" onlyurl="1">27:<span class="mbt-v2-strong">45</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558565001541234343") === "object") {
                               document.getElementById("a-0.558565001541234343").href = navigateGame(document.getElementById('a-0.558565001541234343').getAttribute('game_id'), document.getElementById('a-0.558565001541234343').getAttribute('season_id'), document.getElementById('a-0.558565001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163573&amp;league_id=undefined&amp;season_id=102563" team_id="163573" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558684001541234343" onlyurl="1">AKK Branik</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558684001541234343") === "object") {
                               document.getElementById("a-0.558684001541234343").href = navigateTeam(document.getElementById('a-0.558684001541234343').getAttribute('team_id'), document.getElementById('a-0.558684001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=8783" arena_id="8783" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558792001541234343" onlyurl="1">ŠD Rogaška Slatina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558792001541234343") === "object") {
                               document.getElementById("a-0.558792001541234343").href = navigateArena(document.getElementById('a-0.558792001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242089&amp;league_id=undefined&amp;season_id=102563" game_id="4242089" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.558996001541234343" onlyurl="1">13.10.2018 09:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.558996001541234343") === "object") {
                               document.getElementById("a-0.558996001541234343").href = navigateGame(document.getElementById('a-0.558996001541234343').getAttribute('game_id'), document.getElementById('a-0.558996001541234343').getAttribute('season_id'), document.getElementById('a-0.558996001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163753&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163753" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559172001541234343" onlyurl="1">Terme Olimia Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559172001541234343") === "object") {
                               document.getElementById("a-0.559172001541234343").href = navigateTeam(document.getElementById('a-0.559172001541234343').getAttribute('team_id'), document.getElementById('a-0.559172001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242089&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242089" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559306001541234343" onlyurl="1"><span class="mbt-v2-strong">40</span>:33</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559306001541234343") === "object") {
                               document.getElementById("a-0.559306001541234343").href = navigateGame(document.getElementById('a-0.559306001541234343').getAttribute('game_id'), document.getElementById('a-0.559306001541234343').getAttribute('season_id'), document.getElementById('a-0.559306001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=163423&amp;league_id=undefined&amp;season_id=102563" team_id="163423" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559423001541234343" onlyurl="1">Šentjur Tajfun</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559423001541234343") === "object") {
                               document.getElementById("a-0.559423001541234343").href = navigateTeam(document.getElementById('a-0.559423001541234343').getAttribute('team_id'), document.getElementById('a-0.559423001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=9003" arena_id="9003" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559530001541234343" onlyurl="1">OŠ Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559530001541234343") === "object") {
                               document.getElementById("a-0.559530001541234343").href = navigateArena(document.getElementById('a-0.559530001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242185&amp;league_id=undefined&amp;season_id=102563" game_id="4242185" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559737001541234343" onlyurl="1">13.10.2018 09:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559737001541234343") === "object") {
                               document.getElementById("a-0.559737001541234343").href = navigateGame(document.getElementById('a-0.559737001541234343').getAttribute('game_id'), document.getElementById('a-0.559737001541234343').getAttribute('season_id'), document.getElementById('a-0.559737001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
													<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=164493&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164493" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.559875001541234343" onlyurl="1">Janče Ljubljana A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.559875001541234343") === "object") {
                               document.getElementById("a-0.559875001541234343").href = navigateTeam(document.getElementById('a-0.559875001541234343').getAttribute('team_id'), document.getElementById('a-0.559875001541234343').getAttribute('season_id'));
                            }
                        </script>
															            							</span>
								            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242185&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242185" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560005001541234343" onlyurl="1"><span class="mbt-v2-strong">43</span>:31</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560005001541234343") === "object") {
                               document.getElementById("a-0.560005001541234343").href = navigateGame(document.getElementById('a-0.560005001541234343').getAttribute('game_id'), document.getElementById('a-0.560005001541234343').getAttribute('season_id'), document.getElementById('a-0.560005001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    													<a href="http://www.kzs.si/incl?id=967&amp;team_id=248263&amp;league_id=undefined&amp;season_id=102563" team_id="248263" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560120001541234343" onlyurl="1">Lastovka</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560120001541234343") === "object") {
                               document.getElementById("a-0.560120001541234343").href = navigateTeam(document.getElementById('a-0.560120001541234343').getAttribute('team_id'), document.getElementById('a-0.560120001541234343').getAttribute('season_id'));
                            }
                        </script>
														            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=110489" arena_id="110489" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560228001541234343" onlyurl="1">OŠ Ledina</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560228001541234343") === "object") {
                               document.getElementById("a-0.560228001541234343").href = navigateArena(document.getElementById('a-0.560228001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
							<tr>
											<td data-th="Igralni dan">
							2
						</td>
										<td data-th="Datum in čas">
																														<a href="http://www.kzs.si/incl?id=114&amp;game_id=4242233&amp;league_id=undefined&amp;season_id=102563" game_id="4242233" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560460001541234343" onlyurl="1">13.10.2018 09:00</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560460001541234343") === "object") {
                               document.getElementById("a-0.560460001541234343").href = navigateGame(document.getElementById('a-0.560460001541234343').getAttribute('game_id'), document.getElementById('a-0.560460001541234343').getAttribute('season_id'), document.getElementById('a-0.560460001541234343').getAttribute('league_id'));
                            }
                        </script>
																		
																														</td>
																						            <td class="mbt-v2-schedule-team-a" data-th="Domači">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612421&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4612421" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560595001541234343" onlyurl="1">Gorenja vas</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560595001541234343") === "object") {
                               document.getElementById("a-0.560595001541234343").href = navigateTeam(document.getElementById('a-0.560595001541234343').getAttribute('team_id'), document.getElementById('a-0.560595001541234343').getAttribute('season_id'));
                            }
                        </script>
															            		            </td>
		            <td data-th="Rezultat">
		            				            				           
				            					            						            <a href="http://www.kzs.si/incl?id=114&amp;game_id=4242233&amp;league_id=undefined&amp;season_id=102563" season_id="102563" game_id="4242233" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560722001541234343" onlyurl="1">45:<span class="mbt-v2-strong">46</span></a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560722001541234343") === "object") {
                               document.getElementById("a-0.560722001541234343").href = navigateGame(document.getElementById('a-0.560722001541234343').getAttribute('game_id'), document.getElementById('a-0.560722001541234343').getAttribute('season_id'), document.getElementById('a-0.560722001541234343').getAttribute('league_id'));
                            }
                        </script>
					            					            					        			            	
		            			            </td>
		            <td class="mbt-v2-schedule-team-b" data-th="Gosti">
					    
					    							<span class="mbt-v2-strong">
																			<a href="http://www.kzs.si/incl?id=967&amp;team_id=163413&amp;league_id=undefined&amp;season_id=102563" team_id="163413" season_id="102563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560841001541234343" onlyurl="1">Parklji A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560841001541234343") === "object") {
                               document.getElementById("a-0.560841001541234343").href = navigateTeam(document.getElementById('a-0.560841001541234343').getAttribute('team_id'), document.getElementById('a-0.560841001541234343').getAttribute('season_id'));
                            }
                        </script>
																			</span>
								            </td>
		            						<td data-th="Dvorana">
															<a href="http://www.kzs.si/incl?id=119&amp;arena_id=7243" arena_id="7243" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.560950001541234343" onlyurl="1">ŠD OŠ Poljane</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.560950001541234343") === "object") {
                               document.getElementById("a-0.560950001541234343").href = navigateArena(document.getElementById('a-0.560950001541234343').getAttribute('arena_id'));
                            }
                        </script>
													</td>
																
				</tr>
					</tbody>	
	</table>
			<div class="mbt-v2-divider"></div>
		<div class="mbt-v2-grid">
							<div class="mbt-v2-col mbt-v2-col-12">
					<ul class="mbt-v2-pagination">
																											<li class="mbt-v2-pagination-active">
																						<span>
									1
								</span>
														</li>
																					<li>	
																						<a href="#" onclick="return false;" id="33-303-page-2">
									2
								</a>
														</li>
																					<li>	
																						<a href="#" onclick="return false;" id="33-303-page-3">
									3
								</a>
														</li>
																			<li class="mbt-v2-pagination-next">
								<a href="#" onclick="return false;" id="33-303-page-next">
									❯ 
								</a>
							</li>
											</ul>
				</div>
				
							<div class="mbt-v2-col mbt-v2-col-12 mbt-v2-grid-end">
					<a href="#" id="33-303-export" onclick="return false;" class="mbt-v2-export-link">
						Izvozi
					</a>
				</div>
				
		</div>
	
<script type="text/javascript">
//<![CDATA[

    
	var namespace = MBT.API.SafeNames.Container('33-303');

	var gamesCount = 30;

	if (gamesCount == 0 && namespace.activeTab == 0) {
		namespace.tabController[0].setActiveTab(1);
	}

	namespace.onPageClick = function(e, page) {
		
		namespace.filters.page = page;

		var params = {};

	    if(namespace.filters.stage) {
			params.stage_id = namespace.filters.stage;
		}

		if(namespace.filters.season) {
			params.season_id = namespace.filters.season;
		}

		if(namespace.filters.page) {
			params.page = namespace.filters.page;
		}

		params.filter = namespace.filters;
		
		MBT.API.History.setParam('33-303', MBT.API.History.pageIndex, 0, page);

		new MBT.API.Widgets.Widget({
			widgetId: 303,
			container: '33-303-container',
			state: 'MTU1MTI1NjY5OGE6MjA6e3M6MTc6InRlYW1fbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MjA6InNob3dfc2Vhc29uX3NlbGVjdG9yIjtzOjE6IjEiO3M6MTc6ImdhbWVfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTk6InBsYXllcl9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE3OiJ0ZWFtX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVUZWFtIjtzOjE3OiJnYW1lX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVHYW1lIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czoxODoiYXJlbmFfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTU6ImFyZW5hX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE4OiJhcmVuYV9saW5rX2hhbmRsZXIiO3M6MTM6Im5hdmlnYXRlQXJlbmEiO3M6OToibGVhZ3VlX2lkIjtzOjU6IjEwOTMzIjtzOjk6ImdhbWVfZGF5cyI7czoxOiIxIjtzOjE3OiJzaG93X3JlZmVyZWVfY2l0eSI7czoxOiIxIjtzOjEzOiJpdGVtc19vbl9wYWdlIjtzOjI6IjMwIjtzOjIwOiJzdGFnZV9sZXZlbHNfdmlzaWJsZSI7czoxOiIyIjtzOjg6InRlbXBsYXRlIjtzOjI6InYyIjtzOjY6ImZpbHRlciI7YTozOntzOjY6InNlYXNvbiI7czo2OiIxMDI1NjMiO3M6NDoidHlwZSI7czoxMjoicmVzdWx0c19vbmx5IjtzOjM6InRhYiI7czoyMDoic2NoZWR1bGVfYW5kX3Jlc3VsdHMiO319',
			params: params
		}).renderPartial(namespace.filters.tab);
	}

	
																	MBT.API.Event.observe('33-303-page-2', "click", MBT.API.Function.createDelegate(namespace.onPageClick, null, [2, false], 2)); 
												MBT.API.Event.observe('33-303-page-3', "click", MBT.API.Function.createDelegate(namespace.onPageClick, null, [3, false], 2)); 
										MBT.API.Event.observe('33-303-page-next', "click", MBT.API.Function.createDelegate(namespace.onPageClick, null, [2, false], 2)); 
			


	namespace.exportSchedule = function() {

		var url = MBT.API.ServiceUrl + "widget-service/export/view/schedule_and_results?api=" + MBT.API.ApiId;

		if (MBT.API.Lang) {
			url += "&lang=" + MBT.API.Lang;
		}

		for(filter in namespace.filters) {
			if(filter == 'season') {
				namespace.filters.season_id = namespace.filters[filter];
				filter = 'season_id';
			}
			url += '&' +filter + '=' + namespace.filters[filter];
		}

		window.location = url;
	}

	MBT.API.Event.observe("33-303-export", "click", MBT.API.Function.createDelegate(namespace.exportSchedule));

		

//]]>
</script>	</div>
	</div>
</div>

<script type="text/javascript">
//<![CDATA[

	
	var namespace = MBT.API.SafeNames.Container('33-303');

	namespace.mobileMenu = new MBT.API.createResponsiveNavigation({
		menuContainer : "33-303-mbt-v2-navigation",
		mobileMenuContainer : "33-303-mobile-menu",
		mobileMenuCloseText: "Izberi",
	});

	namespace.mobileFilters = new MBT.API.createResponsiveNavigation({
		menuContainer : "33-303-filters-block",
		mobileMenuContainer : "33-303-mobile-filters-block",
		filtersMode: true
	});

	namespace.filters = {};

	namespace.filters['season'] = 102563;

	namespace.availableFilters = {};

	var filters = MBT.API.get('33-303-filters-block').childNodes;

	
			

	if(filters) {
		for(var i = 0; i <  filters.length; i++) {
	        if(filters[i].nodeType == 1 && filters[i].getAttribute('data-filter')) {
	        	namespace.availableFilters[filters[i].getAttribute('data-filter')] = filters[i].getAttribute('data-load');

	        }
		}
	}

	namespace.onFilterChange = function(e, filter, needReloadFilters) {

		namespace.filters[filter] = e.target.value;

		var params = {};

		delete namespace.filters.page;
		namespace.reloadFilters(filter, true);

		if(needReloadFilters) {
			MBT.API.History.setParam('33-303', MBT.API.History.pageIndex, 0, null);
		}
	    
	    if(namespace.filters.stage) {
			params.stage_id = namespace.filters.stage;
		}

		if(namespace.filters.season) {
			params.season_id = namespace.filters.season;
		}

		if(namespace.filters.page) {
			params.page = namespace.filters.page;
		}

		params.filter = namespace.filters;

		MBT.API.History.setParam('33-303', MBT.API.History.filterIndex, filter, e.target.value);

		new MBT.API.Widgets.Widget({
			widgetId: 303,
			container: '33-303-container',
			state: 'IDI1Nzk4MDk1N2E6MTk6e3M6MTc6InRlYW1fbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MjA6InNob3dfc2Vhc29uX3NlbGVjdG9yIjtzOjE6IjEiO3M6MTc6ImdhbWVfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTk6InBsYXllcl9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE3OiJ0ZWFtX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVUZWFtIjtzOjE3OiJnYW1lX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVHYW1lIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czoxODoiYXJlbmFfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTU6ImFyZW5hX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE4OiJhcmVuYV9saW5rX2hhbmRsZXIiO3M6MTM6Im5hdmlnYXRlQXJlbmEiO3M6OToibGVhZ3VlX2lkIjtzOjU6IjEwOTMzIjtzOjk6ImdhbWVfZGF5cyI7czoxOiIxIjtzOjE3OiJzaG93X3JlZmVyZWVfY2l0eSI7czoxOiIxIjtzOjEzOiJpdGVtc19vbl9wYWdlIjtzOjI6IjMwIjtzOjIwOiJzdGFnZV9sZXZlbHNfdmlzaWJsZSI7czoxOiIyIjtzOjg6InRlbXBsYXRlIjtzOjI6InYyIjt9',
			params: params
		}).renderPartial(namespace.filters.tab);
	}

	namespace.reloadFilters = function(filter, removeHash) {

		for(key in namespace.availableFilters) {
			if(key != filter ) {
				if(key  != 'season') {
					if(removeHash) {
						MBT.API.History.setParam('33-303', MBT.API.History.filterIndex, key, null);
					}
					delete namespace.filters[key];
				}
				var params = {};

			    if(namespace.filters.stage) {
					params.stage_id = namespace.filters.stage;
				}

				if(namespace.filters.season) {
					params.season_id = namespace.filters.season;
				}
				new MBT.API.Widgets.Widget({
					widgetId: 303,
					container: '33-303-container',
					state: 'IDI1Nzk4MDk1N2E6MTk6e3M6MTc6InRlYW1fbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MjA6InNob3dfc2Vhc29uX3NlbGVjdG9yIjtzOjE6IjEiO3M6MTc6ImdhbWVfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTk6InBsYXllcl9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE3OiJ0ZWFtX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVUZWFtIjtzOjE3OiJnYW1lX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVHYW1lIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czoxODoiYXJlbmFfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTU6ImFyZW5hX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE4OiJhcmVuYV9saW5rX2hhbmRsZXIiO3M6MTM6Im5hdmlnYXRlQXJlbmEiO3M6OToibGVhZ3VlX2lkIjtzOjU6IjEwOTMzIjtzOjk6ImdhbWVfZGF5cyI7czoxOiIxIjtzOjE3OiJzaG93X3JlZmVyZWVfY2l0eSI7czoxOiIxIjtzOjEzOiJpdGVtc19vbl9wYWdlIjtzOjI6IjMwIjtzOjIwOiJzdGFnZV9sZXZlbHNfdmlzaWJsZSI7czoxOiIyIjtzOjg6InRlbXBsYXRlIjtzOjI6InYyIjt9',
					params: params
				}).renderPartial(namespace.availableFilters[key]);
			}
		}
	}

	namespace.onTabClick = function(tabPanel, index, part, type) {

		namespace.activeTab = index;

		namespace.filters.type = type;
		namespace.filters.tab = part;

		var params = {};

		if(namespace.filters.page) {
			params.page = namespace.filters.page;
		}

		params.filter  =  namespace.filters;

		new MBT.API.Widgets.Widget({
			widgetId: 303,
			container: '33-303-container',
			state: 'IDI1Nzk4MDk1N2E6MTk6e3M6MTc6InRlYW1fbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MjA6InNob3dfc2Vhc29uX3NlbGVjdG9yIjtzOjE6IjEiO3M6MTc6ImdhbWVfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTk6InBsYXllcl9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE3OiJ0ZWFtX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVUZWFtIjtzOjE3OiJnYW1lX2xpbmtfaGFuZGxlciI7czoxMjoibmF2aWdhdGVHYW1lIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czoxODoiYXJlbmFfbGlua192aXNpYmxlIjtzOjE6IjEiO3M6MTU6ImFyZW5hX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE4OiJhcmVuYV9saW5rX2hhbmRsZXIiO3M6MTM6Im5hdmlnYXRlQXJlbmEiO3M6OToibGVhZ3VlX2lkIjtzOjU6IjEwOTMzIjtzOjk6ImdhbWVfZGF5cyI7czoxOiIxIjtzOjE3OiJzaG93X3JlZmVyZWVfY2l0eSI7czoxOiIxIjtzOjEzOiJpdGVtc19vbl9wYWdlIjtzOjI6IjMwIjtzOjIwOiJzdGFnZV9sZXZlbHNfdmlzaWJsZSI7czoxOiIyIjtzOjg6InRlbXBsYXRlIjtzOjI6InYyIjt9',
			params: params
		}).renderPartial(part);
	}

	var tabs = [];
	
	var menuItems = MBT.API.get('33-303-mbt-v2-navigation').childNodes;
	
	for(var i = 0; i <  menuItems.length; i++) {
        if(menuItems[i].nodeType == 1) {
        	tabs.push({
        		tabId: menuItems[i].id,
        		needLoad: MBT.API.Function.createDelegate(namespace.onTabClick, null, [menuItems[i].getAttribute('data-name'), menuItems[i].getAttribute('data-type')], 2),
        	});
        }
	}

	
					var activeTab = 0;
			

	if (typeof (namespace.initConfig) != 'undefined') {	
		if(typeof (namespace.initConfig.filters) != 'undefined') {
			for(var key in namespace.initConfig.filters) {
				namespace.filters[key] = namespace.initConfig.filters[key].value;
				if(key == 'season' || key == 'stage') {
					namespace.reloadFilters(key, false);
				}
			}
		}

		if(typeof (namespace.initConfig.pages) != 'undefined') {
			namespace.filters.page = namespace.initConfig.pages[0].page;
		}

		if(typeof(namespace.initConfig.tabs) != 'undefined') {
			activeTab = namespace.initConfig.tabs[0].activeTab;
		}
	}

	namespace.tabController = [];

	namespace.tabController[0] = new MBT.API.UI.TabPanel({
		parentInstanceId: '33-303',
		container: '33-303-container',
		tabClass: 'mbt-v2-navigation-tab',
        activeTabClass: 'mbt-v2-navigation-tab-active',
        tabs: tabs,
        activeTab: activeTab,
        noCache: true
	});

	MBT.API.Event.observe('33-303-filter-season', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['season', true], 2));
	MBT.API.Event.observe('33-303-filter-stage', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['stage', true], 2));
	MBT.API.Event.observe('33-303-filter-game-day', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['game_day'], 1));
	MBT.API.Event.observe('33-303-filter-team', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['team'], 1));
	MBT.API.Event.observe('33-303-filter-month', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['month'], 1));
	MBT.API.Event.observe('33-303-filter-arena', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['arena'], 1));
    


//]]>
</script></div>
</div>
<div class="container">
	<div id="standings" mbt_widget="301"><div id="mbt-v2-standings-long-widget" class="mbt-v2-widget">
	<div class="mbt-v2-header">
		Lestvica
	</div>
	<div class="mbt-v2-widget-content">
                <div id="33-301-standings-container" class="mbt-v2-33-301-standings-container">									<div class="mbt-v2-table-header-before-table">1. del - Skupina 1</div>
			<div id="33-301-tables-container-1" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-1" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163573&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163573" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.517749001541234231" onlyurl="1">Branik</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.517749001541234231") === "object") {
                               document.getElementById("a-0.517749001541234231").href = navigateTeam(document.getElementById('a-0.517749001541234231').getAttribute('team_id'), document.getElementById('a-0.517749001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>3</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>7</td>
				                    				                												                    <td>
				                        142<span></span>/<span></span>122
				                    </td>
				                				                				                    <td>
				                        20
				                    </td>
				                												                    <td>
					                    35.5<span></span>/<span></span>30.5					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            32.3<span></span>/<span></span>31.7
				                        				                    </td>
			                    			                    					                <td>45.0<span></span>/<span></span>27.0</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+3</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4619121&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4619121" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.518068001541234231" onlyurl="1">i Team</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.518068001541234231") === "object") {
                               document.getElementById("a-0.518068001541234231").href = navigateTeam(document.getElementById('a-0.518068001541234231').getAttribute('team_id'), document.getElementById('a-0.518068001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        109<span></span>/<span></span>67
				                    </td>
				                				                				                    <td>
				                        42
				                    </td>
				                												                    <td>
					                    54.5<span></span>/<span></span>33.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            55.0<span></span>/<span></span>39.0
				                        				                    </td>
			                    			                    					                <td>54.0<span></span>/<span></span>28.0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612567&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4612567" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.518294001541234231" onlyurl="1">Sani Maribor</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.518294001541234231") === "object") {
                               document.getElementById("a-0.518294001541234231").href = navigateTeam(document.getElementById('a-0.518294001541234231').getAttribute('team_id'), document.getElementById('a-0.518294001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    3
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        112<span></span>/<span></span>156
				                    </td>
				                				                				                    <td>
				                        -44
				                    </td>
				                												                    <td>
					                    28.0<span></span>/<span></span>39.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>3/1				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>28.0<span></span>/<span></span>39.0</td>
				                				                					                <td>0<span></span>/<span></span>3</td>
				                				                					                <td>0<span></span>/<span></span>3</td>
				                				                				                    					                    <td>-4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-4</td>
				                				                				                    <td>0<span></span>/<span></span>0/1</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163593&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163593" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.518489001541234231" onlyurl="1">Rogaška A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.518489001541234231") === "object") {
                               document.getElementById("a-0.518489001541234231").href = navigateTeam(document.getElementById('a-0.518489001541234231').getAttribute('team_id'), document.getElementById('a-0.518489001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>1</td>
				                    				                												                    <td>
				                        59<span></span>/<span></span>77
				                    </td>
				                				                				                    <td>
				                        -18
				                    </td>
				                												                    <td>
					                    29.5<span></span>/<span></span>38.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            29.5<span></span>/<span></span>38.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>1</td>
				                				                					                <td>0<span></span>/<span></span>1</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0/1</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-1',
						tablesContainer: '33-301-tables-container-1',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 10</div>
			<div id="33-301-tables-container-2" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-2" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163443&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163443" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.519124001541234231" onlyurl="1">Olimpija A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.519124001541234231") === "object") {
                               document.getElementById("a-0.519124001541234231").href = navigateTeam(document.getElementById('a-0.519124001541234231').getAttribute('team_id'), document.getElementById('a-0.519124001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        289<span></span>/<span></span>103
				                    </td>
				                				                				                    <td>
				                        186
				                    </td>
				                												                    <td>
					                    72.3<span></span>/<span></span>25.8					                </td>
				                				                				                    <td>
				                        3<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            76.7<span></span>/<span></span>26.7
				                        				                    </td>
			                    			                    					                <td>59.0<span></span>/<span></span>23.0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>+3</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=2231011&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="2231011" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.519348001541234231" onlyurl="1">Nova Gorica A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.519348001541234231") === "object") {
                               document.getElementById("a-0.519348001541234231").href = navigateTeam(document.getElementById('a-0.519348001541234231').getAttribute('team_id'), document.getElementById('a-0.519348001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    4
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        87<span></span>/<span></span>312
				                    </td>
				                				                				                    <td>
				                        -225
				                    </td>
				                												                    <td>
					                    21.8<span></span>/<span></span>78.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>4				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>21.8<span></span>/<span></span>78.0</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                				                    					                    <td>-4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163803&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163803" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.519535001541234231" onlyurl="1">Cerknica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.519535001541234231") === "object") {
                               document.getElementById("a-0.519535001541234231").href = navigateTeam(document.getElementById('a-0.519535001541234231').getAttribute('team_id'), document.getElementById('a-0.519535001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        102<span></span>/<span></span>82
				                    </td>
				                				                				                    <td>
				                        20
				                    </td>
				                												                    <td>
					                    51.0<span></span>/<span></span>41.0					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            51.0<span></span>/<span></span>41.0
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4646275&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4646275" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.519711001541234231" onlyurl="1">Divača</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.519711001541234231") === "object") {
                               document.getElementById("a-0.519711001541234231").href = navigateTeam(document.getElementById('a-0.519711001541234231').getAttribute('team_id'), document.getElementById('a-0.519711001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        104<span></span>/<span></span>85
				                    </td>
				                				                				                    <td>
				                        19
				                    </td>
				                												                    <td>
					                    52.0<span></span>/<span></span>42.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            57.0<span></span>/<span></span>31.0
				                        				                    </td>
			                    			                    					                <td>47.0<span></span>/<span></span>54.0</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-2',
						tablesContainer: '33-301-tables-container-2',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 11</div>
			<div id="33-301-tables-container-3" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-3" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163623&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163623" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.520303001541234231" onlyurl="1">Ajdovščina A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.520303001541234231") === "object") {
                               document.getElementById("a-0.520303001541234231").href = navigateTeam(document.getElementById('a-0.520303001541234231').getAttribute('team_id'), document.getElementById('a-0.520303001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        185<span></span>/<span></span>108
				                    </td>
				                				                				                    <td>
				                        77
				                    </td>
				                												                    <td>
					                    46.3<span></span>/<span></span>27.0					                </td>
				                				                				                    <td>
				                        3<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            47.3<span></span>/<span></span>28.3
				                        				                    </td>
			                    			                    					                <td>43.0<span></span>/<span></span>23.0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>+3</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163773&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163773" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.520518001541234231" onlyurl="1">Tolmin</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.520518001541234231") === "object") {
                               document.getElementById("a-0.520518001541234231").href = navigateTeam(document.getElementById('a-0.520518001541234231').getAttribute('team_id'), document.getElementById('a-0.520518001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>6</td>
				                    				                												                    <td>
				                        140<span></span>/<span></span>135
				                    </td>
				                				                				                    <td>
				                        5
				                    </td>
				                												                    <td>
					                    35.0<span></span>/<span></span>33.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>2				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>35.0<span></span>/<span></span>33.8</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163863&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163863" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.520702001541234231" onlyurl="1">Pivka</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.520702001541234231") === "object") {
                               document.getElementById("a-0.520702001541234231").href = navigateTeam(document.getElementById('a-0.520702001541234231').getAttribute('team_id'), document.getElementById('a-0.520702001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        56<span></span>/<span></span>90
				                    </td>
				                				                				                    <td>
				                        -34
				                    </td>
				                												                    <td>
					                    28.0<span></span>/<span></span>45.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            20.0<span></span>/<span></span>37.0
				                        				                    </td>
			                    			                    					                <td>36.0<span></span>/<span></span>53.0</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163723&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163723" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.520890001541234231" onlyurl="1">Plama pur</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.520890001541234231") === "object") {
                               document.getElementById("a-0.520890001541234231").href = navigateTeam(document.getElementById('a-0.520890001541234231').getAttribute('team_id'), document.getElementById('a-0.520890001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        49<span></span>/<span></span>97
				                    </td>
				                				                				                    <td>
				                        -48
				                    </td>
				                												                    <td>
					                    24.5<span></span>/<span></span>48.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            24.5<span></span>/<span></span>48.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-3',
						tablesContainer: '33-301-tables-container-3',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 12</div>
			<div id="33-301-tables-container-4" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-4" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=162853&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="162853" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.521491001541234231" onlyurl="1">Sežana</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.521491001541234231") === "object") {
                               document.getElementById("a-0.521491001541234231").href = navigateTeam(document.getElementById('a-0.521491001541234231').getAttribute('team_id'), document.getElementById('a-0.521491001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>3</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>7</td>
				                    				                												                    <td>
				                        201<span></span>/<span></span>158
				                    </td>
				                				                				                    <td>
				                        43
				                    </td>
				                												                    <td>
					                    50.3<span></span>/<span></span>39.5					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            53.0<span></span>/<span></span>39.3
				                        				                    </td>
			                    			                    					                <td>42.0<span></span>/<span></span>40.0</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>1<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163563&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163563" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.521699001541234231" onlyurl="1">Postojna</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.521699001541234231") === "object") {
                               document.getElementById("a-0.521699001541234231").href = navigateTeam(document.getElementById('a-0.521699001541234231').getAttribute('team_id'), document.getElementById('a-0.521699001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>6</td>
				                    				                												                    <td>
				                        160<span></span>/<span></span>157
				                    </td>
				                				                				                    <td>
				                        3
				                    </td>
				                												                    <td>
					                    40.0<span></span>/<span></span>39.3					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>2				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>40.0<span></span>/<span></span>39.3</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163693&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163693" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.521882001541234231" onlyurl="1">Primorska A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.521882001541234231") === "object") {
                               document.getElementById("a-0.521882001541234231").href = navigateTeam(document.getElementById('a-0.521882001541234231').getAttribute('team_id'), document.getElementById('a-0.521882001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        76<span></span>/<span></span>61
				                    </td>
				                				                				                    <td>
				                        15
				                    </td>
				                												                    <td>
					                    38.0<span></span>/<span></span>30.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            38.0<span></span>/<span></span>30.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>1</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4643213&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4643213" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.522063001541234231" onlyurl="1">Piran beli</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.522063001541234231") === "object") {
                               document.getElementById("a-0.522063001541234231").href = navigateTeam(document.getElementById('a-0.522063001541234231').getAttribute('team_id'), document.getElementById('a-0.522063001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        57<span></span>/<span></span>118
				                    </td>
				                				                				                    <td>
				                        -61
				                    </td>
				                												                    <td>
					                    28.5<span></span>/<span></span>59.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            25.0<span></span>/<span></span>55.0
				                        				                    </td>
			                    			                    					                <td>32.0<span></span>/<span></span>63.0</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-4',
						tablesContainer: '33-301-tables-container-4',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 2</div>
			<div id="33-301-tables-container-5" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-5" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=248303&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248303" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.522654001541234231" onlyurl="1">Konjice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.522654001541234231") === "object") {
                               document.getElementById("a-0.522654001541234231").href = navigateTeam(document.getElementById('a-0.522654001541234231').getAttribute('team_id'), document.getElementById('a-0.522654001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        199<span></span>/<span></span>99
				                    </td>
				                				                				                    <td>
				                        100
				                    </td>
				                												                    <td>
					                    49.8<span></span>/<span></span>24.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        4<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>49.8<span></span>/<span></span>24.8</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>+4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163453&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163453" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.522851001541234231" onlyurl="1">Zlatorog</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.522851001541234231") === "object") {
                               document.getElementById("a-0.522851001541234231").href = navigateTeam(document.getElementById('a-0.522851001541234231').getAttribute('team_id'), document.getElementById('a-0.522851001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>6</td>
				                    				                												                    <td>
				                        154<span></span>/<span></span>139
				                    </td>
				                				                				                    <td>
				                        15
				                    </td>
				                												                    <td>
					                    38.5<span></span>/<span></span>34.8					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            37.0<span></span>/<span></span>37.0
				                        				                    </td>
			                    			                    					                <td>43.0<span></span>/<span></span>28.0</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=164433&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164433" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.523040001541234231" onlyurl="1">Litija</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.523040001541234231") === "object") {
                               document.getElementById("a-0.523040001541234231").href = navigateTeam(document.getElementById('a-0.523040001541234231').getAttribute('team_id'), document.getElementById('a-0.523040001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        43<span></span>/<span></span>82
				                    </td>
				                				                				                    <td>
				                        -39
				                    </td>
				                												                    <td>
					                    21.5<span></span>/<span></span>41.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            21.5<span></span>/<span></span>41.0
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=164373&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164373" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.523278001541234231" onlyurl="1">Ljutomer</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.523278001541234231") === "object") {
                               document.getElementById("a-0.523278001541234231").href = navigateTeam(document.getElementById('a-0.523278001541234231').getAttribute('team_id'), document.getElementById('a-0.523278001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        28<span></span>/<span></span>104
				                    </td>
				                				                				                    <td>
				                        -76
				                    </td>
				                												                    <td>
					                    14.0<span></span>/<span></span>52.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            18.0<span></span>/<span></span>59.0
				                        				                    </td>
			                    			                    					                <td>10.0<span></span>/<span></span>45.0</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-5',
						tablesContainer: '33-301-tables-container-5',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 3</div>
			<div id="33-301-tables-container-6" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-6" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163133&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163133" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.523871001541234231" onlyurl="1">Radenska</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.523871001541234231") === "object") {
                               document.getElementById("a-0.523871001541234231").href = navigateTeam(document.getElementById('a-0.523871001541234231').getAttribute('team_id'), document.getElementById('a-0.523871001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    3
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>5</td>
				                    				                												                    <td>
				                        148<span></span>/<span></span>175
				                    </td>
				                				                				                    <td>
				                        -27
				                    </td>
				                												                    <td>
					                    37.0<span></span>/<span></span>43.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>3				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>37.0<span></span>/<span></span>43.8</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>1</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163423&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163423" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.524082001541234231" onlyurl="1">Šentjur</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.524082001541234231") === "object") {
                               document.getElementById("a-0.524082001541234231").href = navigateTeam(document.getElementById('a-0.524082001541234231').getAttribute('team_id'), document.getElementById('a-0.524082001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    3
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>5</td>
				                    				                												                    <td>
				                        140<span></span>/<span></span>170
				                    </td>
				                				                				                    <td>
				                        -30
				                    </td>
				                												                    <td>
					                    35.0<span></span>/<span></span>42.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            35.7<span></span>/<span></span>43.3
				                        				                    </td>
			                    			                    					                <td>33.0<span></span>/<span></span>40.0</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>1<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163263&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163263" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.524279001541234231" onlyurl="1">Vojnik</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.524279001541234231") === "object") {
                               document.getElementById("a-0.524279001541234231").href = navigateTeam(document.getElementById('a-0.524279001541234231').getAttribute('team_id'), document.getElementById('a-0.524279001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        102<span></span>/<span></span>70
				                    </td>
				                				                				                    <td>
				                        32
				                    </td>
				                												                    <td>
					                    51.0<span></span>/<span></span>35.0					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            56.0<span></span>/<span></span>40.0
				                        				                    </td>
			                    			                    					                <td>46.0<span></span>/<span></span>30.0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163753&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163753" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.524466001541234231" onlyurl="1">Podčetrtek</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.524466001541234231") === "object") {
                               document.getElementById("a-0.524466001541234231").href = navigateTeam(document.getElementById('a-0.524466001541234231').getAttribute('team_id'), document.getElementById('a-0.524466001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        82<span></span>/<span></span>57
				                    </td>
				                				                				                    <td>
				                        25
				                    </td>
				                												                    <td>
					                    41.0<span></span>/<span></span>28.5					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            41.0<span></span>/<span></span>28.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-6',
						tablesContainer: '33-301-tables-container-6',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 4</div>
			<div id="33-301-tables-container-7" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-7" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=2233101&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="2233101" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.525072001541234231" onlyurl="1">Vrani</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.525072001541234231") === "object") {
                               document.getElementById("a-0.525072001541234231").href = navigateTeam(document.getElementById('a-0.525072001541234231').getAttribute('team_id'), document.getElementById('a-0.525072001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        199<span></span>/<span></span>113
				                    </td>
				                				                				                    <td>
				                        86
				                    </td>
				                												                    <td>
					                    49.8<span></span>/<span></span>28.3					                </td>
				                				                				                    <td>
				                        3<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            48.3<span></span>/<span></span>30.0
				                        				                    </td>
			                    			                    					                <td>54.0<span></span>/<span></span>23.0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>+3</td>
				                				                					                <td>+1</td>
				                				                				                    <td>1<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4619129&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4619129" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.525319001541234231" onlyurl="1">Prebold</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.525319001541234231") === "object") {
                               document.getElementById("a-0.525319001541234231").href = navigateTeam(document.getElementById('a-0.525319001541234231').getAttribute('team_id'), document.getElementById('a-0.525319001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>6</td>
				                    				                												                    <td>
				                        165<span></span>/<span></span>160
				                    </td>
				                				                				                    <td>
				                        5
				                    </td>
				                												                    <td>
					                    41.3<span></span>/<span></span>40.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>2				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>41.3<span></span>/<span></span>40.0</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>1</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=248343&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248343" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.525504001541234231" onlyurl="1">Bistrica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.525504001541234231") === "object") {
                               document.getElementById("a-0.525504001541234231").href = navigateTeam(document.getElementById('a-0.525504001541234231').getAttribute('team_id'), document.getElementById('a-0.525504001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        59<span></span>/<span></span>103
				                    </td>
				                				                				                    <td>
				                        -44
				                    </td>
				                												                    <td>
					                    29.5<span></span>/<span></span>51.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            29.5<span></span>/<span></span>51.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163243&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163243" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.525685001541234231" onlyurl="1">Zagorje</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.525685001541234231") === "object") {
                               document.getElementById("a-0.525685001541234231").href = navigateTeam(document.getElementById('a-0.525685001541234231').getAttribute('team_id'), document.getElementById('a-0.525685001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        55<span></span>/<span></span>102
				                    </td>
				                				                				                    <td>
				                        -47
				                    </td>
				                												                    <td>
					                    27.5<span></span>/<span></span>51.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            31.0<span></span>/<span></span>50.0
				                        				                    </td>
			                    			                    					                <td>24.0<span></span>/<span></span>52.0</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-7',
						tablesContainer: '33-301-tables-container-7',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 5</div>
			<div id="33-301-tables-container-8" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-8" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163313&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163313" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.526277001541234231" onlyurl="1">Helios A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.526277001541234231") === "object") {
                               document.getElementById("a-0.526277001541234231").href = navigateTeam(document.getElementById('a-0.526277001541234231').getAttribute('team_id'), document.getElementById('a-0.526277001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        122<span></span>/<span></span>36
				                    </td>
				                				                				                    <td>
				                        86
				                    </td>
				                												                    <td>
					                    61.0<span></span>/<span></span>18.0					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            61.0<span></span>/<span></span>18.0
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163233&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163233" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.526470001541234231" onlyurl="1">Vrhnika</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.526470001541234231") === "object") {
                               document.getElementById("a-0.526470001541234231").href = navigateTeam(document.getElementById('a-0.526470001541234231').getAttribute('team_id'), document.getElementById('a-0.526470001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        41<span></span>/<span></span>82
				                    </td>
				                				                				                    <td>
				                        -41
				                    </td>
				                												                    <td>
					                    20.5<span></span>/<span></span>41.0					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            22.0<span></span>/<span></span>19.0
				                        				                    </td>
			                    			                    					                <td>19.0<span></span>/<span></span>63.0</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>1<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163083&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163083" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.526663001541234231" onlyurl="1">Celje</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.526663001541234231") === "object") {
                               document.getElementById("a-0.526663001541234231").href = navigateTeam(document.getElementById('a-0.526663001541234231').getAttribute('team_id'), document.getElementById('a-0.526663001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        36<span></span>/<span></span>81
				                    </td>
				                				                				                    <td>
				                        -45
				                    </td>
				                												                    <td>
					                    18.0<span></span>/<span></span>40.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>2				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>18.0<span></span>/<span></span>40.5</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-2</td>
				                				                				                    <td>0<span></span>/<span></span>1</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=164613&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164613" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.526842001541234231" onlyurl="1">Šenčur</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.526842001541234231") === "object") {
                               document.getElementById("a-0.526842001541234231").href = navigateTeam(document.getElementById('a-0.526842001541234231').getAttribute('team_id'), document.getElementById('a-0.526842001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        0
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>0</td>
				                    				                												                    <td>
				                        0<span></span>/<span></span>0
				                    </td>
				                				                				                    <td>
				                        0
				                    </td>
				                												                    <td>
					                    -<span></span>/<span></span>-					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>0</td>
				                				                					                <td>0<span></span>/<span></span>0</td>
				                				                				                    					                    <td>-</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-8',
						tablesContainer: '33-301-tables-container-8',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 6</div>
			<div id="33-301-tables-container-9" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-9" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163483&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163483" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.527441001541234231" onlyurl="1">Grosuplje</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.527441001541234231") === "object") {
                               document.getElementById("a-0.527441001541234231").href = navigateTeam(document.getElementById('a-0.527441001541234231').getAttribute('team_id'), document.getElementById('a-0.527441001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        220<span></span>/<span></span>83
				                    </td>
				                				                				                    <td>
				                        137
				                    </td>
				                												                    <td>
					                    55.0<span></span>/<span></span>20.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        4<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>55.0<span></span>/<span></span>20.8</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>+4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=248263&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="248263" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.527640001541234231" onlyurl="1">Lastovka</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.527640001541234231") === "object") {
                               document.getElementById("a-0.527640001541234231").href = navigateTeam(document.getElementById('a-0.527640001541234231').getAttribute('team_id'), document.getElementById('a-0.527640001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    3
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>5</td>
				                    				                												                    <td>
				                        101<span></span>/<span></span>165
				                    </td>
				                				                				                    <td>
				                        -64
				                    </td>
				                												                    <td>
					                    25.3<span></span>/<span></span>41.3					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            23.3<span></span>/<span></span>40.7
				                        				                    </td>
			                    			                    					                <td>31.0<span></span>/<span></span>43.0</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                				                    					                    <td>-3</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=164493&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164493" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.527834001541234231" onlyurl="1">Janče A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.527834001541234231") === "object") {
                               document.getElementById("a-0.527834001541234231").href = navigateTeam(document.getElementById('a-0.527834001541234231').getAttribute('team_id'), document.getElementById('a-0.527834001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        68<span></span>/<span></span>83
				                    </td>
				                				                				                    <td>
				                        -15
				                    </td>
				                												                    <td>
					                    34.0<span></span>/<span></span>41.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            34.0<span></span>/<span></span>41.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163163&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163163" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.528013001541234231" onlyurl="1">Elektra</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.528013001541234231") === "object") {
                               document.getElementById("a-0.528013001541234231").href = navigateTeam(document.getElementById('a-0.528013001541234231').getAttribute('team_id'), document.getElementById('a-0.528013001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        40<span></span>/<span></span>98
				                    </td>
				                				                				                    <td>
				                        -58
				                    </td>
				                												                    <td>
					                    20.0<span></span>/<span></span>49.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            26.0<span></span>/<span></span>60.0
				                        				                    </td>
			                    			                    					                <td>14.0<span></span>/<span></span>38.0</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-9',
						tablesContainer: '33-301-tables-container-9',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 7</div>
			<div id="33-301-tables-container-10" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-10" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=2232681&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="2232681" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.528618001541234231" onlyurl="1">Stražišče</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.528618001541234231") === "object") {
                               document.getElementById("a-0.528618001541234231").href = navigateTeam(document.getElementById('a-0.528618001541234231').getAttribute('team_id'), document.getElementById('a-0.528618001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>6</td>
				                    				                												                    <td>
				                        164<span></span>/<span></span>217
				                    </td>
				                				                				                    <td>
				                        -53
				                    </td>
				                												                    <td>
					                    41.0<span></span>/<span></span>54.3					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                							    				                    <td>
				                        				                            47.3<span></span>/<span></span>39.3
				                        				                    </td>
			                    			                    					                <td>22.0<span></span>/<span></span>99.0</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                					                <td>2<span></span>/<span></span>2</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>-1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163703&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163703" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.528821001541234231" onlyurl="1">Ljubljana A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.528821001541234231") === "object") {
                               document.getElementById("a-0.528821001541234231").href = navigateTeam(document.getElementById('a-0.528821001541234231').getAttribute('team_id'), document.getElementById('a-0.528821001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        181<span></span>/<span></span>41
				                    </td>
				                				                				                    <td>
				                        140
				                    </td>
				                												                    <td>
					                    90.5<span></span>/<span></span>20.5					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            90.5<span></span>/<span></span>20.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163673&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163673" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.529005001541234231" onlyurl="1">Ježica</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.529005001541234231") === "object") {
                               document.getElementById("a-0.529005001541234231").href = navigateTeam(document.getElementById('a-0.529005001541234231').getAttribute('team_id'), document.getElementById('a-0.529005001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        104<span></span>/<span></span>64
				                    </td>
				                				                				                    <td>
				                        40
				                    </td>
				                												                    <td>
					                    52.0<span></span>/<span></span>32.0					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            46.0<span></span>/<span></span>32.0
				                        				                    </td>
			                    			                    					                <td>58.0<span></span>/<span></span>32.0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163663&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163663" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.529191001541234231" onlyurl="1">Jesenice</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.529191001541234231") === "object") {
                               document.getElementById("a-0.529191001541234231").href = navigateTeam(document.getElementById('a-0.529191001541234231').getAttribute('team_id'), document.getElementById('a-0.529191001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    4
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        111<span></span>/<span></span>238
				                    </td>
				                				                				                    <td>
				                        -127
				                    </td>
				                												                    <td>
					                    27.8<span></span>/<span></span>59.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>4				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>27.8<span></span>/<span></span>59.5</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                				                    					                    <td>-4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-10',
						tablesContainer: '33-301-tables-container-10',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 8</div>
			<div id="33-301-tables-container-11" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-11" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=162983&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="162983" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.529771001541234231" onlyurl="1">Triglav A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.529771001541234231") === "object") {
                               document.getElementById("a-0.529771001541234231").href = navigateTeam(document.getElementById('a-0.529771001541234231').getAttribute('team_id'), document.getElementById('a-0.529771001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>4</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>8</td>
				                    				                												                    <td>
				                        267<span></span>/<span></span>136
				                    </td>
				                				                				                    <td>
				                        131
				                    </td>
				                												                    <td>
					                    66.8<span></span>/<span></span>34.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        4<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>66.8<span></span>/<span></span>34.0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                					                <td>4<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>+4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163413&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163413" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.529962001541234231" onlyurl="1">Parklji</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.529962001541234231") === "object") {
                               document.getElementById("a-0.529962001541234231").href = navigateTeam(document.getElementById('a-0.529962001541234231').getAttribute('team_id'), document.getElementById('a-0.529962001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    3
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>5</td>
				                    				                												                    <td>
				                        168<span></span>/<span></span>243
				                    </td>
				                				                				                    <td>
				                        -75
				                    </td>
				                												                    <td>
					                    42.0<span></span>/<span></span>60.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>3				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            40.7<span></span>/<span></span>66.0
				                        				                    </td>
			                    			                    					                <td>46.0<span></span>/<span></span>45.0</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                					                <td>1<span></span>/<span></span>3</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-3</td>
				                				                					                <td>+1</td>
				                				                				                    <td>1<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=164323&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="164323" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.530150001541234231" onlyurl="1">Hidria</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.530150001541234231") === "object") {
                               document.getElementById("a-0.530150001541234231").href = navigateTeam(document.getElementById('a-0.530150001541234231').getAttribute('team_id'), document.getElementById('a-0.530150001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        67<span></span>/<span></span>90
				                    </td>
				                				                				                    <td>
				                        -23
				                    </td>
				                												                    <td>
					                    33.5<span></span>/<span></span>45.0					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            20.0<span></span>/<span></span>51.0
				                        				                    </td>
			                    			                    					                <td>47.0<span></span>/<span></span>39.0</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>-1</td>
				                    				                				                					                <td>-1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=4612421&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="4612421" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.530337001541234231" onlyurl="1">Gorenja vas</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.530337001541234231") === "object") {
                               document.getElementById("a-0.530337001541234231").href = navigateTeam(document.getElementById('a-0.530337001541234231').getAttribute('team_id'), document.getElementById('a-0.530337001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    2
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>2</td>
				                    				                												                    <td>
				                        78<span></span>/<span></span>111
				                    </td>
				                				                				                    <td>
				                        -33
				                    </td>
				                												                    <td>
					                    39.0<span></span>/<span></span>55.5					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>2				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            39.0<span></span>/<span></span>55.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                					                <td>0<span></span>/<span></span>2</td>
				                				                				                    					                    <td>-2</td>
				                    				                				                					                <td>-2</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>1</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-11',
						tablesContainer: '33-301-tables-container-11',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
								<div class="mbt-v2-table-header-before-table">1. del - Skupina 9</div>
			<div id="33-301-tables-container-12" class="mbt-v2-responsive-table-container">
				<table id="mbt-v2-standings-long-table-12" class="mbt-v2-table mbt-v2-standings-long-table">
					<thead>
						<tr>
															<th>M</th>
																						<th>Ekipa</th>
													    							    <th>T</th>
						    						    							    								    <th>Z</th>
																									<th>P</th>
																			                     
						    						    						    							    									<th>TČ</th>    
							    						    						    								<th>TČ/PR</th>
						    						    
						    								<th>+/-</th>
						    						    							    <th>DT/PT</th>
						    						    							    <th>Dom. Z/P</th>
						    						    				                <th>Gost. Z/P</th>
			                			                				                <th>Dom. +/-</th>
			                			                				                <th>Gost. +/-</th>
			                			                				                <th>Zad. 5</th>
			                			                				                <th>Zad. 10</th>
			                			                			                    				                    <th>Ser.</th>
			                    			                			                				                <th>Ser. doma</th>
			                			                				                <th>Ser. v gost.</th>
			                			                			                	<th title="Tesne t.">
			                		+/-5
			                	</th>
			                						</tr>
					</thead>
					<tbody>
																				<tr>
																	<td>
										1.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163373&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163373" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.530912001541234231" onlyurl="1">Krka</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.530912001541234231") === "object") {
                               document.getElementById("a-0.530912001541234231").href = navigateTeam(document.getElementById('a-0.530912001541234231').getAttribute('team_id'), document.getElementById('a-0.530912001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>3</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>7</td>
				                    				                												                    <td>
				                        156<span></span>/<span></span>147
				                    </td>
				                				                				                    <td>
				                        9
				                    </td>
				                												                    <td>
					                    39.0<span></span>/<span></span>36.8					                </td>
				                				                				                    <td>
				                        2<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            35.3<span></span>/<span></span>39.0
				                        				                    </td>
			                    			                    					                <td>50.0<span></span>/<span></span>30.0</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                					                <td>3<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+3</td>
				                    				                				                					                <td>+2</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										2.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163333&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163333" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.531148001541234231" onlyurl="1">Slovan A</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.531148001541234231") === "object") {
                               document.getElementById("a-0.531148001541234231").href = navigateTeam(document.getElementById('a-0.531148001541234231').getAttribute('team_id'), document.getElementById('a-0.531148001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>2</td>
				                    				                    				                        <td>
					                        							                    0
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        146<span></span>/<span></span>40
				                    </td>
				                				                				                    <td>
				                        106
				                    </td>
				                												                    <td>
					                    73.0<span></span>/<span></span>20.0					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            77.0<span></span>/<span></span>13.0
				                        				                    </td>
			                    			                    					                <td>69.0<span></span>/<span></span>27.0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                					                <td>2<span></span>/<span></span>0</td>
				                				                				                    					                    <td>+2</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>+1</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										3.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=162993&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="162993" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.531345001541234231" onlyurl="1">LTH</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.531345001541234231") === "object") {
                               document.getElementById("a-0.531345001541234231").href = navigateTeam(document.getElementById('a-0.531345001541234231').getAttribute('team_id'), document.getElementById('a-0.531345001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        4
				                    </td>
				                				                				                    				                        <td>0</td>
				                    				                    				                        <td>
					                        							                    4
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>4</td>
				                    				                												                    <td>
				                        78<span></span>/<span></span>199
				                    </td>
				                				                				                    <td>
				                        -121
				                    </td>
				                												                    <td>
					                    19.5<span></span>/<span></span>49.8					                </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>4				                    </td>
				                							    				                    <td>
				                        				                            -/-
				                        				                    </td>
			                    			                    					                <td>19.5<span></span>/<span></span>49.8</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                					                <td>0<span></span>/<span></span>4</td>
				                				                				                    					                    <td>-4</td>
				                    				                				                					                <td>-</td>
				                				                					                <td>-4</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
																				<tr>
																	<td>
										4.
																			</td>
									
																	<td>
																				<a href="http://www.kzs.si/incl?id=967&amp;team_id=163603&amp;league_id=undefined&amp;season_id=102563" season_id="102563" team_id="163603" client_hash="39f56437f972dc4ca91d2c997f874dcfc232a688" id="a-0.531524001541234231" onlyurl="1">Medvode</a><script type="text/javascript">
                            if (typeof document.getElementById("a-0.531524001541234231") === "object") {
                               document.getElementById("a-0.531524001541234231").href = navigateTeam(document.getElementById('a-0.531524001541234231').getAttribute('team_id'), document.getElementById('a-0.531524001541234231').getAttribute('season_id'));
                            }
                        </script>
									</td>
																
				                				                    <td>
				                        2
				                    </td>
				                				                				                    				                        <td>1</td>
				                    				                    				                        <td>
					                        							                    1
						                    					                    </td>
				                        				                    				                    				                				                				                    				                        <td>3</td>
				                    				                												                    <td>
				                        73<span></span>/<span></span>67
				                    </td>
				                				                				                    <td>
				                        6
				                    </td>
				                												                    <td>
					                    36.5<span></span>/<span></span>33.5					                </td>
				                				                				                    <td>
				                        1<span></span>/<span></span>1				                    </td>
				                				                				                    <td>
				                        0<span></span>/<span></span>0				                    </td>
				                							    				                    <td>
				                        				                            36.5<span></span>/<span></span>33.5
				                        				                    </td>
			                    			                    					                <td>-/-</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                					                <td>1<span></span>/<span></span>1</td>
				                				                				                    					                    <td>+1</td>
				                    				                				                					                <td>+1</td>
				                				                					                <td>-</td>
				                				                				                    <td>0<span></span>/<span></span>0</td>
				                			                
							</tr>
											</tbody>
				</table>
			</div>
			<script type="text/javascript">
				//<![CDATA[
				
				    
				    new MBT.API.responsiveTable ({
						table: 'mbt-v2-standings-long-table-12',
						tablesContainer: '33-301-tables-container-12',
						columnsToPin: 2
					}).watchTable();

				
				//]]>	
			</script>
							<div class="mbt-v2-divider"></div>
				<div id="mbt-v2-standings-long-tiebreakers" style="display:none;">
				   <div class="mbt-v2-subheader">
			   Odločitve na lestvici ob koncu
			   			</div>
			<table class="mbt-v2-table mbt-v2-tiebreakers-table mbt-v2-table-bordered">
			    <thead>
			        <tr>
			            <th>
			                M
			            </th>
			            <th>
			                Ime
			            </th>
			            <th>
			                Opis
			            </th>
			        </tr>
			    </thead>
			    <tbody>
		            		                <tr>
			                			                			                <td>
			                    1.
			                </td>
			                <td>
			                    Točke
			                </td>
			                <td>
			                    Točke
			                </td>
			            </tr>
		            		                <tr>
			                			                			                <td>
			                    2.
			                </td>
			                <td>
			                    Inner points
			                </td>
			                <td>
			                    Points counting the games between tied teams only
			                </td>
			            </tr>
		            		                <tr>
			                			                			                <td>
			                    3.
			                </td>
			                <td>
			                    Inner goal difference
			                </td>
			                <td>
			                    Goal difference between tied teams
			                </td>
			            </tr>
		            		                <tr>
			                			                			                <td>
			                    4.
			                </td>
			                <td>
			                    Inner goals
			                </td>
			                <td>
			                    Goals counting the games between tied teams only
			                </td>
			            </tr>
		            		                <tr>
			                			                			                <td>
			                    5.
			                </td>
			                <td>
			                    Razlika v koših (vse tekme)
			                </td>
			                <td>
			                    Razlika v koših (vse tekme)
			                </td>
			            </tr>
		            		                <tr>
			                			                			                <td>
			                    6.
			                </td>
			                <td>
			                    Total goals
			                </td>
			                <td>
			                    Total goals scored
			                </td>
			            </tr>
		            			    </tbody>
			</table>
			</div>
	</div>
                    <a id="mbt-v2-standings-long-tiebreakers-link" href="#" onclick="return false;">
                Odločitve na lestvici ob koncu »
            </a>
                
    </div>
</div>
<div id="33-301-tmp-container" style="display: none;"></div>


<script type="text/javascript">

//<![CDATA[


var namespace = MBT.API.SafeNames.Container('33-301');

namespace.getSeason = function () {

    var seasonId = 102563;

        

    return seasonId;
}

namespace.loadGroups = function () {

    var widget = new MBT.API.Widgets.Widget({widgetId: 301,
                        container: '33-301-tmp-container',
                        params: {
                            season_id: namespace.getSeason()
                        }});
    widget.setCallback('namespace.loadStandings');
    widget.renderPartial('get-groups'); 

}

namespace.changeSeason = function() {

    
        namespace.loadStandings();
        
}


namespace.showLegend = function() {
	if (MBT.API.get('33-301-tiebreakers')) {
		MBT.API.get('33-301-tiebreakers').style.display = "none";
	}
	if (MBT.API.get('33-301-legend')) {
		MBT.API.get('33-301-legend').style.display = "block";
	}
}

namespace.showTiebreakers = function() {
    var el = MBT.API.get('mbt-v2-standings-long-tiebreakers');
	if (el.style.display == "block") {
        el.style.display = 'none';
	} else {
        el.style.display = 'block';
    }
}



MBT.API.Event.observe('33-301-legend-link', "click", namespace.showLegend);
MBT.API.Event.observe('mbt-v2-standings-long-tiebreakers-link', "click", namespace.showTiebreakers);



namespace.loadStandings = function() {
    new MBT.API.Widgets.Widget({
        widgetId: 301, 
        container: '33-301-standings-container',
        state: 'IDIyMDkxMjQ4OGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMiI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMiI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjI3OiJmdWxsX3N0YW5kaW5nc19saW5rX3Zpc2libGUiO3M6MToiMiI7czoyMDoic3RhZ2VfbGV2ZWxzX3Zpc2libGUiO3M6MToiMiI7czo5OiJsZWFndWVfaWQiO3M6NToiMTA5MzMiO3M6MTQ6InRlYW1fbGlua190eXBlIjtzOjE6IjMiO3M6MTc6InRlYW1fbGlua19oYW5kbGVyIjtzOjEyOiJuYXZpZ2F0ZVRlYW0iO3M6MjQ6ImZ1bGxfc3RhbmRpbmdzX2xpbmtfdHlwZSI7czoxOiIzIjtzOjI3OiJmdWxsX3N0YW5kaW5nc19saW5rX2hhbmRsZXIiO3M6MTc6Im5hdmlnYXRlU3RhbmRpbmdzIjtzOjg6InRlbXBsYXRlIjtzOjI6InYyIjt9',
        params: {
            season_id: namespace.getSeason(),
            showTeamLogo:'',
            teamLogoSize: '20x20'
        }
    }).renderPartial("table");
    
}


namespace.applyFilter = function(pl, newSearch) {
	namespace = MBT.API.SafeNames.Container('33-301');
	namespace.loadStandings();
};

try {
	if (MBT.API.History.notFound[MBT.API.History.filterIndex] && MBT.API.History.notFound[MBT.API.History.filterIndex]['group'] > 0) {
		MBT.API.get('33-301-filter-group').value = MBT.API.History.notFound[MBT.API.History.filterIndex]['group'];
		
	}
} catch (e) {}

namespace.loadStandings();

    MBT.API.Event.observe('33-301-filter-season', "change", namespace.changeSeason );

//]]>	
</script></div>
</div>
<div class="container">
	<div id="standings">
		&nbsp;</div>
</div>
<div class="container">
	<div id="stats-player" mbt_widget="600"><div id="mbt-v2-players-stats" class="mbt-v2-widget">
	<div class="mbt-v2-header">
					Statistika
			
	</div>
	<div class="mbt-v2-widget-content">
		<div id="33-600-mobile-menu" class="mbt-v2-mobile-menu">
			Povprečje
		</div>
		<nav id="33-600-mbt-v2-navigation" class="mbt-v2-navigation">
			<div id="33-600-tab-0" data-name="averages" class="mbt-v2-navigation-tab-active" prevclassname="mbt-v2-navigation-tab-active">
				Povprečje
			</div>
			<div id="33-600-tab-1" data-name="highs" class="mbt-v2-navigation-tab">
				Rekordi
			</div>
		    <div id="33-600-tab-2" data-name="totals" class="mbt-v2-navigation-tab">
				Skupno
			</div>
					</nav>
		<div class="mbt-v2-divider"></div>
		<div id="33-600-mobile-filters-block" class="mbt-v2-mobile-filters-block">
			Filtri
		</div>
		<div id="33-600-filters-block" class="mbt-v2-filters-block">
			<select id="33-600-filter-stats" data-name="stat_cat" class="mbt-v2-select"><option value="pts">Točke</option><option value="rt">Skoki</option><option value="eq">Valorizacija</option><option value="as">Asistence</option><option value="sec">Minute</option><option value="2a">Št. metov za 2 točki</option><option value="2m">Št. zadetih metov za 2 točki</option><option value="2p">% za 2 točki</option><option value="3a">Št. metov za 3 točke</option><option value="3m">Zadeti meti za 3 točke</option><option value="3p">% za 3 točke</option><option value="1a">Izvedeni prosti meti</option><option value="1m">Zadeti prosti meti</option><option value="1p">% prosti meti</option><option value="ro">Napadalni skoki</option><option value="rd">Skoki v obrambi</option><option value="to">Izg. žoge</option><option value="st">Prid. žoge</option><option value="as_to">Asistence/izg. žoge</option><option value="st_to">Prid./izg. žoge</option><option value="dd">Dvojni dvojčki</option><option value="plusminus">+/-</option></select>
		    			    <select id="33-600-filter-season" data-name="season_id" class="mbt-v2-select">
					<option value="">
						Vse sezone
					</option>
													<option value="102563" selected="selected">
								2018-2019
							</option>
													<option value="97935">
								2017-2018
							</option>
													<option value="93963">
								2016-2017
							</option>
													<option value="91049">
								2015-2016
							</option>
													<option value="89571">
								2014-2015
							</option>
													<option value="80391">
								2013-2014
							</option>
													<option value="41993">
								2012-2013
							</option>
													<option value="17193">
								2011-2012
							</option>
										</select>
									<select id="33-600-filter-stage" data-name="stage_id" class="mbt-v2-select">
				<option value="">
					Vsi deli tekmovanji
				</option>
															<option value="206747">
							1. del
						</option>
												</select>
							<select id="33-600-filter-team" data-name="team_id" class="mbt-v2-select">
					<option value="">
						Vse ekipe
					</option>
											<option value="4643213">
							3x3 Piran beli
						</option>
											<option value="163623">
							Ajdovščina A
						</option>
											<option value="163573">
							AKK Branik
						</option>
											<option value="163603">
							Brinox Medvode
						</option>
											<option value="163083">
							Celje
						</option>
											<option value="163803">
							Cerknica
						</option>
											<option value="162983">
							ECE Triglav A
						</option>
											<option value="163163">
							Elektra Šoštanj
						</option>
											<option value="4612421">
							Gorenja vas
						</option>
											<option value="163483">
							Grosuplje A
						</option>
											<option value="163313">
							Helios Suns Vzajemci
						</option>
											<option value="164323">
							Hidria
						</option>
											<option value="4619121">
							i Team
						</option>
											<option value="164493">
							Janče Ljubljana A
						</option>
											<option value="163663">
							Jesenice
						</option>
											<option value="163673">
							Ježica
						</option>
											<option value="163693">
							KOŠ Primorska A
						</option>
											<option value="163373">
							Krka beli
						</option>
											<option value="248343">
							KŠ Sani Bistrica
						</option>
											<option value="4612567">
							KŠ Sani Maribor
						</option>
											<option value="248263">
							Lastovka
						</option>
											<option value="164433">
							Litija
						</option>
											<option value="163703">
							Ljubljana A
						</option>
											<option value="164373">
							Ljutomer
						</option>
											<option value="162993">
							LTH Castings
						</option>
											<option value="162853">
							Mesarija Prunk A
						</option>
											<option value="248303">
							Miki šport Konjice
						</option>
											<option value="2231011">
							Nova Gorica mladi A
						</option>
											<option value="163413">
							Parklji A
						</option>
											<option value="163443">
							Petrol Olimpija A
						</option>
											<option value="163863">
							Pivka
						</option>
											<option value="163723">
							Plama pur - Ilirska Bistrica beli
						</option>
											<option value="163563">
							Postojna
						</option>
											<option value="4619129">
							Prebold 2014
						</option>
											<option value="163133">
							Radenska Creativ Sobota
						</option>
											<option value="163593">
							Rogaška A
						</option>
											<option value="164613">
							Šenčur GGD
						</option>
											<option value="163423">
							Šentjur Tajfun
						</option>
											<option value="163333">
							Slovan A
						</option>
											<option value="2232681">
							Stražišče Kranj
						</option>
											<option value="163773">
							Tera Tolmin
						</option>
											<option value="163753">
							Terme Olimia Podčetrtek
						</option>
											<option value="163263">
							Vojnik Gradbena trgovina G7
						</option>
											<option value="2233101">
							Vrani Vransko
						</option>
											<option value="163233">
							Vrhnika
						</option>
											<option value="163243">
							Zagorje
						</option>
											<option value="163453">
							Zlatorog
						</option>
											<option value="4646275">
							Žogica Sixt Primorska
						</option>
									</select>
						<select id="33-600-filter-position" data-name="position" class="mbt-v2-select">
				<option value="">
					Vsa igralna mesta
				</option>
									<option value="1">
						Krilo
					</option>
									<option value="2">
						Branilec
					</option>
									<option value="3">
						Center
					</option>
									<option value="4">
						Organizator igre
					</option>
									<option value="5">
						Branilec
					</option>
									<option value="6">
						Krilo
					</option>
									<option value="7">
						Krilni center
					</option>
									<option value="8">
						Branilec/Krilo
					</option>
									<option value="9">
						Krilo/Center
					</option>
									<option value="10">
						PG/SG
					</option>
									<option value="11">
						SG/SF
					</option>
									<option value="12">
						SF/PF
					</option>
									<option value="13">
						PF/C
					</option>
							</select>
		</div>
		<div class="mbt-v2-divider"></div>
	    <div id="33-600-tab-container">	<p class="mbt-v2-no-data-text">
		Ni rezultatov
	</p>	
		
</div>
	</div>
</div>

<script type="text/javascript">
//<![CDATA[
	
	var namespace = MBT.API.SafeNames.Container('33-600');

	namespace.mobileMenu = new MBT.API.createResponsiveNavigation({
		menuContainer : "33-600-mbt-v2-navigation",
		mobileMenuContainer : "33-600-mobile-menu",
		mobileMenuCloseText: "Izberi",
	});

	namespace.mobileFilters = new MBT.API.createResponsiveNavigation({
		menuContainer : "33-600-filters-block",
		mobileMenuContainer : "33-600-mobile-filters-block",
		filtersMode: true
	});

	namespace.params = {};

	namespace.params.use_advanced_filter = true;

	namespace.params.filter = {};

	namespace.availableFilters = MBT.API.get('33-600-filters-block').childNodes;

	for(key in namespace.availableFilters) {
		if(namespace.availableFilters[key].nodeType == 1) {
			namespace.params.filter[namespace.availableFilters[key].getAttribute('data-name')] = namespace.availableFilters[key].value;
		}
	}

	namespace.onFilterChange = function(e, filter) {

		namespace.params.filter[filter] = e.target.value;

		namespace.params.page = 0;

		if(filter == 'season_id' || filter == 'stage_id') {
			if(namespace.params.filter.team_id) {
				delete namespace.params.filter.team_id;
				if(filter == 'season_id') {
					delete namespace.params.filter.stage_id;
				}
				new MBT.API.Widgets.Widget({
					widgetId: 600,
					container: '33-600-filter-team',
					state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
					params: {
						season_id: namespace.params.filter.season_id,
						stage_id: namespace.params.filter.stage_id
					}
				}).renderPartial('get-teams');
			}

			if(filter != 'stage_id') {
				new MBT.API.Widgets.Widget({
					widgetId: 600,
					container: '33-600-filter-stage',
					state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
					params: {
						season_id: namespace.params.filter.season_id
					}
				}).renderPartial('get-stages');
			}
		}

		new MBT.API.Widgets.Widget({
			widgetId: 600,
			container: '33-600-tab-container',
			state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
			params: namespace.params
		}).renderPartial(namespace.partial);
	}

	namespace.onTabClick = function(tabPanel, index, part) {

		namespace.params.page = 0;

		for(key in namespace.availableFilters) {
			if(namespace.availableFilters[key].nodeType == 1) {
				if(namespace.availableFilters[key].getAttribute('data-name') == 'season_id') {
					if(namespace.availableFilters[key].options[0].value == "") {
						namespace.availableFilters[key].selectedIndex = 1;
						namespace.params.filter.season_id = namespace.availableFilters[key].options[1].value;
					} else {
					    namespace.availableFilters['key'].selectedIndex = 1;
					    namespace.params.filter.season_id = namespace.availableFilters[key].options[1].value;
					}
				} else {
					namespace.availableFilters[key].selectedIndex =0;
					namespace.params.filter[namespace.availableFilters[key].getAttribute('data-name')] = namespace.availableFilters[key].options[0].value;
				}
			}
		}

		namespace.partial = part;

		new MBT.API.Widgets.Widget({
				widgetId: 600,
				container: '33-600-filter-stats',
				state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
				params: {
					tab: part
				}
			}).renderPartial('get-stat-categories');

		new MBT.API.Widgets.Widget({
			widgetId: 600,
			container: '33-600-tab-container',
			state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
			params: namespace.params
		}).renderPartial(namespace.partial);
	}

	namespace.tabs = [];

	namespace.menuItems = MBT.API.get('33-600-mbt-v2-navigation').childNodes;

	for(var i = 0; i <  namespace.menuItems.length; i++) {
        if(namespace.menuItems[i].nodeType == 1) {
        	namespace.tabs.push({
        		tabId: namespace.menuItems[i].id,
        		needLoad: MBT.API.Function.createDelegate(namespace.onTabClick, null, namespace.menuItems[i].getAttribute('data-name'), 2),
        	});
        }
	}

	namespace.TabController = new MBT.API.UI.TabPanel({
		container: '33-600-tab-container',
		tabClass: 'mbt-v2-navigation-tab',
        activeTabClass: 'mbt-v2-navigation-tab-active',
        tabs: namespace.tabs,
        noCache: true,
		activeTab: 0
	});

	namespace.TabController.activeTab = 0;

	switch (namespace.TabController.activeTab) {
		case 0:
			namespace.partial = 'averages';
			break;
		case 1:
			namespace.partial = 'highs';
			break;
	    case 2:
			namespace.partial = 'totals';
			break;
		case 3:
			namespace.partial = '40min';
			break;
	}

	MBT.API.Event.observe('33-600-filter-season', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['season_id'], 1));
	MBT.API.Event.observe('33-600-filter-stats', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['stat_cat'], 1));
	MBT.API.Event.observe('33-600-filter-month', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['month_id'], 1));
	MBT.API.Event.observe('33-600-filter-stage', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['stage_id'], 1));
	MBT.API.Event.observe('33-600-filter-team', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['team_id'], 1));
	MBT.API.Event.observe('33-600-filter-position', "change", MBT.API.Function.createDelegate(namespace.onFilterChange, null, ['position'], 1));

	

	//]]>
</script></div>
</div>
<div class="container">
	<div id="stats-team" mbt_widget="601"><div id="mbt-v2-teams-stats" class="mbt-v2-widget">
	<div class="mbt-v2-header">
					Statistika
			
	</div>
	<div class="mbt-v2-widget-content">
					<div id="33-601-mobile-menu" class="mbt-v2-mobile-menu">
				Povprečje
			</div>
			<nav id="33-601-mbt-v2-navigation" class="mbt-v2-navigation">
				<div id="33-601-tab-0" data-name="averages" class="mbt-v2-navigation-tab-active" prevclassname="mbt-v2-navigation-tab-active">
					Povprečje
				</div>
				<div id="33-601-tab-1" data-name="highs" class="mbt-v2-navigation-tab">
					Največ
				</div>
				<div id="33-601-tab-2" data-name="totals" class="mbt-v2-navigation-tab">
					Skupno
				</div>
			</nav>
			<div class="mbt-v2-divider"></div>
			
		<div id="33-601-filters-block" class="mbt-v2-filters-block_">
			<select id="33-601-category-selector" class="mbt-v2-select" data-name="stat_cat">
									<option value="pts" selected="selected">
						Točke
					</option>
									<option value="rt">
						Skoki
					</option>
									<option value="eq">
						Valorizacija
					</option>
									<option value="as">
						Asistence
					</option>
									<option value="2a">
						Št. metov za 2 točki
					</option>
									<option value="2m">
						Št. zadetih metov za 2 točki
					</option>
									<option value="2p">
						% za 2 točki
					</option>
									<option value="3a">
						Št. metov za 3 točke
					</option>
									<option value="3m">
						Zadeti meti za 3 točke
					</option>
									<option value="3p">
						% za 3 točke
					</option>
									<option value="1a">
						Izvedeni prosti meti
					</option>
									<option value="1m">
						Zadeti prosti meti
					</option>
									<option value="1p">
						% prosti meti
					</option>
									<option value="ro">
						Napadalni skoki
					</option>
									<option value="rd">
						Skoki v obrambi
					</option>
									<option value="to">
						Izg. žoge
					</option>
									<option value="st">
						Prid. žoge
					</option>
									<option value="as_to">
						Asistence/izg. žoge
					</option>
									<option value="st_to">
						Prid./izg. žoge
					</option>
									<option value="attnd">
						Gledalcev
					</option>
							</select>
							<select id="33-601-season-selector" class="mbt-v2-select" data-name="season_id">
				    <option value="">Vse sezone</option>
	                    		                    <option value="102563" selected="selected">
			                    2018-2019
		                    </option>
		                		                    <option value="97935">
			                    2017-2018
		                    </option>
		                		                    <option value="93963">
			                    2016-2017
		                    </option>
		                		                    <option value="91049">
			                    2015-2016
		                    </option>
		                		                    <option value="89571">
			                    2014-2015
		                    </option>
		                		                    <option value="80391">
			                    2013-2014
		                    </option>
		                		                    <option value="41993">
			                    2012-2013
		                    </option>
		                		                    <option value="17193">
			                    2011-2012
		                    </option>
		                 
				</select>
						<select id="33-601-stage-selector" class="mbt-v2-select" data-name="stage_id">
				<option value="">
					Vsi deli tekmovanja
				</option>
									<option value="206747">
						1. del
					</option>
							</select> 
		</div>
		<div class="mbt-v2-divider"></div>
		<div id="33-601-tab-container"></div>
	</div>
</div>

<script type="text/javascript">
//<![CDATA[
	
		var namespace = MBT.API.SafeNames.Container('33-601');

		namespace.params = {};
		namespace.partial = 'highs';

		
					namespace.params.teamMode = false;
				 

		namespace.params.filter = {};
		namespace.params.use_advanced_filter = true;

		namespace.availableFilters = MBT.API.get('33-601-filters-block').childNodes;

		namespace.onFilterChange = function(e, filter) {
			
			namespace.params.filter[filter] = e.target.value;
			namespace.params.page = 0;

			if(filter == 'season_id') {
				delete namespace.params.filter.stage_id;
				new MBT.API.Widgets.Widget({
					widgetId: 601,
					container: '33-601-stage-selector',
					state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
					params: {
						season_id: namespace.params.filter.season_id
					}
				}).renderPartial('get-stages');
			}

			new MBT.API.Widgets.Widget({
				widgetId: 601,
				container: '33-601-tab-container',
				state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
				params: namespace.params
			}).renderPartial(namespace.partial);
		}

		for(key in namespace.availableFilters) {
			if(namespace.availableFilters[key].nodeType == 1) {
				namespace.params.filter[namespace.availableFilters[key].getAttribute('data-name')] = namespace.availableFilters[key].value;
	            MBT.API.Event.observe(namespace.availableFilters[key], 'change', MBT.API.Function.createDelegate(namespace.onFilterChange, null, [namespace.availableFilters[key].getAttribute('data-name')], 1));
			}
		}

		if(!namespace.params.teamMode) {
			namespace.onTabClick = function(tabPanel, index, part) {

				namespace.partial = part;
				namespace.params.page = 0;

				for(key in namespace.availableFilters) {
					if(namespace.availableFilters[key].nodeType == 1) {
						if(namespace.availableFilters[key].getAttribute('data-name') == 'season_id') {
							if(namespace.availableFilters[key].options[0].value == "") {
								namespace.availableFilters[key].selectedIndex = 1;
								namespace.params.filter.season_id = namespace.availableFilters[key].options[1].value;
							} else {
							    namespace.availableFilters['key'].selectedIndex = 1;
							    namespace.params.filter.season_id = namespace.availableFilters[key].options[1].value;
							}
						} else {
							namespace.availableFilters[key].selectedIndex =0;
							namespace.params.filter[namespace.availableFilters[key].getAttribute('data-name')] = namespace.availableFilters[key].options[0].value;
						}
					}
				}

		        new MBT.API.Widgets.Widget({
		        	widgetId: 601, 
					container: '33-601-tab-container',
					state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
					params: {
						season_id: '102563'
					}
				}).renderPartial(part);
		    }

			namespace.tabs = [];

			namespace.menuItems = MBT.API.get('33-601-mbt-v2-navigation').childNodes;

			for(var i = 0; i <  namespace.menuItems.length; i++) {
		        if(namespace.menuItems[i].nodeType == 1) {
		        	namespace.tabs.push({
		        		tabId: namespace.menuItems[i].id,
		        		needLoad: MBT.API.Function.createDelegate(namespace.onTabClick, null, namespace.menuItems[i].getAttribute('data-name'), 2),
		        	});
		        }
			}

			namespace.TabController = new MBT.API.UI.TabPanel({
				container: '33-601-tab-container',
				tabClass: 'mbt-v2-navigation-tab',
		        activeTabClass: 'mbt-v2-navigation-tab-active',
		        tabs: namespace.tabs,
		        noCache: true,
		        activeTab: 0
			});
		} else {
			new MBT.API.Widgets.Widget({
	        	widgetId: 601, 
				container: '33-601-tab-container',
				state: 'IDg5NTkyNzQxOGE6MTI6e3M6MTk6ImxlYWd1ZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoidGVhbV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxNzoiZ2FtZV9saW5rX3Zpc2libGUiO3M6MToiMSI7czoxOToicGxheWVyX2xpbmtfdmlzaWJsZSI7czoxOiIxIjtzOjk6ImxlYWd1ZV9pZCI7czo1OiIxMDkzMyI7czoxNDoiZ2FtZV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoiZ2FtZV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlR2FtZSI7czoxNDoidGVhbV9saW5rX3R5cGUiO3M6MToiMyI7czoxNzoidGVhbV9saW5rX2hhbmRsZXIiO3M6MTI6Im5hdmlnYXRlVGVhbSI7czoxNjoicGxheWVyX2xpbmtfdHlwZSI7czoxOiIzIjtzOjE5OiJwbGF5ZXJfbGlua19oYW5kbGVyIjtzOjE0OiJuYXZpZ2F0ZVBsYXllciI7czo4OiJ0ZW1wbGF0ZSI7czoyOiJ2MiI7fQ==',
				params: {
					season_id: '102563'
				}
			}).renderPartial(namespace.partial);
		}

	    if(!namespace.params.teamMode) {
		    namespace.mobileNav = new MBT.API.createResponsiveNavigation({
				menuContainer : "33-601-mbt-v2-navigation",
				mobileMenuContainer : "33-601-mobile-menu",
				mobileMenuOpenedClass : 'mbt-v2-mobile-menu-opened',
				mobileMenuCloseText: 'Izberi'
			});
	    }
	
//]]>
</script>	</div>
</div>
<script>
        var league = 10933;
    </script><!-- Need for schedule widget --><!-- Load schedule widget --><script>

        var request = new MBT.API.Widgets.RenderRequest();
        var widget = new MBT.API.Widgets.Widget();
        widget.setContainer('schedule');
        widget.setWidgetId(MBT.API.Widgets.SEASON_SCHEDULE_LONG_WIDGET);
        widget.setParam('team_link_visible', 1);
        widget.setParam('show_season_selector', 1);
        widget.setParam('game_link_visible', 1);
        widget.setParam('player_link_visible', 1);
        widget.setParam('team_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('game_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('player_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('team_link_handler', 'navigateTeam');
        widget.setParam('game_link_handler', 'navigateGame');
        widget.setParam('player_link_handler', 'navigatePlayer');
        widget.setParam('arena_link_visible', 1);
        widget.setParam('arena_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('arena_link_handler', 'navigateArena');
        widget.setParam('league_id', league);
        widget.setParam('season_id', season);
        widget.setParam('game_days', 1 );
        widget.setParam('show_referee_city', '1');
        widget.setParam('items_on_page', '30');
        widget.setParam('stage_levels_visible', 2);
        widget.setParam('template', 'v2');
        request.addWidget(widget);
        request.render();
    </script><!-- Need for standings widget --><!-- Load standings widget --><script>
        var request = new MBT.API.Widgets.RenderRequest();
        var widget = new MBT.API.Widgets.Widget();
        widget.setContainer('standings');
        widget.setWidgetId(MBT.API.Widgets.SEASON_STANDINGS_LONG_WIDGET);
        widget.setParam('league_link_visible', 2);
        widget.setParam('team_link_visible', 1);
        widget.setParam('game_link_visible', 2);
        widget.setParam('player_link_visible', 1);
        widget.setParam('full_standings_link_visible', 2);
        widget.setParam("stage_levels_visible", 2);
        widget.setParam('league_id', league);
        widget.setParam('season_id', season);
        widget.setParam('team_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('team_link_handler', 'navigateTeam');
        widget.setParam('full_standings_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('full_standings_link_handler', 'navigateStandings');
        widget.setParam('template', 'v2');
        request.addWidget(widget);
        request.render();
    </script><!-- Need for standings widget --><script>
        var request = new MBT.API.Widgets.RenderRequest();
        var widget = new MBT.API.Widgets.Widget();
        widget.setContainer('standings');
        widget.setWidgetId(MBT.API.Widgets.SEASON_STANDINGS_LONG_WIDGET);
        widget.setParam('league_link_visible', 2);
        widget.setParam('team_link_visible', 1);
        widget.setParam('game_link_visible', 2);
        widget.setParam('player_link_visible', 1);
        widget.setParam('full_standings_link_visible', 2);
        widget.setParam("stage_levels_visible", 2);
        widget.setParam('league_id', league);
        widget.setParam('season_id', season);
        widget.setParam('team_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('team_link_handler', 'navigateTeam');
        widget.setParam('full_standings_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('full_standings_link_handler', 'navigateStandings');
        widget.setParam('template', 'v2');
        request.addWidget(widget);
        request.render();
    </script><!-- Load player stats widget --><script>
        var request = new MBT.API.Widgets.RenderRequest();
        widget = new MBT.API.Widgets.Widget();
        widget.setContainer('stats-player');
        widget.setWidgetId(MBT.API.Widgets.STATISTICS_PLAYERS_WIDGET);
        widget.setParam('league_link_visible', 1);
        widget.setParam('team_link_visible', 1);
        widget.setParam('game_link_visible', 1);
        widget.setParam('player_link_visible', 1);
        widget.setParam('league_id', league);
        widget.setParam('season_id', season);
        widget.setParam('game_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('game_link_handler', 'navigateGame');
        widget.setParam('team_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('team_link_handler', 'navigateTeam');
        widget.setParam('player_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('player_link_handler', 'navigatePlayer');
        widget.setParam('template', 'v2');
        request.addWidget(widget);
        request.render();
    </script><!-- Load team stats widget --><script>
        var request = new MBT.API.Widgets.RenderRequest();
        var widget = new MBT.API.Widgets.Widget();
        widget.setContainer('stats-team');
        widget.setWidgetId(MBT.API.Widgets.STATISTICS_TEAMS_WIDGET);
        widget.setParam('league_link_visible', 1);
        widget.setParam('team_link_visible', 1);
        widget.setParam('game_link_visible', 1);
        widget.setParam('player_link_visible', 1);
        widget.setParam('league_id', league);
        widget.setParam('season_id', season);
        widget.setParam('game_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('game_link_handler', 'navigateGame');
        widget.setParam('team_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('team_link_handler', 'navigateTeam');
        widget.setParam('player_link_type', MBT.API.NAVIGATION_TYPE_CUSTOM);
        widget.setParam('player_link_handler', 'navigatePlayer');
        widget.setParam('template', 'v2');
        request.addWidget(widget);
        request.render();
    </script></div></div></div><div class="container-bootstrap banner-h"><div class="row"><div class="col-md-12 text-center"><script language="JavaScript" type="text/javascript" src="https://oglasi.kzs.si/adx.js"></script><script language="JavaScript" type="text/javascript"><!--
if (!document.phpAds_used) document.phpAds_used = ',';phpAds_random = new String (Math.random()); phpAds_random = phpAds_random.substring(2,11);document.write ("<" + "script language='JavaScript' type='text/javascript' src='");document.write ("https://oglasi.kzs.si/adjs.php?n=" + phpAds_random);document.write ("&amp;what=zone:3");document.write ("&amp;exclude=" + document.phpAds_used);if (document.referrer)document.write ("&amp;referer=" + escape(document.referrer));document.write ("'><" + "/script>");
//--></script><script language="JavaScript" type="text/javascript" src="https://oglasi.kzs.si/adjs.php?n=711911107&amp;what=zone:3&amp;exclude=,"></script><a href="https://oglasi.kzs.si/adclick.php?bannerid=596&amp;zoneid=3&amp;source=&amp;dest=http%3A%2F%2Fwww.gorenje.si%2Fprodaja%2Fakcije%2F2018%2Fprava-izbira-za-chefe+" target="_blank"><img src="https://oglasi.kzs.si/adimage.php?filename=18_03_29__promobanner_kzs.si.jpg&amp;contenttype=jpeg" width="710" height="90" alt="" title="" border="0"></a><div id="beacon_596" style="position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="https://oglasi.kzs.si/adlog.php?bannerid=596&amp;clientid=354&amp;zoneid=3&amp;source=&amp;block=0&amp;capping=0&amp;cb=5022a07f9c671239a1b24c6e033f6335" width="0" height="0" alt="" style="width: 0px; height: 0px;"></div></div></div></div>

<script type="text/javascript" src="/js/fancybox/jquery.fancybox.pack.js"></script>
<script type="text/javascript" src="/js/fancybox/jquery.fancybox-buttons.js"></script>
<script type="text/javascript" src="/js/fancybox/jquery.fancybox-media.js"></script>
<script type="text/javascript" src="/js/fancybox/jquery.fancybox-thumbs.js"></script>

<script type="text/javascript">
<!--
jQuery(document).ready(function() {
	jQuery('.agal').fancybox({
		type : 'image',
		padding: 0,
		helpers : {
	     media : {}
	    }
    });
});
//-->
</script>
						
				<div style="clear: both;"></div>
			</div>
		</div>
	</div><!--middle parts ends-->
</div><!--container parts ends-->
		








<div class="container-fluid sponsor-container"><div class="divider"></div><div class="row"><div class="col-md-12 sponsor-container-inner"><div id="sponsors" class="carousel slide" data-ride="carousel" data-interval="7000"><div class="row general-sponsors"><div class="col-md-offset-2 col-md-4  col-sm-6 col-xs-6 col-xxs-12 g-sp-right spon-gen"><a class="spon-gen-transform"></a><a href="https://telemach.si/" target="_blank" title="Telemach"><img src="/binary/showimage/id/8073/rw/220/rp/true/h/35abd8"></a><p class="gen-spon">Generalni sponzor</p></div><div class="col-md-4  col-sm-6 col-xs-6 col-xxs-12 g-sp-left spon-plat"><a href="http://www.adidas.com" target="_blank" title="Adidas"><img src="/binary/showimage/id/4452/rw/220/rp/true/h/591ad9"></a><a href="http://www.spar.si/" target="_blank" title="Spar"><img src="/binary/showimage/id/7024/rw/220/rp/true/h/def40f"></a><p>Platinasta sponzorja</p></div></div><div class="carousel-inner" role="listbox"><div class="item active"><div class="slider-inner"><div class="sponsors golden"><div class="logos"><a href="http://www.nkbm.si/" target="_blank" title="NKBM"><img src="/binary/showimage/id/4698/rw/154/rp/true/h/6b1296"></a><a href="http://www.petrol.si/" target="_blank" title="Petrol"><img src="/binary/showimage/id/4697/rw/154/rp/true/h/a005d6"></a></div><p>Zlati sponzorji</p></div><div class="sponsors silver"><div class="logos"><a href="http://www.a-cosmos.si/" target="_blank" title="A-Cosmos"><img src="/binary/showimage/id/14395/rw/154/rp/true/h/664c2e"></a><a href="http://www.pivo-lasko.si/slo/" target="_blank" title="Laško"><img src="/binary/showimage/id/15052/rw/154/rp/true/h/a27a92"></a><a href="http://www.spalding.si/" target="_blank" title="Spalding"><img src="/binary/showimage/id/5059/rw/154/rp/true/h/127dbc"></a><a href="http://www.sony.si/section/zacetna-stran" target="_blank" title="Sony"><img src="/binary/showimage/id/5063/rw/154/rp/true/h/4b33e7"></a></div><p>Srebrni sponzorji</p></div></div></div><div class="item "><div class="slider-inner"><div class="sponsors golden"><div class="logos"><a href="http://www.kompas.si/" target="_blank" title="Kompas"><img src="/binary/showimage/id/4700/rw/154/rp/true/h/ccb5be"></a><a href="https://www.dm-drogeriemarkt.si/" title="DM"><img src="/binary/showimage/id/5053/rw/154/rp/true/h/e72f0f"></a></div><p>Srebrni sponzorji</p></div><div class="sponsors silver"><div class="logos"><a href="https://www.e-stave.com/" target="_blank" title="Športna loterija"><img src="/binary/showimage/id/14249/rw/154/rp/true/h/f8f4a0"></a><a href="http://www.elektro-gorenjska.si/" target="_blank" title="Elektro Gorenjska"><img src="/binary/showimage/id/5054/rw/154/rp/true/h/143214"></a><a href="http://loterija.si/" target="_blank" title="Loterija Slovenije"><img src="/binary/showimage/id/5813/rw/154/rp/true/h/9478b8"></a><a href="http://www.hse.si/si/" title="HSE"><img src="/binary/showimage/id/5327/rw/154/rp/true/h/fdec53"></a></div><p>Bronasti sponzorji</p></div></div></div><div class="item "><div class="slider-inner"><div class="sponsors golden"><div class="logos"><a href="http://www.gorenje.si/" target="_blank" title="Gorenje"><img src="/binary/showimage/id/5069/rw/154/rp/true/h/08e47e"></a><a href="http://www.knaufinsulation.si/" target="_blank" title="Knauf"><img src="/binary/showimage/id/5065/rw/154/rp/true/h/4ef2ac"></a><a href="http://www.slo-zeleznice.si/sl/" target="_blank" title="Slovenske železnice"><img src="/binary/showimage/id/5055/rw/154/rp/true/h/9637da"></a><a href="http://www.gen-energija.si/" target="_blank" title="GEN-I"><img src="/binary/showimage/id/5066/rw/154/rp/true/h/102b2e"></a></div><p>Bronasti sponzorji</p></div><div class="sponsors silver"><div class="logos"><a href="https://www.austria-trend.at/en/hotels/ljubljana" target="_blank" title="ATH"><img src="/binary/showimage/id/7503/rw/154/rp/true/h/229c00"></a><a href="http://www.fundacijazasport.org/" target="_blank" title="Fundacija za šport"><img src="/binary/showimage/id/4883/rw/154/rp/true/h/9d9a7a"></a></div><p>Partnerji</p></div></div></div><div class="item "><div class="slider-inner"><div class="sponsors golden"><div class="logos"><a href="http://www.mss.gov.si/" target="_blank" title="MIZS"><img src="/binary/showimage/id/5068/rw/154/rp/true/h/75d6d3"></a><a href="http://www.europlakat.si/" target="_blank" title="Europlakat"><img src="/binary/showimage/id/5815/rw/154/rp/true/h/dafc3b"></a><a href="http://www.vzivo.si/" target="_blank" title="V živo"><img src="/binary/showimage/id/5814/rw/154/rp/true/h/4db0b8"></a><a href="http://www.arspharmae.com/" target="_blank" title="Arspharmae"><img src="/binary/showimage/id/5064/rw/154/rp/true/h/4caeb9"></a><a href="http://www.prometmesec.si/" target="_blank" title="Nomago"><img src="/binary/showimage/id/6911/rw/154/rp/true/h/0a5523"></a><a href="http://eventim.si/" target="_blank" title="Eventim"><img src="/binary/showimage/id/5057/rw/154/rp/true/h/deab95"></a></div><p>Partnerji</p></div></div></div><div class="item "><div class="slider-inner"><div class="sponsors golden"><div class="logos"><a href="https://www.modiana.si/" target="_blank" title="Modiana"><img src="/binary/showimage/id/5145/rw/154/rp/true/h/5b102f"></a></div><p>Partnerji</p></div><div class="sponsors silver"><div class="logos"><a href="https://www.grosbasket.com/sl" target="_blank" title="Grosbasket"><img src="/binary/showimage/id/7025/rw/154/rp/true/h/54a275"></a></div><p>Generalni sponzor DP 3x3</p></div></div></div></div><a class="left carousel-control" href="#sponsors" role="button" data-slide="prev"><span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span><span class="sr-only">Nazaj</span></a><a class="right carousel-control" href="#sponsors" role="button" data-slide="next"><span class="glyphicon glyphicon-triangle-right" aria-hidden="true"></span><span class="sr-only">Naprej</span></a></div></div></div></div>
<div class="footer">
  <div class="container-bootstrap">
    <div class="row">
      <div class="col-md-10 col-md-offset-1 col-sm-12">
        <div class="row">
		  <div class="col-md-3 col-sm-3 col-xs-3 col-xxs-6"><h3>Medijsko središče</h3><ul><li><a href="http://cms.dag-files.com/akreditacije">Akreditacije</a></li><li><a href="http://cms.dag-files.com/clanek/Organizacija/Logotipi/cid/130">Logotipi</a></li><li><a href="http://cms.dag-files.com/clanek/Organizacija/Vse-o-KZS/cid/125">Kontakt</a></li><li><a href="http://cms.dag-files.com/clanek/Vstopnice/cid/151">Vstopnice</a></li><li><a href="http://cms.dag-files.com/clanek/Prenosi/cid/142">Prenosi</a></li></ul></div>
		  <div class="col-md-3 col-sm-3 col-xs-3 col-xxs-6"><h3>KZS</h3><ul><li><a href="http://cms.dag-files.com/clanek/Organizacija/Dokumenti/cid/131">Dokumenti</a></li><li><a href="http://cms.dag-files.com/article/id/531">Sodniški iskalnik</a></li><li><a href="http://www.kosarkarski-trenerji.com/" target="_blank">ZKTS</a></li><li><a href="http://cms.dag-files.com/clanek/Trgovina/cid/141">Trgovina</a></li><li><a href="http://old.kzs.si/" target="_blank">Arhiv KZS</a></li></ul></div>
		  <div class="col-md-3 col-sm-3 col-xs-3 col-xxs-6"><h3>Reprezentance</h3><ul><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Clani/cid/37">Člani</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Clanice/cid/83">Članice</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Fantje-U20/cid/78">Fantje U20</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Dekleta-U20/cid/84">Dekleta U20</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Fantje-U18/cid/79">Fantje U18</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Dekleta-U18/cid/85">Dekleta U18</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Fantje-U16/cid/80">Fantje U16</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Dekleta-U16/cid/86">Dekleta U16</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Fantje-U14/cid/82">Fantje U14</a></li><li><a href="http://cms.dag-files.com/clanek/Reprezentance/Dekleta-U14/cid/88">Dekleta U14</a></li></ul></div>
		  <div class="col-md-3 col-sm-3 col-xs-3 col-xxs-6"><h3>Projekti in tekmovanja</h3><ul><li><a href="http://cms.dag-files.com/clanek/Projekti/Igriva-kosarka/cid/91">Igriva košarka</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/Lipko/cid/155">Lipko</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/Regijsko-selekcioniranje/cid/93">Regijsko selekcioniranje</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/KZS-tabor/cid/92">Tabori</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/Kosarkarski-supersolar/cid/94">Košarkarski Superšolar</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/U14-slovenia-ball/cid/95">U14 Slovenia Ball</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/All-Stars/cid/96">All stars</a></li><li><a href="http://cms.dag-files.com/clanek/Projekti/Pokal-Eurobasket-2017/cid/200">Pokal Eurobasket 2017</a></li><li><a href="http://cms.dag-files.com/clanek/Tekmovanja/Liga-Nova-KBM/cid/66">Liga Nova KBM</a></li><li><a href="http://cms.dag-files.com/clanek/Tekmovanja/1.-SKL-za-zenske/cid/67">1. SKL za ženske</a></li><li><a href="http://cms.dag-files.com/clanek/Tekmovanja/Pokal-Spar/cid/72#mbt:33-303$t&amp;0=1">Pokal Spar</a></li><li><a href="http://cms.dag-files.com/clanek/3x3/Samsung-drzavno-prvenstvo/cid/209">Košarka 3x3</a></li></ul></div>
		  <div class="cb"></div>
        </div>
      </div>
    </div>
  </div>
</div>		


 




<div class="cookieCont" id="cookidiot"><div class="moreInfoCont">Ta spletna stran uporablja piškotke z namenom, da vam ponudimo najboljšo možno uporabniško izkušnjo na naših spletnih straneh. <a href="/clanek/Piskotki/cid/280">Več</a></div><a class="agreeLink" id="ci_agree" onclick="CookieIdiot.onAgreeLinkClick(this, true);">Strinjam se</a><a class="disagreeLink" id="ci_notagree" onclick="CookieIdiot.onAgreeLinkClick(this, false);">Ne strinjam se</a><div class="lm" id="cookIdiotLm" style="display:none;"></div></div>

<script type="text/javascript">
var CookieIdiot = CookieIdiot||{};
(function() {
	CookieIdiot.onAgreeLinkClick = function(sender, agree) {
		var requestData = {};
		requestData['m'] = 'ta';

		if(agree === true) {
			var trackCheck = jQuery(sender).closest('#cookidiot').find('#trackCheck');
			if(trackCheck.length == 0) {
				requestData['ag'] = agree===true?'1':'0';
			} else {
				requestData['ag'] = trackCheck.get(0).checked===true?'1':'0';
			}
		} else {
			requestData['ag'] = agree===true?'1':'0';
		}
		
		jQuery.ajax({
			url: '/ajax/cookieidiot',
			data: (requestData),
			dataType: 'xml',
			_cookieOnSuc: requestData['ag']=='1',
			success: function(xml) {
				if(jQuery(xml).find('status').text() == '1' && !!this._cookieOnSuc) {
					var name = 'ccidiot', value='1';
					var expires = "";
			        var date = new Date();
			        date.setTime(date.getTime() + (365*24*60*60*1000)); //1 year
			        expires = "; expires=" + date.toUTCString();
				    document.cookie = name + "=" + (value || "")  + expires + "; path=/";
				}
			}
		});

		jQuery(sender).closest('#cookidiot').slideUp();		
	};

	CookieIdiot.onLearnMoreLinkClick = function(sender) {
		var requestData = {};
		requestData['m'] = 'lm';
		
		jQuery.ajax({
			snd: sender,
			url: '/ajax/cookieidiot',
			data: (requestData),
			dataType: 'xml',
			error: function(){_onLearnMoreError(this.snd, null);},
			success: function(xml) {
				if(jQuery(xml).find('status').text() == '1') {
					var cidiot = jQuery(this.snd).closest('#cookidiot');
					cidiot.find('#ci_agree,#ci_notagree').remove();
					cidiot.find('#cookIdiotLm').html(jQuery(xml).find('lmhtml').text()).show();
					jQuery(this.snd).remove();
				} else {
					_onLearnMoreError(this.snd, jQuery(xml).find('lmhtml').text());
				}
			}
		});
	};

	var _onLearnMoreError = function(sender, msg) {
		var lmDiv = jQuery(sender).closest('#cookidiot').find('#cookIdiotLm');
		if(msg == null) {
			lmDiv.html('<div class="formerror">'+Utf8.Zh+'al je pri'+Utf8.sh+'lo do napake pri pridobivanju podatkov.</div>');
		} else {
			lmDiv.html(msg);
		}
		lmDiv.show();
	};
})();
</script>		
<script type="text/javascript">
<!--
jQuery(document).ready(function() {
	jQuery(document).click(function() {Common.showGivenDivAndCloseOthers(null);});
});
//-->
</script>



</body></html> #